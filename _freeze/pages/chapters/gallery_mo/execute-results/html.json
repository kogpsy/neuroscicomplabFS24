{
  "hash": "25810aafbaa3b001cf4c1fd9b9d99e51",
  "result": {
    "markdown": "---\ntitle: \"Plot Gallery - Mo\"\nauthor:\n  - name: Daniel Fitze\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0003-0158-7459  \n  - name: Gerda Wyssen\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0001-7427-3149\nlicense: CC BY-SA 4.0\ncitation: true\nbibliography: ../../bibliography.bib\nformat:\n    html:\n        toc: true\n---\n\n::: {.cell}\n\n:::\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n#d <- as.data.frame()\n\n# Plot erstellen\n# Rohdaten plotten\nplot_rohdaten <- ggplot(d, aes(x = trial, y = rt, color = congruent)) +\n  geom_point() +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (s)\",\n       color = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Zusammenfassendes Maß (Boxplot) erstellen\nplot_zusammenfassung <- ggplot(d, aes(x = as.factor(congruent), y = rt, fill = as.factor(congruent))) +\n  geom_boxplot() +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Verteilung der Reaktionszeiten nach Kongruenz\",\n       x = \"Kongruenz\",\n       y = \"Reaktionszeit (s)\",\n       fill = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Optional: Facets verwenden, um nach weiteren Variablen zu unterscheiden\n# Hier müsstest du die entsprechenden Facets anpassen und deine Daten entsprechend strukturieren\nplot_facets <- ggplot(d, aes(x = trial, y = rt, color = congruent)) +\n  geom_point() +\n  facet_wrap(~word) +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung und Worttyp\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (s)\",\n       color = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n# print (d)\n# Optional: Speichern des Plots als Bild\n#ggsave(\"stroop_plot.png\", plot_rohdaten, width = 8, height = 6, units = \"in\")\n\n# Plots anzeigen\n#plot_rohdaten\n#plot_zusammenfassung\n#plot_facets\n\n\n\n# Plot erstellen übereinander\nplot_all <- ggplot(d, aes(x = trial, y = rt)) +\n  geom_point(aes(color = factor(congruent)), position = position_jitter(width = 0.2), alpha = 0.5) +  # Rohdaten anzeigen\n  geom_boxplot(aes(fill = factor(congruent)), alpha = 0.8, outlier.shape = NA) +  # Zusammenfassende Boxplots\n  labs(title = \"Stroop Task: Reaktionszeiten\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (in Sekunden)\",\n       color = \"Kongruenz\",\n       fill = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Plot anzeigen\nprint(plot_all)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d |>\n    filter(rt > 0.1 & rt < 1.75) |>\n    select(id, trial, congruent, rt)|>\n    mutate (congruent = as.factor(congruent)) |>\n    mutate(congruent = case_match(congruent,\n                      \"0\" ~ \"inkongruent\",\n                      \"1\" ~ \"kongruent\"))\n\np_boxplot <- d |>\n    filter(id %in% c(\"sub-10318869\", \"sub-1106725\", \"sub-113945\", \"sub-11959984\",\n                     \"sub-12224605\", \"sub-12242654\", \"sub-13366559\", \"sub-13662910\",\n                     \"sub-13937586\", \"sub-13771505\", \"sub-73916681\", \"sub-74487595\",\n                     \"sub-75143607\", \"sub-89031395\", \"sub-90289188\")) |>\n    ggplot(aes(x = congruent, y = rt, color = congruent)) +\n    geom_jitter(alpha = 0.25, width = 0.2) +\n    geom_boxplot(alpha = 0, width = 0.2, color = \"black\") +\n    scale_color_manual(values = c(kongruent  = \"green2\",\n                                  inkongruent = \"pink\")) +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\") +\n    labs(title = \"Reaktionszeit bei In- & Kongruenz\",\n         subtitle = \"Ist die Reaktionszeit geringer bei Kongurenz?\",\n         x = \"Kongruenz\",\n         y = \"Reaktionszeit\",\n         caption = \"Daten von 15 Vpn\" )\n\np_boxplot\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n#Fragestellung: Zeigt sich ein grösserer Lerneffekt (der sich in einer schnelleren Reaktionszeit wiederspiegelt) bei inkongruenten im Verlgeich zu kongruenten Items über die Trials hinweg?\n\n#Erstellen eines Datensatzes mit den für die Fragestellung relevanten Variablen ausgewählt werden und Gruppieren der Trials in 6 Trialgruppen\nd_grouped <- d %>%\n    na.omit() %>%\n    group_by(trial) %>%\n    reframe(id,\n            rt,\n            congruent = congruent == 1,\n            trial_group = case_when(\n                trial >= 1 & trial <= 20 ~ \"Trials 1-20\",\n                trial >= 21 & trial <= 40 ~ \"Trials 21-40\",\n                trial >= 41 & trial <= 60 ~ \"Trials 41-60\",\n                trial >= 61 & trial <= 80 ~ \"Trials 61-80\",\n                trial >= 81 & trial <= 100 ~ \"Trials 81-100\",\n                trial >= 101 & trial <= 120 ~ \"Trials 101-120\"\n            )) %>%\n    mutate(trial_group = factor(trial_group, levels = c(\"Trials 1-20\", \"Trials 21-40\", \"Trials 41-60\", \"Trials 61-80\", \"Trials 81-100\", \"Trials 101-120\")))\n\n#Erstellen einer Variable die den Gesammittelwert der Variable Reaktionszeit beinhaltet\noverall_mean <- mean(d$rt, na.rm = TRUE)\n\n#Erstellen eines Datensatzes in dem zufällig Trials einzelner Teilnehmer:innen ausgewählt und gespeichert werden\nrandom_participants <- d_grouped %>%\n    filter(rt <= 5.0) %>%\n    group_by(trial_group) %>%\n    sample_n(300, replace = FALSE)\n\n#Erstellen des Plots der die genannte Fragestellung beantwortet\np = d_grouped %>%\n    filter(rt <= 5.0) %>%\n    ggplot(mapping = aes(x = trial_group,\n                         y = rt,\n                         fill = congruent)) +\n    geom_boxplot(color = \"black\") +\n    geom_hline(yintercept = overall_mean, linetype = \"dashed\", color = \"blue\", size = 0.8) +\n    geom_jitter(data = random_participants, aes(x = trial_group, y = rt, color = congruent, alpha = 0.3)) +\n    labs(title = \"Reaktionszeiten von kongruenten und inkongruenten Items\",\n         subtitle = \"Zeigt sich ein grösserer Lerneffekt bei inkongruenten im Vergleich zu kongruenten Items über die Trials hinweg?\",\n         x = \"Trialgruppen\",\n         y = \"Reaktionszeit in s\",\n         fill = \"kongruent\",\n         color = \"kongruent\") +\n    theme_light()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# daten vorbereiten\nd_clean <- d %>%\n    drop_na() %>%\n    mutate(across(where(is.character),\n           as.factor)) %>%  # aller text zu factors\n    mutate(corr_fct = as.factor(corr),\n           congr_fct = as.factor(congruent))  # neue vars mit corr und congr als fct\n# plot\nd_clean %>%\n    filter(corr_fct == 1 & rt < 1.5) %>%\n    ggplot(aes(\n    x = color,\n    y = rt,\n    color = color,\n    fill = color)) +\n    geom_jitter(alpha = 0.3, width = 0.2, size = 0.5) +\n    geom_violin(alpha = 0.3, color = \"white\") +\n    geom_boxplot(alpha = 0.1, width = 0.2, color = \"white\") +\n    theme_minimal() +\n    labs(title = \"BLAU MACHT SCHNELL\",\n         subtitle = \"Stoop-Test: Unterscheiden sich die Reaktionszeiten je nach Farbe des Stimulusmaterials?\n(Verwendete Daten: Nur kongruente Stimuluspaare und korrekte Antworten)\",\n         x = \"Farbe Stimulusmaterial\",\n         y = \"Reaktionszeit (s)\",\n         caption = \"Konklusion: Ich streiche mein Studierzimmer blau\") +\n    theme(plot.title = element_text(face = \"bold\")) +\n    scale_color_manual(values = c(\"blue\" = \"royalblue3\",\n                                  \"red\"=\"red3\",\n                                  \"yellow\"=\"gold3\")) +\n    scale_fill_manual(values = c(\"blue\" = \"royalblue3\",\n                                  \"red\"=\"red3\",\n                                  \"yellow\"=\"gold3\"))\n\n\n### links:\n# https://www.statology.org/color-by-factor-ggplot2/\n# https://sape.inf.usi.ch/quick-reference/ggplot2/colour\n# https://kogpsy.github.io/neuroscicomplabFS24/pages/chapters/data_visualization_1.html\n# https://kogpsy.github.io/neuroscicomplabFS24/pages/chapters/data_visualization_2.html\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d |>\n  filter(rt > 0.09 & rt < 15)\n\n\nd_color_rt <- d |>\n  group_by(id, color) |>\n  summarise(\n    mean_rt = mean(rt)\n  )\n\n\np = d_color_rt |>\n  ggplot(aes(x = color, y = mean_rt, color = color)) +\n  geom_jitter(size = 1.5, alpha = 0.4,\n              width = 0.2, height = 0) +\n  geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n  scale_color_manual(values = c(blue = \"blue2\",\n                                red = \"red1\",\n                                yellow = \"yellow1\")) +\n  labs(title = \"Uebung 3\",\n       subtitle = \"Unterscheidet sich die Reaktionszeit der Probanden, je nach Farbe die präsentiert wird?\") +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"none\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# library(ggplot2)\n\n# Datensatz anschauen\n# glimpse(d)\n\n# unique(d$color)\n\nd_congruent <- d %>%\n    mutate(congruent = as.factor(congruent))%>%\n    filter(rt < 4 & rt > 0.1)\n\n\nd_rt_summary <- d_congruent %>%\nsummarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\n\n\n# glimpse(d_rt_summary)\n\n#plot\np = d_congruent |>\n    ggplot(mapping = aes(x =congruent ,\n                         y = rt, color= congruent)) +\n    geom_jitter(width = 0.4, alpha= 0.09) +\n    scale_y_continuous(breaks = seq(0, 4, by = 0.5))+\n    geom_hline(yintercept = d_rt_summary$mean_rt, linetype = \"dashed\", color = \"red\", linewidth= 1)+\n    scale_color_manual(values= c(\"darkviolet\", \"darkblue\"))+\n    labs(title = \"Geringere Reaktionszeit in der kongruenten Bedingungen\",\n         subtitle = \"Unterscheidet sich die Reaktionszeit zwischen der kongruenten und inkongruenten Bedinung?\",\n         x = \"inkongruent vs. kongruent\",\n         y = \"Reaktionszeit in Sekunden\") +\n    theme_classic() +\n    guides(color = FALSE)\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n#Libraries laden\nlibrary(patchwork)\nlibrary(naniar)\nlibrary(psych)\nlibrary(ggpubr)\n\n#Daten vorverarbeiten\n\nd_factor <- d %>%\n    mutate(across(where(is.character), as.factor))\n\nd_filtered <- d_factor %>%\n    filter(rt > 0.09 & rt < 15)\n\n\nd_acc_rt_trial <- d_filtered %>%\n    group_by(congruent, trial) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)) %>%\n    mutate(median_rt = median_rt*1000) %>%\n    filter(accuracy > 0.5)\n\n#Bedingungen in Faktor umwandeln und Levels umbenennen\nd_acc_rt_trial$congruent_string <- factor(d_acc_rt_trial$congruent, levels = c(\"0\", \"1\"))\nlevels(d_acc_rt_trial$congruent_string) <- list(inkongruent = \"0\", kongruent = \"1\")\n\n\n#Plots erstellen\nmy_comparisonsp1 <- list(c(\"kongruent\", \"inkongruent\"))\n\np1 <- d_acc_rt_trial %>%\n    ggplot(aes(x = congruent_string, y= accuracy, color = congruent_string)) +\n    geom_jitter(size = 2.5, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    labs(x = \"Bedingung\",\n         y = \"Genauigkeit\",\n         title = \"Mittlere Genauigkeit pro Bedingung\",\n         subtitle = \"Unterscheidet sich die Genauigkeit\\nzwischen den Bedingungen?\") +\n    theme_classic(base_size = 12) +\n    theme(legend.position = \"none\") +\n    stat_compare_means(comparisons = my_comparisonsp1, label = \"p.signif\", method = \"wilcox.test\", paired = TRUE, ref.group = \"inkongruent\")\n\n\nmy_comparisonsp2 <- list(c(\"kongruent\", \"inkongruent\"))\n\np2 <- d_acc_rt_trial %>%\n    ggplot(aes(x = congruent_string, y= median_rt, color = congruent_string)) +\n    geom_jitter(size = 2.5, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    labs(x = \"Bedingung\",\n         y = \"Mittlere Reaktionszeit [ms]\",\n         title = \"Mittlere Reaktionszeit pro Bedingung\",\n         subtitle = \"Unterscheidet sich die mittlere Reaktionszeit\\nzwischen den Bedingungen?\") +\n    theme_classic(base_size = 12) +\n    theme(legend.position = \"none\") +\n    stat_compare_means(comparisons = my_comparisonsp1, label = \"p.signif\", method = \"wilcox.test\", paired = TRUE, ref.group = \"inkongruent\")\n\np1 + p2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\np = d |>\n    ggplot(aes(x = color, y = rt, color = color)) +\n    geom_jitter(width = 0.2, size = 0.5, alpha = 0.25) +\n    geom_boxplot(width = 0.4, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(blue = \"blue\",\n                                 red = \"red\",\n                                 yellow = \"yellow\")) +\n    theme_minimal() +\n    labs(x = \"color of presented word\",\n         y = \"reaction time [s]\",\n         title = \"Reaction times per color\",\n         subtitle = \"Were the reaction times different for the 3 colors presented?\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# Anmerkung: Habe noch versucht, Signifikanzwerte etc. anzeigen zu lassen (einfach aus Neugier) - vielleicht seht ihr das besser, ob es funktioniert hat.\n\nlibrary(ggsignif)\n\n# Variable \"congruent\" in einen Faktor mit Labels \"Inkongruent\" bei 0, \"Kongruent\" bei 1\nd$congruent <- factor(d$congruent, levels = c(0,1), labels = c(\"Inkongruent\", \"Kongruent\"))\n\n# Durchführung eines t-Tests\nt_test_result <- t.test(rt ~ congruent, data = d, var.equal = FALSE)\n\n# Extrahieren des p-Werts aus dem Testergebnis\np_value <- t_test_result$p.value\n\n# Plotting mit ggplot\np <- ggplot(data = d,\n            mapping = aes(x = congruent, y = rt, color = congruent)) +\n  geom_jitter(height = 0.1, width = 0.1) +\n  geom_boxplot(width = 0.1, color = \"blue\", fill = \"white\", alpha = 0.5) +  # Boxplot über den Dichteplot legen\n  labs(title = \"Reaktionszeiten für Kongruente und nicht-kongruente Aufgaben im Stroop-Paradigma\",\n       subtitle = \"Wieviel Zeit benötigt eine Person, um bei nicht-kongruenten Farb-Wort-Aufgaben vs. kongruenten Farb-Wort-Aufgaben zu inhibieren?\",\n       x = \"Congruent\",\n       y = \"RT\",\n       color = \"Congruent\") +\n  theme_minimal()\n\n# Hinzufügen der Signifikanzanzeige\np <- p + geom_signif(comparisons = list(c(\"Incongruent\", \"Congruent\")),\n                     map_signif_level = TRUE,\n                     textsize = 3,\n                     vjust = 0.5,\n                     manual = F) +\n  annotate(\"text\", x = 1.5, y = max(d$rt), label = ifelse(p_value < 0.05, \"*\", \"\"), size = 6)\n\n# Plot anschauen\np\n\n\n# Ursprüngliche Aufgabenstellung: Beides, Rohdaten UND mind. 1 zusammenfassendes Mass(z.B. Mittelwert mit Standardabweichungen, Box-/Violinplot, etc.). TIPP: Mehrere Geoms können übereinander gelegt werden.\n# Mind. 2 unterschiedliche Farben.\n# Beschriftungen: Titel, Subtitel, Achsenbeschriftungen, (optional: Captions)\n# Der Subtitel beinhaltet die Frage, welche der Plot beantwortet.\n# Ein Theme verwenden.\n# Optional: Facets verwenden.\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nt_test_resultate <- t.test(rt ~ congruent, data = d)\n\np_wert <- t_test_resultate$p.value\n\nsignifikanz_label <- ifelse(p_wert < 0.05, \"Es besteht eine Signifikante Interaktion (p < 0.05) zwischen den Kongruenbedingugen.\", \"Es besteht keine signifikante Interaktion (p >= 0.05) zwischen den Kongruenzbedingungen.\")\n\np = d %>%\n    ggplot(aes(x = as.factor(congruent), y = rt, fill = congruent)) +\n    geom_violin(position = 'dodge', alpha = 0.5, color = \"red\", fill = \"orange\") +\n    geom_point(size = 0.5, alpha = 0.5, color = \"red\") +\n    stat_summary(fun = mean, geom = \"point\", size = 3, color = \"black\") +\n    stat_summary(fun = mean, geom = \"line\", aes(group = 1), linetype = \"dashed\", color = \"black\") +\n    stat_summary(fun = mean, geom = \"text\", aes(label = paste(round(..y.., digits = 2))), vjust = -0.5, color = \"black\") +\n    labs(\n        title = \"Stroop Task: Reaktionszeit nach Kongruenz\",\n        subtitle = \"Gibt es Unterschiede in den Reaktionszeiten zwischen den Kongruenzbedingungen?\",\n        x = \"Kongruenz\",\n        y = \"Reaktionszeit (ms)\",\n        caption = signifikanz_label) +\n    theme_grey() +\n    theme(legend.position = \"none\") +\n    scale_x_discrete(\n        breaks = c(0, 1),\n        labels = c(\"Nicht Kongruent\", \"Kongruent\")\n    )\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zu langsame und zu schnelle herausfiltern\nd <- d |>\n  filter(rt > 0.09 & rt < 15)\n\n# Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nacc_rt_individual <- d |>\n  group_by(id, congruent) |>\n  summarise(\n    N = n(),\n    ncorrect = sum(corr),\n    accuracy = mean(corr),\n    median_rt = median(rt)\n  )\n\n# Datensatz mit allen Ids, welche zuwenig Trials hatten\nn_exclusions <- acc_rt_individual |>\n  filter(N < 40)\n\n# Aus dem Hauptdatensatz diese Ids ausschliessen\nd <- d |>\n  filter(!id %in% n_exclusions$id)\n\n# Check\nd_acc_rt_individual <- d |>\n  group_by(id, congruent) |>\n  summarise(\n    N = n(),\n    ncorrect = sum(corr),\n    accuracy = mean(corr),\n    median_rt = median(rt)\n  )\n\n# Gesamtmittelwert und Mittelwerte Reaktionszeit berechnen\noverall_mean_rt <- mean(d$rt)\n\navg_rt_congruent <- aggregate(rt ~ trial, data = d[d$congruent == 1, ], FUN = mean)\navg_rt_incongruent <- aggregate(rt ~ trial, data = d[d$congruent == 0, ], FUN = mean)\n\n# Plot erstellen\np <- d |>\n  ggplot(aes(x = trial, y = rt, color = factor(congruent))) +\n  geom_line() +\n  geom_line(data = avg_rt_congruent, aes(y = rt, color = \"Kongruent\")) +\n  geom_line(data = avg_rt_incongruent, aes(y = rt, color = \"Inkongruent\")) +\n  geom_hline(yintercept = overall_mean_rt, linetype = \"solid\", color = \"black\") +\n  labs(title = \"Stroop-Experiment\",\n       subtitle = \"Zeigen die Reaktionszeiten für kongruente und inkongruente Aufgaben eine ähnliche Tendenz im Verlauf der Trials verglichen zur mittleren Reaktionszeit?\",\n       x = \"Trial\",\n       y = \"Reaktionszeit (ms)\") +\n  scale_color_manual(values = c(\"violet\", \"orange\", \"blue\", \"red\"),\n                     labels = c(\"Inkongruent\", \"Kongruent\", \"Mittlere Inongruenz\", \"Mittlere Kongruenz\"),\n                     name = \"Kongruenz\") +\n  facet_wrap(~ factor(congruent, levels = c(0, 1), labels = c(\"Inkongruent\", \"Kongruent\")), scales = \"free\", ncol = 1) +\n  theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- factor(d$congruent, levels = c(0, 1), labels = c(\"Inkongruent\", \"Kongruent\"))\n\np <-  ggplot(d, aes(x = congruent, y = rt, color = congruent)) +\n    geom_jitter(size = 3, alpha = 0.4, width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(\"Inkongruent\" = \"tomato2\", \"Kongruent\" = \"skyblue3\")) +\n    labs(title = \"Reaktionszeiten beim Stroop-test\",\n         subtitle = \"Reaktionszeiten bei unterschiedlicher Farb/Schrift-Kongruenz\",\n         x = \"Kongruenz von Farbe und Schrift\",\n         y = \"Reaktionszeit in Sekunden\") +\n    theme_minimal() +\n    guides(color = FALSE)\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#Frage: Unterscheidet sich die Geschwindigkeit je nach Farbe?\n\n# Daten zusammenfassen und fehlende Werte entfernen\nd_summary <- d %>%\n    filter(!is.na(rt)) %>%\n    group_by(color) %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt)) # Standardabweichung berechnen\n# glimpse(d_summary)\n\n#Rohdaten verarbeiten damit nur relevanter Bereich gezeigt wird\nd = d %>% filter(rt<1.5)\n\n# Erstellen einer Zuordnung von Farben zu Farben\ncolor_mapping <- c(\"blue\" = \"dodgerblue4\", \"red\" = \"firebrick\", \"yellow\" = \"gold\")\n\n# ggplot mit individuellen Farben für jeden Balken, Standardabweichung und Rohdaten\n\np <- ggplot(d_summary, aes(y = color, x = mean_rt, fill = color)) +\n    geom_bar(stat = 'identity') +\n    geom_point(data = d, aes(x = rt, group = color), position = position_jitter(width = 0.2), color = \"lightgrey\", size = 2.5, alpha = 0.05)+\n    geom_errorbar(aes(xmin = mean_rt - sd_rt, xmax = mean_rt + sd_rt), width = 0.2)+ # Fehlerbalken für Standardabweichung\n    geom_text(aes(label = paste(\"mw =\", round(mean_rt, 3)), x = 0.15), vjust = 0, color = \"black\", size = 3) + # Mittelwert als Zahl in die Balken schreiben\n    geom_text(aes(label = paste(\"sd\")), vjust = -0.5, color = \"black\", size = 3)+ # sd beschriften\n    scale_fill_manual(values = color_mapping) +\n    labs(title = \"Stroop-Test\",\n         subtitle = \"Unterscheidet sich die Reaktionsgeschwindigkeit je nach Farbe?\",\n         y = \"Farbe\",\n         x = \"Durchschnittliche Reaktionszeit in s\")+\n    theme_light() +\n    theme(legend.position = \"none\")  # Farbskala entfernen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d %>% mutate(congruent = as.factor(congruent))\n\npalette <- c (\"#F56598\", \"#74E8CE\")\n\n#Fragestellung: Ist die Reaktionszeit schneller, wenn die Farbe des Worts mit dem Text übereinstimmt?\n# glimpse(d)\nminigrafik = d |>\n    ggplot(mapping =\n           aes(x = congruent,\n               y = rt,\n               color = congruent,\n               fill = congruent)) +\n    geom_jitter(size= 1,\n                alpha = 0.5,) +\n    geom_boxplot(width = 0.3, fill = \"white\", color =\"black\", alpha = 0.5, outlier.colour = \"black\", outlier.shape = NA) +\n    scale_color_manual(values = palette, name = \"Kongruenz\", labels = c(\"Inkongruent = 0\", \"Kongruent = 1\")) +\n    scale_fill_manual(values = palette) +\n\n    # Mittelwert\n    stat_summary(fun=mean,\n                 geom=\"point\",\n                 shape=19,\n                 size=1,\n                 color=\"black\",\n                 fill=\"black\",\n                 position=position_dodge(width=0.5)) +\n\n    # Linie um Mittelwert-Differenz darzustellen\n    stat_summary(fun=mean,\n                geom=\"line\",\n                aes(group=1),\n                linetype=\"solid\",\n                color=\"black\",\n                position=position_dodge(width=0.5)) +\n\n    # Mittelwert beschriften\n    geom_text(aes(label = paste(\"MW:\", round(..y.., 2))),\n              stat = \"summary\",\n              vjust = -0.5,\n              color = \"black\",\n              fill = \"black\",\n              position=position_dodge(width=0.5))  +\n\n    # Achsenbeschriftung\n    labs(title = \"Stroop-Experiment\",\n         subtitle = \"Ist die Reaktionszeit schneller, wenn die Farbe des Worts mit dem Text kongruent ist?\",\n         x = \"Kongruenz von Wort und Farbe\",\n         y = \"Reaktionszeit\",\n         caption = \"Datenquelle: Computerlab Neurowissenschaften\") +\n\n    # Definiert die Achsenskalierung für die y-Achse\n    scale_y_continuous(limits = c(0, 3), breaks = seq(0, 3, by = 0.5)) +\n\n    guides(fill = FALSE) +\n    theme_classic()\n\nminigrafik\n\n#ggsave(filename = \"grafik_yael_hess.png\",\n#       plot = minigrafik)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\nd_grouped_and_summarized <- d %>%\n    group_by(id, congruent) %>%\n    summarise(\n        sum_corr = sum(corr),\n        mean_corr = mean(sum_corr)\n    )\n\np = ggplot(data = d_grouped_and_summarized,\n       aes(x = factor(congruent),\n           y = mean_corr,\n           fill = factor(congruent))) +\n    geom_boxplot() +\n    geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n    labs(x = \"Kongruenz\", y = \"Anzahl der richtigen Antworten\", fill = \"Kongruenz\") +\n    scale_fill_manual(values = c(\"1\" = \"lightblue\", \"0\" = \"lightgreen\"),\n                      labels = c(\"kongruent\", \"inkongruent\")) +\n    scale_x_discrete(labels = c(\"1\" = \"kongruent\", \"0\" = \"inkongruent\")) +  # Ändern der Labels auf der x-Achse\n    coord_cartesian(ylim = c(40, 65)) + # limitieren der Spannweite der y-Achse zur besseren Übersicht\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    ggtitle(\"Einfluss der Kongruenz auf die Korrektheit der Antwort\") +  # Titel hinzufügen\n    labs(subtitle = \"Wie unterscheiden sich kongruente Trials von inkongruenten in Bezug auf die Häufigkeit korrekter Antworten?\")  # Untertitel hinzufügen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd_point <- d %>%\n    group_by(word, color) %>%\n    na.omit() %>%\n    summarize(mean_rt = mean(rt),\n              accuracy = mean(corr)) %>%\n    mutate(interaction_word_color = factor(interaction(word, color), levels = c(\"blau.blue\", \"rot.red\", \"gelb.yellow\", \"gelb.blue\", \"blau.yellow\", \"rot.blue\", \"blau.red\", \"gelb.red\", \"rot.yellow\")))\n\nd_jitter <- d %>%\n    group_by(word, color) %>%\n    na.omit() %>%\n    summarize(rt = rt,\n              accuracy = mean(corr)) %>%\n    mutate(interaction_word_color = factor(interaction(word, color), levels = c(\"blau.blue\", \"rot.red\", \"gelb.yellow\", \"gelb.blue\", \"blau.yellow\", \"rot.blue\", \"blau.red\", \"gelb.red\", \"rot.yellow\")))\n\nd_boxplot <- d %>%\n    group_by(word, color) %>%\n    na.omit() %>%\n    summarize(rt = rt,\n              accuracy = mean(corr)) %>%\n    mutate(interaction_word_color = factor(interaction(word, color), levels = c(\"blau.blue\", \"rot.red\", \"gelb.yellow\", \"gelb.blue\", \"blau.yellow\", \"rot.blue\", \"blau.red\", \"gelb.red\", \"rot.yellow\")))\n\np <- d %>%\n    ggplot() +\n    geom_point(data = d_point, mapping = aes(x = accuracy, y = mean_rt, color = interaction_word_color), size = 3) +\n    geom_jitter(data = d_jitter, mapping = aes(x = accuracy, y = rt, color = interaction_word_color), alpha = 0.016) +\n    geom_boxplot(data = d_boxplot, mapping = aes(x = accuracy, y = rt, color = interaction_word_color), alpha = 0.02)+\n    scale_color_manual(values = c(\"blue3\", \"red3\", \"gold\", \"darkolivegreen3\", \"chartreuse4\", \"darkorchid1\", \"blueviolet\", \"orange\", \"darkorange\"), name = \"Wort-Farbe-Kombination\", guide_legend(override.aes = list(size = 5))) +\n    labs(y = \"Mittlere Reaktionszeit und Boxplots\", x = \"Accuracy\", title = \"Accuracy und mittlere Reaktionszeit für jede Wort-Farbe Kombination\", subtitle = \"Unterschiede in accuracy und mittlerer Rektionszeit zwischen verschiedenen Wort-Farbe Kombinationen \\n sowie Verteilung der mittleren Reaktionszeit für jede Wort-Farbe Kombination\") +\n    theme_minimal() +\n    theme(panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank(),\n          panel.border = element_blank(),\n          axis.line = element_line(size = 0.5, color = \"black\"),\n          plot.title = element_text(size = 16)) +\n    theme(panel.grid = element_blank()) +\n    scale_x_continuous(limits = c(0.93, 1), breaks = seq(0.93, 1.02, 0.015)) +\n    scale_y_continuous(limits = c(0.15, 0.85), breaks = seq(0.15, 0.85, 0.05))\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Rohdaten und Zusammenfassung\np <- d %>%\n  ggplot(aes(x = as.factor(congruent), y = rt, fill = as.factor(congruent))) +\n  geom_jitter( width = 0.2, alpha = 0.5, size = 2, color = \"lightgrey\") +\n  stat_summary(fun = mean, geom = \"point\", shape = 23, size = 3, position = position_dodge(width = 0.75)) +\n  stat_summary(fun = mean, geom = \"errorbar\", position = position_dodge(width = 0.75), width = 0.3, color = \"black\", size = 1.5) +\n  geom_line(stat = \"summary\", aes(group = 1), position = position_dodge(width = 0.75), linetype = \"dashed\") +\n  geom_text(stat = \"summary\", aes(label = round(..y.., 2)), vjust = -1, position = position_dodge(width = 0.8)) +\n  labs(\n    title = \"Durchschnittliche Reaktionszeiten zwischen den Bedingungen\",\n    subtitle = \"Unterschiede in den durchschnittlichen Reaktionszeiten zwischen kongruent und inkongruent\",\n    x = \"Kongruenz\",\n    y = \"Durchschnittliche Reaktionszeit (in ms)\",\n    fill = \"Kongruenz\"\n  ) +\n  scale_fill_manual(values = c(\"magenta\",\"blue\")) +\n  scale_x_discrete(labels = c(\"Nicht kongruent\",\"Kongruent\")) +\n  theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#Frage: Unterscheidet sich die Geschwindigkeit je nach Farbe?\n\n# Daten zusammenfassen und fehlende Werte entfernen\nd_summary <- d %>%\n    filter(!is.na(rt)) %>%\n    group_by(color) %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\n# glimpse(d_summary)\n\n#Rohdaten verarbeiten damit nur ein reduzierter Bereich gezeigt wird (dort wo MW & SD liegen)\nd= d %>%\n    filter(rt<1.2)\n\n\n# Erstellen einer Zuordnung von Farben zu Farben\ncolor_mapping <- c(\"blue\" = \"lightskyblue\", \"red\" = \"lightcoral\", \"yellow\" = \"lightgoldenrod1\")\n\n# ggplot mit MW,SD & individuellen Datenpunkten\n\np<- ggplot(d_summary, aes(x = color, y = mean_rt, fill = color)) +\n    geom_bar(stat = 'identity') +\n    geom_point(data = d, aes(y = rt, group = color), position = position_jitter(width = 0.2), color = \"lightgrey\", size = 2.5, alpha=0.05)+\n    geom_errorbar(aes(ymin = mean_rt - sd_rt, ymax = mean_rt + sd_rt), width = 0.2)+ # errorbars=sd\n    scale_fill_manual(values = color_mapping) +\n    labs(title = \"Forschungsfrage\",\n         subtitle = \"Unterscheidet sich die Reaktionsgeschwindigkeit je nach Farbe?\",\n         x = \"Farbe\",\n         y = \"Durchschnittliche Reaktionszeit [ms]\",\n         caption= \"Errorbar= Standardabweichung\")+\n    theme_linedraw()\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Fragestellung:\n# Ist die Reaktionszeit der Versuchspersonen länger bei inkongruenten Items im Vergleich zu kongruenten Items?\n\n# Daten bereinigen und Überblick verschaffen:\nd_clean <- d %>%\n  filter(!is.na(rt))\n\nsummary_data <- d_clean %>%\n  group_by(congruent) %>%\n  summarize(median_rt = median(rt),\n            mean_rt = mean(rt),\n            sd_rt = sd(rt))\n\n# Anzeigen der summary\n# summary_data\n\n# congruent zu Faktor umwandeln (inkongruent = 0; kongruent = 1)\nd_final <- d_clean %>%\n  mutate(congruent = factor(congruent))\n\n\n# Plot erstellen\np <- ggplot(d_final, aes(x = congruent, y = rt, fill = congruent)) +\n  geom_jitter(width = 0.25, alpha = 0.6, color = \"#000000\", shape = 21, size = 3, stroke = 0.4) +\n  geom_boxplot(alpha = 0.8) +\n  labs(title = \"Reaktionszeiten nach Kongruenz im Stroop Task\",\n       subtitle = \"Ist die Reaktionszeit der Versuchspersonen länger bei inkongruenten Items im Vergleich zu kongruenten Items?\",\n       x = \"Kongruenz\",\n       y = \"Reaktionszeit [s]\",\n       fill = \"Kongruenz\",\n       caption = \"Neurowissenschaft Computerlab - Stroop Task - Universität Bern\") +\n  scale_fill_manual(values = c(\"#9bcd9b\", \"#68829E\"), labels = c(\"inkongruent\", \"kongruent\")) +\n  scale_x_discrete(labels = c(\"inkongruent\", \"kongruent\")) +\n  theme_bw()\n\n# Plot anzeigen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Fragestellung: Reaktionszeit bei kongruenten oder bei inkroguenten Stimuli + mean von rt in Form von Linie einfügen zum Vergleich\n# glimpse(d)\n\n#Variable congruent in Faktor umrechnen weil sonst alle Werte möglich zwischen 0 & 1\nd1 <- d %>%\n    mutate(congruent = as.factor(congruent)) %>%\n    filter(rt < 4 & rt > 0.1)\n\n#Mittelwert von rt bilden um diesen als Vergleich in den plot einzufügen\nd2 <- d1 %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\n#Plot\np = d1 %>%\n    ggplot(mapping = aes(x = congruent, y = rt, color = congruent)) +\n    scale_y_continuous(breaks = seq(0, 4, by = 0.5)) +\n    geom_jitter(width = 0.35, alpha = 0.1) +\n    geom_hline(yintercept = d2$mean_rt, linetype = \"dashed\", color = \"black\", linewidth = 0.8) +\n    scale_color_manual(values = c(\"darkgreen\", \"darkorange\")) +\n    labs(title = \"Kongruente Stimuli gehen mit einer kürzeren Reaktionszeit einher\",\n         subtitle = \"Weist die kongruente Bedingung schnellere Reaktionszeiten auf als die inkongruente?\",\n         x = \"inkongruent vs. kongruent\",\n         y = \"Reaktionszeit in Sekunden\") +\n    guides(color = FALSE) #Ausblenden der Farb-Legende\n    # theme_classic()\np\n\n#glimpse(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# glimpse(d)\n\n#Datensatz gruppiert und summarized anhand der für die Beantwortung der Fragestellung relevanten Daten.\nd_grouped_and_summarized_data <- d |>\n  mutate(corr = as.factor(corr))|>\n  group_by(id, corr, rt)|>\n  summarise(\n    ncorrect = corr,\n  )\n\n#Plot erstellt anhand des erstellten Datensatzes\np = d_grouped_and_summarized_data |>\n  filter(rt < 5)|>\n  ggplot(mapping =\n           aes(x= ncorrect, y= rt, color = ncorrect)) +\n  geom_jitter(size= 1, width= 0.4) +\n  geom_boxplot(width = 0.3, color= \"black\") +\n  labs(title = \"Reaktionzeiten und falsche Antworten\",\n       subtitle = \"Haben die VP schneller geantwortet wenn sie falsch geantwortet haben?\",\n       x=\"Antwort\",\n       y = \"Reaktionszeit\")+\n  scale_x_discrete(labels = c(\"Falsch\", \"Richtig\"))+\n  theme_bw()\n\n#Ausgabe des Plots\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- as.factor(d$congruent) # changing 'congruent' to factor\n\nd_agr <- d %>% filter(corr == 1)%>%\n    group_by(congruent) %>%\n    na.omit() %>%\n    summarise(mean = mean(rt)) # creating a vector with the mean of all correct responses for congruent and incongruent trials.\n\ncolors_1 <- c(\"#5F8575\", \"#A95C68\") # vector for the colors used in geom_hline and geom_histogram\n\np <- d %>% filter(corr == 1) %>% # filter only correct trials\n    group_by(congruent) %>% ggplot(aes(x = rt, fill = congruent)) +\n    geom_histogram( linetype = 0 ,\n                    alpha=0.5,\n                    position = 'identity',\n                    binwidth= 0.04 ) + # binwidth set to 40ms\n    scale_fill_manual(values=colors_1) +\n    facet_grid(congruent ~ .) + # seperating the distrbutions, as the overlap is messy.\n    xlim(0, 2.5) +\n    geom_vline(data= d_agr , aes(xintercept= mean, color= congruent),\n               linetype=\"solid\", size = 0.8, color = colors_1) + # a line with colors of distribution for the mean\n    theme_minimal() + #theme\n    ggtitle(\"Reaction-times for correct responses by congruence\") + # descriptions\n    labs(fill = \"congruency\",\n         x = \"reaction-time in seconds\",\n         y = \"responses per 40ms\",\n         subtitle = \"Mean and distribution of reaction-times for correct answers, based on word and color congruence (1) or incongruence (0)\")\n\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- factor(d$congruent, levels = c(0, 1), labels = c(\"Nicht-Kongruent\", \"Kongruent\"))\n\n# Zufällige Auswahl von 15 Personen\nrandom_ids <- sample(unique(d$id), 15)\n\nr_d <- d %>%\n    filter(id %in% random_ids)\n\np = r_d |>\n    ggplot(aes(x = congruent, y = rt, fill = congruent)) +\n    geom_jitter(width = 0.3, alpha = 0.5) +\n    geom_boxplot(outlier.color = \"darkorange\", alpha = 0.75) +\n    scale_fill_manual(values = c(\"cornflowerblue\", \"darkmagenta\")) +\n    labs(title = \"Die Reaktionszeiten von der kongruenten und nicht-kongruenten Bedingung\",\n         subtitle = \"Besteht ein Unterschied in den Reaktionszeiten zwischen der kongruenten und nicht-kongruenten Bedingung?\",\n         x = \"Kongruenz\",\n         y = \"Reaktionszeit [s]\") +\n    theme_bw() +\n    theme(legend.position = \"none\")\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"incongruence\" \"congruence\"  \n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# Datensatz anschauen\n# glimpse(d)\n\n#zu Factors machen\nd <- mutate(d, color = as.factor(color),\n            condition = as.factor(congruent))\n\nlevels (d$condition) [levels (d$condition) == '0'] <- 'incongruence'\nlevels (d$condition) [levels (d$condition) == '1'] <- 'congruence'\nlevels (d$condition)\n\n# glimpse(d)\n#Diagnostik: Daten untersuchen\n\n#Fehlende Werte\n# install.packages(\"naniar\")\nlibrary(naniar)\n# naniar::vis_miss(d)\n\n#zu schnelle und zu langsame Antworten ausschliessen\nd <- d |>\n    filter(rt > 0.09 & rt < 15)\n\n#Person mit correct 1 ausschliessen\nd <- d |>\n    filter(id != \"sub-80444009\")\n\n# Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nacc_rt_individual <- d |>\n    group_by(id, condition, ) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n#Plot darstellen\nplot1 <- acc_rt_individual %>%\n    ggplot(aes(x = condition, y = accuracy, color = condition)) +\n    geom_line(color = \"grey40\", alpha = 0.5) +\n    geom_jitter(size = 3, alpha = 0.6,\n                width = 0, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(incongruence = \"#9467BD\",\n                                  congruence = \"#8FBC8F\")) +\n    labs(x = \"Bedingung\",\n         y = \"Anteil korrekter Antworten\",\n         title = \"Anteil korrekter Antworten \\npro Person und Bedingung\",\n         subtitle = \"Konnten die VPn die Aufgabe lösen?\") +\n    theme_grey(base_size = 12) +\n    theme(legend.position = \"none\")\n\nplot2 <- acc_rt_individual |>\n    ggplot(aes(x = condition, y = median_rt, color = condition)) +\n    geom_line(color = \"grey40\", alpha = 0.5) +\n    geom_jitter(size = 3, alpha = 0.6,\n                width = 0, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(incongruence = \"#9467BD\",\n                                  congruence = \"#8FBC8F\")) +\n    labs(x = \"Bedingung\",\n         y = \"Mittlere Reaktionszeit [s]\",\n         title = \"Mittlere Reaktionszeit \\npro Person und Bedingung\",\n         subtitle = \"Wie schnell waren die VPn?\",) +\n    theme_grey(base_size = 12) +\n    theme(legend.position = \"none\")\n\n#Install könnte man auch oben hinschreiben\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n\nplot1 + plot2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- as.factor(d$congruent)\nlevels(d$congruent) <- c(\"inkongruent\", \"kongruent\")\n\np = d %>%\n    ggplot(mapping = aes(congruent,\n                         rt))+\n    geom_jitter(alpha = 0.4, color = \"grey18\")+\n    geom_boxplot(color = \"lightsalmon2\", alpha = 0.5)+\n    labs(x = \"Kongruenz\",\n         y = \"Reaktionszeit\",\n         title = \"Kongruenz macht schneller!\",\n         subtitle = \"Hat die Übereinstimmung der Farben mit den Wörtern einen Einfluss auf die Reaktionszeit?\")+\n    theme_bw()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#alles zu faktoren machen\nd <- d |>\n    mutate(across(where(is.character), as.factor))\n\n#daten anschauen\n# d |>\n#     slice_head(n = 10)\n\n# Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nd_acc_rt_individual <- d |>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n\n# Plot erstellen\n\np <- d_acc_rt_individual |>\n    ggplot(aes(x = congruent, y = median_rt, fill = factor(congruent))) +\n    geom_boxplot(alpha = .5) +\n    geom_jitter(alpha = .25, width = .2) +\n    scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"green\")) +\n    labs(title = \"Inhibitionsfähigkeit\",\n         subtitle = \"Ist die Reaktionszeit bei der inkongruenten Bedingung verlangsamt?\",\n         x = \"Kongruenz [Nein (0), Ja (1)]\",\n         y = \"Reaktionszeit [ms]\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\n#Plot ausgeben\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd_id_color <- d |>\n    group_by(id, color) |>\n    summarise(\n        accuracy = mean(corr),\n    )  |>\n    filter(accuracy > 0.5)\n\nd_color <- d |>\n    group_by(color) |>\n    summarise(\n        accuracy = mean(corr),\n    ) |>\n    filter(accuracy > 0.5)\n\np = d |>\n    ggplot(data = d_id_color,\n           mapping = aes(x = color,\n                         y = accuracy,\n                         fill = color)) +\n    geom_violin(show.legend = FALSE,\n                alpha = .4) +\n    scale_fill_manual(values = c(blue = \"blue\",\n                                 yellow = \"yellow\",\n                                 red = \"red\")) +\n    theme_minimal() +\n    geom_point(data = d_color,\n               show.legend = FALSE,\n               size = 3) +\n    labs(title = \"Accuracy in Abhängigkeit von der Farbe, in der das Wort präsentiert wurde\",\n         subtitle = \"Gibt es einen Unterschied in der Accuracy abhängig von der Farbe, in der das Wort präsentiert wurde?\",\n         x = \"Farbe, in der das Wort präsentiert wurde\",\n         y = \"Accuracy\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-84-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# glimpse(d)\n\n#Daten filtern\nd <- d |>\n    filter(rt > 0.09 & rt < 15)\n\nacc_rt_individual <- d |>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\nn_exclusions <- acc_rt_individual |>\n    filter(N < 40)\n\nd <- d |>\n    filter(!id%in% n_exclusions$id)\n\n#Vorbereitung für Plot\nreaction_time_zf <- d %>%\n    group_by(congruent) %>%\n    summarise(mean_reaction_time = mean(rt),\n              sd_reaction_time = sd(rt),\n              n = n())\n\naccuracy_zf <- d %>%\n    group_by(congruent) %>%\n    summarise(accuracy = mean(corr))\n\nid_zf <- d %>%\n    group_by(id) %>%\n    summarise(mean_reaction_time = mean(rt),\n              mean_accuracy = mean(corr))\n\n#Plot erstellen\np = ggplot(id_zf, aes(x = mean_reaction_time, y = mean_accuracy)) +\n    geom_point(color=\"lightslategray\") +\n    geom_smooth(method=lm , color=\"orange\", se=TRUE) +\n    labs(title = \"Stroop-Experiment\",\n         subtitle = \"Wie hängen die mittlere Genauigkeit und die mittlere Reaktionszeit zusammen?\",\n         x = \"Mittlere Reaktionszeit\",\n         y = \"Mittlere Genauigkeit\") +\n    theme_minimal()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-87-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- mutate(d, congruence = as.factor(congruent),\n                color = as.factor(color))\n\nlevels(d$congruence)[levels(d$congruence) == '0'] <- 'incongruent'\nlevels(d$congruence)[levels(d$congruence) == '1'] <- 'congruent'\n# levels(d$congruence)\n\nd_acc_con_trial <- d |>\n    group_by(congruence, trial) |>\n    summarise(accuracy = mean(corr))\n\nd_acc_con_trial |>\n    ggplot(aes(x = trial, y = accuracy, color = congruence)) +\n    geom_point(size = 2, alpha = 0.8) +\n    geom_line() +\n    scale_color_manual(values = c(incongruent = \"orange2\",\n                                  congruent = \"mediumpurple3\")) +\n    facet_wrap(~ congruence) +\n    labs(x = \"Trial\",\n         y = \"Accuracy\",\n         title = \"Accuracy over time\",\n         subtitle = \"Do participants benefit from learning effects?\")+\n    geom_smooth(method = lm) +\n    theme_gray(base_size = 11)\n\n# d_acc_con_trial\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-90-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n#Fragestellung: Ist die Person schneller, wenn Farbe und Wort kongruent sind? d.h. Variablen congruent und rt relevant\n\n# glimpse(d)\n#Wie viele unterschiedliche Variablen gibt es? -> 8\n#Wie heissen die Variablen? -> id, trial, word, color, congruent, resp, corr, rt\n#Welches Skalenniveau haben sie? -> congruent, corr, word, color = Nominalskaliert; rt = Verhältnisskalsiert\n\n\n#Variable congruent als Faktor definieren\nd <- d %>% mutate(congruent = as.factor(congruent))\n\n\n# Code des Plots:\n## Plot soll Verteilung der Reaktionszeiten sowie die mittlere Reaktionszeit\n## bei den beiden Bedingungen Kongruent = 1 und Kongruent = 0 zeigen\n\np = d %>%\n    ggplot(mapping =\n               aes(x = congruent,\n                   y = rt,\n                   color = congruent,\n                   fill = congruent)) +\n    geom_jitter(size = 1,\n                alpha = 0.7) +\n    geom_boxplot(width = 0.3,\n                 fill = \"white\",\n                 color =\"black\",\n                 outlier.color = \"black\",\n                 outlier.shape = NA,\n                 alpha = 0.5) +\n    scale_color_manual(values = c(\"#B4EEB4\", \"#87CEEB\"), name = \"Kongruenz\",\n                       (labels = c(\"nicht kongruent\", \"kongruent\"))) +\n    scale_fill_manual(values = c(\"#B4EEB4\", \"#87CEEB\")) +\n    stat_summary(fun = mean,\n                 geom = \"point\",\n                 shape = 19,\n                 size = 1.5,\n                 color = \"black\",\n                 fill = \"black\",\n                 position=position_dodge(width=0.5)) +  # Punkt für Mittelwert\n    stat_summary(fun.data = mean_sdl,\n                 geom = \"errorbar\",\n                 width = 0.2,\n                 color = \"black\",\n                 fill = \"black\",\n                 position = position_dodge(width = 0.5)) +  # Standardabweichung\n    stat_summary(fun = mean,\n                 geom = \"line\",\n                 aes(group = 1),\n                 linetype = \"solid\",\n                 size = 0.7,\n                 color = \"black\",\n                 position = position_dodge(width = 0.8)) +  # Linie für Mittelwert-Differenz\n    geom_text(aes(label = round(..y.., 2)),\n              stat = \"summary\",\n              vjust = -0.5,\n              color = \"black\",\n              fill = \"black\",\n              position = position_dodge(width = 0.5)) +  # Mittelwert-Beschriftung\n    labs(title = \"Stroop-Experiment\",\n         subtitle = \"Ist die Reaktionszeit kürzer, wenn die Farbe des Worts mit dem Text übereinstimmt?\",\n         x = \"Kongruenz von Wort und Farbe\",\n         y = \"Reaktionszeit\") +\n    scale_y_continuous(limits = c(0, 2.75), breaks = seq(0, 3, by = 0.25)) +  # Definiert die Achsenskalierung für die y-Achse\n    theme_classic() +\n    guides(fill = FALSE)\np\n\n#ggsave(filename = \"thomann_laura_plot.png\",\n#       plot = p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"incongruent\" \"congruent\"  \n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-93-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-93-2.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Datenbereinigung und Faktorenbenennung: Reaktionszeiten unter 100ms und über 10s\n# werden ausgeschlossen, Reduktion von 31800 zu 31780 observations\nd <-  mutate(d, color = as.factor(color),\n             condition = as.factor(congruent))%>%\n    filter(rt > 0.09 & rt < 10.01)\n\n# Umbennenung der Faktoren von \"Condition\"\nlevels(d$condition)[levels(d$condition) == '0'] <- 'incongruent'\nlevels(d$condition)[levels(d$condition) == '1'] <- 'congruent'\nlevels(d$condition)\n\n# Suche nach fehlenden Werten (NA), keine gefunden, daher muss nichts ausgeschlossen werden\nd_missings <- d %>% naniar::add_label_missings() %>%\n    filter(any_missing == \"Missing\")\n\n# head(d_missings)\n\n#Vorbereitung der Daten mit Accuracy als Mittelwert der Korrekten Antworten und Median_rt als Median der Reaktionszeit\nd_acc_rt_trial <- d %>%\n    group_by(condition, trial) %>%\n    summarise(\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n#Darstellung der Ermüdungseffekte mit einem Line-Plot\nermüdungseffekte <- d_acc_rt_trial %>%\n    ggplot(aes(x = trial, y = accuracy, color = condition)) +\n    geom_point(size = 1.5, alpha = 0.6) +\n    geom_line() +\n    scale_color_manual(values = c(incongruent = \"tomato4\",\n                                  congruent = \"green4\")) +\n    facet_wrap(~ condition) +\n    labs(x = \"Trial\",\n         y = \"Accuracy\",\n         title = \"Accuracy in the Conditions\",\n         subtitle = \"Are there strong effects of fatigue in the two conditions?\") +\n    geom_smooth(method = lm) +\n    theme_minimal(base_size =10) +\n    theme(legend.position = \"none\")\nermüdungseffekte\n\n#Darstellung der Verteilung der Median Reaction Times\nhisto_rt_and_accuracy <- d_acc_rt_trial %>%\n    ggplot(aes(x = median_rt, fill = condition)) +\n    geom_histogram()+\n    scale_fill_manual(values = c(incongruent = \"tomato4\",\n                                  congruent = \"green4\")) +\n    labs(x = \"Median Reaction Time [s]\",\n         y = \"Count\",\n         title = \"Distribution of Median Reaction Times over the conditions\",\n         subtitle = \"Was the reaction time shorter in the congruent condition?\") +\n    theme_light()\nhisto_rt_and_accuracy\n\n#Darstellung der Reaktionszeiten von 3 Teilnehmern über die Konditionen hinweg mit line plot und Trendlinie\nrt_of_three_participants <- d %>%\n    filter(id %in% c(\"sub-10318869\", \"sub-1106725\", \"sub-113945\")) %>%\n    ggplot(aes(x = trial, y = rt, color = condition)) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_point(alpha = 0.5) +\n    scale_color_manual(values = c(incongruent = \"tomato3\",\n                                  congruent = \"green4\")) +\n    facet_wrap(~ id) +\n    labs(x = \"Trial\",\n         y = \"Reaction Time [s]\",\n         title = \"Reaction time of 3 participants\",\n         subtitle = \"Was the reaction time shorter in the congruent condition for specific participants?\") +\n    theme_light()\n# rt_of_three_participants\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-96-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Filtern der relevanten Variablen\nbenötigte_daten <- d[, c(\"congruent\", \"rt\")]\n\n# Anzeigen der ersten Zeilen des gefilterten Datensatzes\n# head(benötigte_daten)\n\n# Umwandlung der Variable 'congruent' in einen Faktor\nbenötigte_daten$congruent <- factor(benötigte_daten$congruent, levels = c(0, 1), labels = c(\"incongruent\", \"congruent\"))\n\n# Erstellung des Plots\nplot<- ggplot(benötigte_daten, aes(x = congruent, y = rt, fill = congruent, color = congruent)) +\n  # Hinzufügen der Balken für die Mittelwerte und Standardabweichungen\n  stat_summary(fun.data = \"mean_cl_normal\", geom = \"bar\", size = 1.5, color = \"black\") +\n  # Hinzufügen der rohen Daten als Punkte\n  geom_jitter(width = 0.2) +\n  # Hinzufügen von Linien für die Standardabweichungen\n  stat_summary(fun.data = mean_sdl, geom = \"errorbar\", width = 0.2, size = 1, color = \"black\") +\n  # Farben\n  scale_fill_manual(values = c(\"congruent\" = \"blue\", \"incongruent\" = \"red\")) +\n  scale_color_manual(values = c(\"congruent\" = \"blue\", \"incongruent\" = \"red\")) +\n  # Beschriftungen\n  labs(title = \"Stroop-Test: Reaktionszeit nach Bedingung\",\n       subtitle = \"Unterschiede in der Reaktionszeit zwischen kongruenten und inkongruenten Bedingungen\",\n       x = \"Bedingung\", y = \"Reaktionszeit (ms)\") +\n  # Design\n  theme_get()\n\n#anzeigen lassen\nprint(plot)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-99-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code innerhalb der folgenden 2 Linien darf nicht verändert werden\n# --------------------------------------------------------------------------------------\n# Beginnen Sie hier mit Ihrem Code:\n\n# glimpse(d)\n\n# Daten nach Farbe gruppieren\nd <- d %>%\n  group_by(color)\n\n# Daten plotten\nggplot(d, aes(x = color, y = rt)) +\n  geom_boxplot(width = 0.8, outlier.shape = NA) +\n  labs(title = \"Reaktionszeit nach Korrektheit der Antwort und Farbe\", subtitle = \"Wurden die Antworten bei jeder Farbe gleich schnell gegeben?\", x = \"Farbe\", y = \"Reaktionszeit [s]\") +\n  geom_jitter(aes(color = color), width = 0.2) +\n  coord_cartesian(ylim = c(0, 4.51)) + # rt > 4.51 werden nicht in die Auswertung miteinbezogen\n  scale_x_discrete(labels = c(\"blue\" = \"blau\", \"red\" = \"rot\", \"yellow\" = \"gelb\")) +\n  scale_color_manual(values = c(\"blue\" = \"blue\", \"red\" = \"red\", \"yellow\" = \"yellow\")) +\n  guides(color = FALSE) +\n  theme_minimal()  +\n  facet_wrap(~ corr, labeller = labeller(corr = c(\"0\" = \"Falsche Antwort\", \"1\" = \"Korrekte Antwort\")))\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-102-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_and_summarized_data<- d |>\n    group_by(id,congruent) |>\n    summarise(mean_rt= mean(rt))\n\ndata_kongruent <- filter(grouped_and_summarized_data, congruent == 0)\ndata_inkongruent <- filter(grouped_and_summarized_data, congruent == 1)\n\np = ggplot(data = grouped_and_summarized_data,\n       aes(x = factor(congruent),\n           y = mean_rt,\n           fill = factor(congruent))) +\n    geom_boxplot(alpha = 0.7, outlier.shape = NA) +\n    geom_point(position = position_jitter(width = 0.1), size = 2, alpha = 0.5) +\n    labs(x = \"Bedingung\", y = \"Mittelwert der Reaktionszeit\", fill = \"Bedingung\") +\n    ggtitle(\"Mittelwerte der Reaktionszeit nach Bedingung\") +\n    scale_fill_manual(name = \"Bedingung\", values = c(\"0\" = \"pink\", \"1\" = \"yellow\"),\n                      labels = c(\"0\" = \"Inkongruent\", \"1\" = \"Kongruent\")) +\n    theme_linedraw() +\n    scale_x_discrete(name = \"Bedingung\", labels = c(\"0\" = \"Inkongruent\", \"1\" = \"Kongruent\")) +\n    scale_y_continuous(breaks = seq(0, 2, by = 0.2)) +\n    labs(x = \"Bedingung\", y = \"Mittelwert der Reaktionszeit\", fill = \"Bedingung\",\n     subtitle = \"Wurde bei kongruent schneller geantwortet als bei inkongruent?\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-105-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Package laden\n\nlibrary(tidyverse)\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n\n# Daten einlesen und Textvariablen zu Faktoren umwandeln\n# d |> #<- read.csv(\"data/dataset_stroop_clean.csv\") |>\n  # mutate(across(where(is.character), as.factor))\n\n#Median von den Reaktionszeiten erstellen/berechnen\nacc_rt_individual <- d |>\n  group_by(id, congruent) |>\n  summarise(\n    N = n(),\n    ncorrect = sum(corr),\n    accuracy = mean(corr),\n    median_rt = median(rt)\n  )\n\n# Datensatz anschauen\n# acc_rt_individual |>\n  # slice_head(n = 10)\n\n#Aufgabenschwierigkeit und Performanz der Versuchspersonen\n\n# Beginnen Sie hier mit Ihrem Code:\np1 <- acc_rt_individual |>\n  na.omit()|>\n  ggplot(aes(x = factor(congruent, levels = c(0,1)), y = median_rt, color = factor(congruent))) +\n    geom_jitter(size = 2, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_x_discrete(labels =c(\"0\" = \"inkongruent\", \"1\" = \"kongruent\"))+\n    scale_color_manual(values = c(\"0\" = \"green3\",\n                                \"1\" = \"skyblue3\"))+\n    labs(x =\"Bedingung\",\n         y = \"Median Reaktionszeit [s]\",\n         title = \"Median Reaktionszeit pro Person and Bedingung\",\n         subtitle = \"Wie verändert sich die Reaktionszeit der Versuchspersonen \\n in Abhängigkeit der Bedingung?\")+\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\n\nlibrary(patchwork)\n\np1\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-108-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nmy_palette <- c(\"blue\", \"red\", \"yellow\")\n\nd_rt_within <- d |>\n    mutate(congruent = as.factor(congruent)) |>\n    group_by(id, congruent, color) |>\n    summarise(mean_rt = mean(rt))\n\n\np = d_rt_within |>\n    Rmisc::summarySEwithin(measurevar = \"mean_rt\",\n                           withinvars = \"congruent\",\n                           na.rm = TRUE,\n                           conf.interval = 0.95)|>\n    ggplot(mapping = aes(\n        x = congruent,\n        y = mean_rt)) +\n    geom_jitter(data = d_rt_within,\n                aes(colour = factor(color)))+\n    geom_boxplot(data = d_rt_within,\n                 aes(colour = factor(color)),\n                 outlier.alpha = 0.5) +\n    geom_errorbar(width = .1, aes(ymin = mean_rt-se, ymax = mean_rt+se)) +\n    geom_point() +\n    scale_color_manual(values = my_palette) +\n    theme_bw(base_size = 10) +\n    ggtitle(\"Stroop Experiment\") +\n    xlab(\"Übereinstimmung zwischen Schriftfarbe und Wort [0 = inkongruent; 1 = kongruent]\") +\n    ylab(\"Durchschnittliche Reaktionszeit [sec]\") +\n    labs(subtitle = \"Antworten Personen schneller, wenn die Schriftfarbe mit dem Wort übereinstimmt?\",\n         colour = \"Schriftfarbe\",\n         caption = \"black dot = mean_rt, black lines = standard error (se)\")\n\np + scale_y_continuous(breaks = seq(0.5, 2.3, by = 0.25))\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-111-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n## Wie verhält sich die Reaktionszeit und deren Standardabweichungen bei Ausreisser\n\nd <- d |>\n    filter(rt > 0.1 & rt<5)\n\nd_corr_individual <- d |>\n    group_by(id, corr) |>\n    summarise(\n        rt = rt,\n        median_rt = median(rt),\n        sd_rt = sd(rt)) %>%\n        mutate(corr= as.factor(corr))\n\n\np<- d_corr_individual %>%\n  filter(id %in% c(\"sub-13366559\", \"sub-19843991\", \"sub-66321563\", \"sub-21474524\")) %>%\n  ggplot(aes(x = corr, y = rt, color = id)) +\n  geom_jitter(alpha = 1, width = 0.2) +\n  geom_boxplot(alpha = 0, width = 0.2, color = \"black\") +\n  scale_fill_manual(values = c(\"sub-13366559\" = \"tomato3\",\n                               \"sub-19843991\" = \"skyblue3\",\n                               \"sub-66321563\" = \"pink\" ,\n                               \"sub-21474524\" = \"green\")) +\n  labs(title = \"Ausreisser\",\n       subtitle = \"Wie verhält sich die Reaktionszeit und deren Standardabweichungen bei Ausreisser\",\n       x = \"Korrektheit\",\n       y = \"Reaktionszeit\") +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"none\")\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-114-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n\np = d |>\n    ggplot(aes(x = as.factor(congruent), y = rt, color = as.factor(congruent))) +\n    geom_boxplot(alpha = 0.5, outlier.shape = NA, width = 0.5) +\n    geom_jitter(width = 0.1, alpha = 0.5) +  # Überlappung der Punkte reduzieren\n    stat_summary(\n        fun.data = mean_se, geom = \"errorbar\", width = 0.2,\n        aes(group = congruent)\n    ) +  # Fehlerbalken für den Mittelwert +/- Standardfehler\n    stat_summary(\n        fun = mean, geom = \"point\", size = 3, shape = 18,\n        aes(group = congruent), color = \"black\"\n    ) +  # Mittelwerte als Punkte\n    labs(\n        title = \"Einfluss der Kongruenz von Wort und Farbe auf die Reaktionszeiten\",\n        subtitle = \"Wie unterscheiden sich die Reaktionszeiten zwischen kongruenten und inkongruenten Bedingungen?\",\n        x = \"Kongruenz (1 = kongruent, 0 = inkongruent)\",\n        y = \"Reaktionszeit (ms)\",\n        color = \"Kongruenz\"  # Legendenbeschriftung auf Deutsch\n    ) +\n    scale_color_manual(values = c(\"1\" = \"green\", \"0\" = \"red\")) +  # Farben anpassen\n    theme_light() +\n    theme(\n        legend.title = element_text(size = 12),  # Grösse der Legendenüberschrift anpassen\n        legend.position = \"top\",  # Legende oben platzieren\n        plot.title = element_text(size = 14, face = \"bold\"),  # Titel grösser und fett\n        axis.title = element_text(size = 12),  # Achsentitelgröße anpassen\n        axis.text = element_text(size = 10)  # Achsenbeschriftungsgröße anpassen\n    )\n\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"incongruence\" \"congruence\"  \n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-117-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#Zu Factors machen\nd <- mutate(d, color = as.factor(color),\n            condition = as.factor(congruent))\n\n#Diagnostik: Daten untersuchen\n#zu schnelle und zu langsame Antworten ausschliessen\nd <- d |>\n    filter(rt > 0.09 & rt < 15)\n\n#Person mit correct 1 ausschliessen\nd <- d |>\n    filter(id != \"sub-80444009\")\n\n#Benennung ändern\nlevels (d$condition) [levels (d$condition) == '0'] <- 'incongruence'\nlevels (d$condition) [levels (d$condition) == '1'] <- 'congruence'\nlevels (d$condition)\n\n#Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nacc_rt_individual <- d |>\n    group_by(id, condition) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n#Plot darstellen\nplot1 <- acc_rt_individual %>%\n    ggplot(aes(x = condition, y = accuracy, color = condition)) +\n    geom_line(color = \"grey40\", alpha = 0.5) +\n    geom_jitter(size = 3, alpha = 0.8,\n                width = 0, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(incongruence = \"#E9967A\",\n                                  congruence = \"#8FBC8F\")) +\n    labs(x = \"Bedingung\",\n         y = \"Anteil korrekter Antworten\",\n         title = \"Anteil korrekter Antworten pro Person und Bedingung\",\n         subtitle = \"Konnten die VPN die Aufgabe korrekt lösen?\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\nplot2 <- acc_rt_individual %>%\n    ggplot(aes(x = condition, y = median_rt, color = condition)) +\n    geom_line(color = \"grey40\", alpha = 0.5) +\n    geom_jitter(size = 3, alpha = 0.8,\n                width = 0, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(incongruence = \"#E9967A\",\n                                  congruence = \"#8FBC8F\")) +\n    labs(x = \"Bedingung\",\n         y = \"Mittlere Reaktionszeit [s]\",\n         title = \"Mittlere Reaktionszeit pro Person und Bedingung\",\n         subtitle = \"Wie schnell reagierten die VPN?\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n\nplot1 + plot2\n```\n:::\n:::\n\n\n\n",
    "supporting": [
      "gallery_mo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}