{
  "hash": "25810aafbaa3b001cf4c1fd9b9d99e51",
  "result": {
    "markdown": "---\ntitle: \"Plot Gallery - Mo\"\nauthor:\n  - name: Daniel Fitze\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0003-0158-7459  \n  - name: Gerda Wyssen\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0001-7427-3149\nlicense: CC BY-SA 4.0\ncitation: true\nbibliography: ../../bibliography.bib\nformat:\n    html:\n        toc: true\n---\n\n::: {.cell}\n\n:::\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31,800 × 8\n   id           trial word  color  congruent resp   corr    rt\n   <chr>        <dbl> <chr> <chr>      <dbl> <chr> <dbl> <dbl>\n 1 sub-10318869     1 blau  red            0 r         1 1.02 \n 2 sub-10318869     2 blau  yellow         0 g         1 0.710\n 3 sub-10318869     3 gelb  yellow         1 r         0 0.475\n 4 sub-10318869     4 gelb  yellow         1 g         1 1.04 \n 5 sub-10318869     5 rot   yellow         0 g         1 0.994\n 6 sub-10318869     6 rot   red            1 r         1 0.707\n 7 sub-10318869     7 gelb  red            0 r         1 0.847\n 8 sub-10318869     8 blau  blue           1 b         1 0.618\n 9 sub-10318869     9 rot   blue           0 r         0 0.900\n10 sub-10318869    10 rot   red            1 r         1 0.816\n# ℹ 31,790 more rows\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n#d <- as.data.frame()\n\n# Plot erstellen\n# Rohdaten plotten\nplot_rohdaten <- ggplot(d, aes(x = trial, y = rt, color = congruent)) +\n  geom_point() +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (s)\",\n       color = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Zusammenfassendes Maß (Boxplot) erstellen\nplot_zusammenfassung <- ggplot(d, aes(x = as.factor(congruent), y = rt, fill = as.factor(congruent))) +\n  geom_boxplot() +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Verteilung der Reaktionszeiten nach Kongruenz\",\n       x = \"Kongruenz\",\n       y = \"Reaktionszeit (s)\",\n       fill = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Optional: Facets verwenden, um nach weiteren Variablen zu unterscheiden\n# Hier müsstest du die entsprechenden Facets anpassen und deine Daten entsprechend strukturieren\nplot_facets <- ggplot(d, aes(x = trial, y = rt, color = congruent)) +\n  geom_point() +\n  facet_wrap(~word) +\n  labs(title = \"Stroop Aufgabe\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung und Worttyp\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (s)\",\n       color = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\nprint (d)\n# Optional: Speichern des Plots als Bild\n#ggsave(\"stroop_plot.png\", plot_rohdaten, width = 8, height = 6, units = \"in\")\n\n# Plots anzeigen\n#plot_rohdaten\n#plot_zusammenfassung\n#plot_facets\n\n\n\n# Plot erstellen übereinander\nplot_all <- ggplot(d, aes(x = trial, y = rt)) +\n  geom_point(aes(color = factor(congruent)), position = position_jitter(width = 0.2), alpha = 0.5) +  # Rohdaten anzeigen\n  geom_boxplot(aes(fill = factor(congruent)), alpha = 0.8, outlier.shape = NA) +  # Zusammenfassende Boxplots\n  labs(title = \"Stroop Task: Reaktionszeiten\",\n       subtitle = \"Vergleich der Reaktionszeiten nach Bedingung\",\n       x = \"Versuch\",\n       y = \"Reaktionszeit (in Sekunden)\",\n       color = \"Kongruenz\",\n       fill = \"Kongruenz\",\n       caption = \"dataset_stroop_clean\") +\n  theme_minimal()\n\n# Plot anzeigen\nprint(plot_all)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d |>\n    filter(rt > 0.1 & rt < 1.75) |>\n    select(id, trial, congruent, rt)|>\n    mutate (congruent = as.factor(congruent)) |>\n    mutate(congruent = case_match(congruent,\n                      \"0\" ~ \"inkongruent\",\n                      \"1\" ~ \"kongruent\"))\n\np_boxplot <- d |>\n    filter(id %in% c(\"sub-10318869\", \"sub-1106725\", \"sub-113945\", \"sub-11959984\",\n                     \"sub-12224605\", \"sub-12242654\", \"sub-13366559\", \"sub-13662910\",\n                     \"sub-13937586\", \"sub-13771505\", \"sub-73916681\", \"sub-74487595\",\n                     \"sub-75143607\", \"sub-89031395\", \"sub-90289188\")) |>\n    ggplot(aes(x = congruent, y = rt, color = congruent)) +\n    geom_jitter(alpha = 0.25, width = 0.2) +\n    geom_boxplot(alpha = 0, width = 0.2, color = \"black\") +\n    scale_color_manual(values = c(kongruent  = \"green2\",\n                                  inkongruent = \"pink\")) +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\") +\n    labs(title = \"Reaktionszeit bei In- & Kongruenz\",\n         subtitle = \"Ist die Reaktionszeit geringer bei Kongurenz?\",\n         x = \"Kongruenz\",\n         y = \"Reaktionszeit\",\n         caption = \"Daten von 15 Vpn\" )\n\np_boxplot\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n#Fragestellung: Zeigt sich ein grösserer Lerneffekt (der sich in einer schnelleren Reaktionszeit wiederspiegelt) bei inkongruenten im Verlgeich zu kongruenten Items über die Trials hinweg?\n\n#Erstellen eines Datensatzes mit den für die Fragestellung relevanten Variablen ausgewählt werden und Gruppieren der Trials in 6 Trialgruppen\nd_grouped <- d %>%\n    na.omit() %>%\n    group_by(trial) %>%\n    reframe(id,\n            rt,\n            congruent = congruent == 1,\n            trial_group = case_when(\n                trial >= 1 & trial <= 20 ~ \"Trials 1-20\",\n                trial >= 21 & trial <= 40 ~ \"Trials 21-40\",\n                trial >= 41 & trial <= 60 ~ \"Trials 41-60\",\n                trial >= 61 & trial <= 80 ~ \"Trials 61-80\",\n                trial >= 81 & trial <= 100 ~ \"Trials 81-100\",\n                trial >= 101 & trial <= 120 ~ \"Trials 101-120\"\n            )) %>%\n    mutate(trial_group = factor(trial_group, levels = c(\"Trials 1-20\", \"Trials 21-40\", \"Trials 41-60\", \"Trials 61-80\", \"Trials 81-100\", \"Trials 101-120\")))\n\n#Erstellen einer Variable die den Gesammittelwert der Variable Reaktionszeit beinhaltet\noverall_mean <- mean(d$rt, na.rm = TRUE)\n\n#Erstellen eines Datensatzes in dem zufällig Trials einzelner Teilnehmer:innen ausgewählt und gespeichert werden\nrandom_participants <- d_grouped %>%\n    filter(rt <= 5.0) %>%\n    group_by(trial_group) %>%\n    sample_n(300, replace = FALSE)\n\n#Erstellen des Plots der die genannte Fragestellung beantwortet\np = d_grouped %>%\n    filter(rt <= 5.0) %>%\n    ggplot(mapping = aes(x = trial_group,\n                         y = rt,\n                         fill = congruent)) +\n    geom_boxplot(color = \"black\") +\n    geom_hline(yintercept = overall_mean, linetype = \"dashed\", color = \"blue\", size = 0.8) +\n    geom_jitter(data = random_participants, aes(x = trial_group, y = rt, color = congruent, alpha = 0.3)) +\n    labs(title = \"Reaktionszeiten von kongruenten und inkongruenten Items\",\n         subtitle = \"Zeigt sich ein grösserer Lerneffekt bei inkongruenten im Vergleich zu kongruenten Items über die Trials hinweg?\",\n         x = \"Trialgruppen\",\n         y = \"Reaktionszeit in s\",\n         fill = \"kongruent\",\n         color = \"kongruent\") +\n    theme_light()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# daten vorbereiten\nd_clean <- d %>%\n    drop_na() %>%\n    mutate(across(where(is.character),\n           as.factor)) %>%  # aller text zu factors\n    mutate(corr_fct = as.factor(corr),\n           congr_fct = as.factor(congruent))  # neue vars mit corr und congr als fct\n# plot\nd_clean %>%\n    filter(corr_fct == 1 & rt < 1.5) %>%\n    ggplot(aes(\n    x = color,\n    y = rt,\n    color = color,\n    fill = color)) +\n    geom_jitter(alpha = 0.3, width = 0.2, size = 0.5) +\n    geom_violin(alpha = 0.3, color = \"white\") +\n    geom_boxplot(alpha = 0.1, width = 0.2, color = \"white\") +\n    theme_minimal() +\n    labs(title = \"BLAU MACHT SCHNELL\",\n         subtitle = \"Stoop-Test: Unterscheiden sich die Reaktionszeiten je nach Farbe des Stimulusmaterials?\n(Verwendete Daten: Nur kongruente Stimuluspaare und korrekte Antworten)\",\n         x = \"Farbe Stimulusmaterial\",\n         y = \"Reaktionszeit (s)\",\n         caption = \"Konklusion: Ich streiche mein Studierzimmer blau\") +\n    theme(plot.title = element_text(face = \"bold\")) +\n    scale_color_manual(values = c(\"blue\" = \"royalblue3\",\n                                  \"red\"=\"red3\",\n                                  \"yellow\"=\"gold3\")) +\n    scale_fill_manual(values = c(\"blue\" = \"royalblue3\",\n                                  \"red\"=\"red3\",\n                                  \"yellow\"=\"gold3\"))\n\n\n### links:\n# https://www.statology.org/color-by-factor-ggplot2/\n# https://sape.inf.usi.ch/quick-reference/ggplot2/colour\n# https://kogpsy.github.io/neuroscicomplabFS24/pages/chapters/data_visualization_1.html\n# https://kogpsy.github.io/neuroscicomplabFS24/pages/chapters/data_visualization_2.html\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d |>\n  filter(rt > 0.09 & rt < 15)\n\n\nd_color_rt <- d |>\n  group_by(id, color) |>\n  summarise(\n    mean_rt = mean(rt)\n  )\n\n\np = d_color_rt |>\n  ggplot(aes(x = color, y = mean_rt, color = color)) +\n  geom_jitter(size = 1.5, alpha = 0.4,\n              width = 0.2, height = 0) +\n  geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n  scale_color_manual(values = c(blue = \"blue2\",\n                                red = \"red1\",\n                                yellow = \"yellow1\")) +\n  labs(title = \"Uebung 3\",\n       subtitle = \"Unterscheidet sich die Reaktionszeit der Probanden, je nach Farbe die präsentiert wird?\") +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"none\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31,800\nColumns: 8\n$ id        <chr> \"sub-10318869\", \"sub-10318869\", \"sub-10318869\", \"sub-1031886…\n$ trial     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ word      <chr> \"blau\", \"blau\", \"gelb\", \"gelb\", \"rot\", \"rot\", \"gelb\", \"blau\"…\n$ color     <chr> \"red\", \"yellow\", \"yellow\", \"yellow\", \"yellow\", \"red\", \"red\",…\n$ congruent <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, …\n$ resp      <chr> \"r\", \"g\", \"r\", \"g\", \"g\", \"r\", \"r\", \"b\", \"r\", \"r\", \"b\", \"b\", …\n$ corr      <dbl> 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ rt        <dbl> 1.0174318, 0.7098624, 0.4747468, 1.0407237, 0.9935842, 0.706…\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"red\"    \"yellow\" \"blue\"  \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 2\n$ mean_rt <dbl> 0.7584312\n$ sd_rt   <dbl> 0.3672617\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\nlibrary(ggplot2)\n\n# Datensatz anschauen\nglimpse(d)\n\nunique(d$color)\n\nd_congruent <- d %>%\n    mutate(congruent = as.factor(congruent))%>%\n    filter(rt < 4 & rt > 0.1)\n\n\nd_rt_summary <- d_congruent %>%\nsummarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\n\n\nglimpse(d_rt_summary)\n\n#plot\np = d_congruent |>\n    ggplot(mapping = aes(x =congruent ,\n                         y = rt, color= congruent)) +\n    geom_jitter(width = 0.4, alpha= 0.09) +\n    scale_y_continuous(breaks = seq(0, 4, by = 0.5))+\n    geom_hline(yintercept = d_rt_summary$mean_rt, linetype = \"dashed\", color = \"red\", linewidth= 1)+\n    scale_color_manual(values= c(\"darkviolet\", \"darkblue\"))+\n    labs(title = \"Geringere Reaktionszeit in der kongruenten Bedingungen\",\n         subtitle = \"Unterscheidet sich die Reaktionszeit zwischen der kongruenten und inkongruenten Bedinung?\",\n         x = \"inkongruent vs. kongruent\",\n         y = \"Reaktionszeit in Sekunden\") +\n    theme_classic() +\n    guides(color = FALSE)\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n#Libraries laden\nlibrary(patchwork)\nlibrary(naniar)\nlibrary(psych)\nlibrary(ggpubr)\n\n#Daten vorverarbeiten\n\nd_factor <- d %>%\n    mutate(across(where(is.character), as.factor))\n\nd_filtered <- d_factor %>%\n    filter(rt > 0.09 & rt < 15)\n\n\nd_acc_rt_trial <- d_filtered %>%\n    group_by(congruent, trial) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)) %>%\n    mutate(median_rt = median_rt*1000) %>%\n    filter(accuracy > 0.5)\n\n#Bedingungen in Faktor umwandeln und Levels umbenennen\nd_acc_rt_trial$congruent_string <- factor(d_acc_rt_trial$congruent, levels = c(\"0\", \"1\"))\nlevels(d_acc_rt_trial$congruent_string) <- list(inkongruent = \"0\", kongruent = \"1\")\n\n\n#Plots erstellen\nmy_comparisonsp1 <- list(c(\"kongruent\", \"inkongruent\"))\n\np1 <- d_acc_rt_trial %>%\n    ggplot(aes(x = congruent_string, y= accuracy, color = congruent_string)) +\n    geom_jitter(size = 2.5, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    labs(x = \"Bedingung\",\n         y = \"Genauigkeit\",\n         title = \"Mittlere Genauigkeit pro Bedingung\",\n         subtitle = \"Unterscheidet sich die Genauigkeit\\nzwischen den Bedingungen?\") +\n    theme_classic(base_size = 12) +\n    theme(legend.position = \"none\") +\n    stat_compare_means(comparisons = my_comparisonsp1, label = \"p.signif\", method = \"wilcox.test\", paired = TRUE, ref.group = \"inkongruent\")\n\n\nmy_comparisonsp2 <- list(c(\"kongruent\", \"inkongruent\"))\n\np2 <- d_acc_rt_trial %>%\n    ggplot(aes(x = congruent_string, y= median_rt, color = congruent_string)) +\n    geom_jitter(size = 2.5, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    labs(x = \"Bedingung\",\n         y = \"Mittlere Reaktionszeit [ms]\",\n         title = \"Mittlere Reaktionszeit pro Bedingung\",\n         subtitle = \"Unterscheidet sich die mittlere Reaktionszeit\\nzwischen den Bedingungen?\") +\n    theme_classic(base_size = 12) +\n    theme(legend.position = \"none\") +\n    stat_compare_means(comparisons = my_comparisonsp1, label = \"p.signif\", method = \"wilcox.test\", paired = TRUE, ref.group = \"inkongruent\")\n\np1 + p2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\np = d |>\n    ggplot(aes(x = color, y = rt, color = color)) +\n    geom_jitter(width = 0.2, size = 0.5, alpha = 0.25) +\n    geom_boxplot(width = 0.4, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(blue = \"blue\",\n                                 red = \"red\",\n                                 yellow = \"yellow\")) +\n    theme_minimal() +\n    labs(x = \"color of presented word\",\n         y = \"reaction time [s]\",\n         title = \"Reaction times per color\",\n         subtitle = \"Were the reaction times different for the 3 colors presented?\")\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nt_test_resultate <- t.test(rt ~ congruent, data = d)\n\np_wert <- t_test_resultate$p.value\n\nsignifikanz_label <- ifelse(p_wert < 0.05, \"Es besteht eine Signifikante Interaktion (p < 0.05) zwischen den Kongruenbedingugen.\", \"Es besteht keine signifikante Interaktion (p >= 0.05) zwischen den Kongruenzbedingungen.\")\n\np = d %>%\n    ggplot(aes(x = as.factor(congruent), y = rt, fill = congruent)) +\n    geom_violin(position = 'dodge', alpha = 0.5, color = \"red\", fill = \"orange\") +\n    geom_point(size = 0.5, alpha = 0.5, color = \"red\") +\n    stat_summary(fun = mean, geom = \"point\", size = 3, color = \"black\") +\n    stat_summary(fun = mean, geom = \"line\", aes(group = 1), linetype = \"dashed\", color = \"black\") +\n    stat_summary(fun = mean, geom = \"text\", aes(label = paste(round(..y.., digits = 2))), vjust = -0.5, color = \"black\") +\n    labs(\n        title = \"Stroop Task: Reaktionszeit nach Kongruenz\",\n        subtitle = \"Gibt es Unterschiede in den Reaktionszeiten zwischen den Kongruenzbedingungen?\",\n        x = \"Kongruenz\",\n        y = \"Reaktionszeit (ms)\",\n        caption = signifikanz_label) +\n    theme_grey() +\n    theme(legend.position = \"none\") +\n    scale_x_discrete(\n        breaks = c(0, 1),\n        labels = c(\"Nicht Kongruent\", \"Kongruent\")\n    )\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- factor(d$congruent, levels = c(0, 1), labels = c(\"Inkongruent\", \"Kongruent\"))\n\np <-  ggplot(d, aes(x = congruent, y = rt, color = congruent)) +\n    geom_jitter(size = 3, alpha = 0.4, width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(\"Inkongruent\" = \"tomato2\", \"Kongruent\" = \"skyblue3\")) +\n    labs(title = \"Reaktionszeiten beim Stroop-test\",\n         subtitle = \"Reaktionszeiten bei unterschiedlicher Farb/Schrift-Kongruenz\",\n         x = \"Kongruenz von Farbe und Schrift\",\n         y = \"Reaktionszeit in Sekunden\") +\n    theme_minimal() +\n    guides(color = FALSE)\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3\nColumns: 3\n$ color   <chr> \"blue\", \"red\", \"yellow\"\n$ mean_rt <dbl> 0.7480010, 0.7666614, 0.7739945\n$ sd_rt   <dbl> 0.3989800, 0.3871769, 0.3968618\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#Frage: Unterscheidet sich die Geschwindigkeit je nach Farbe?\n\n# Daten zusammenfassen und fehlende Werte entfernen\nd_summary <- d %>%\n    filter(!is.na(rt)) %>%\n    group_by(color) %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt)) # Standardabweichung berechnen\nglimpse(d_summary)\n\n#Rohdaten verarbeiten damit nur relevanter Bereich gezeigt wird\nd = d %>% filter(rt<1.5)\n\n# Erstellen einer Zuordnung von Farben zu Farben\ncolor_mapping <- c(\"blue\" = \"dodgerblue4\", \"red\" = \"firebrick\", \"yellow\" = \"gold\")\n\n# ggplot mit individuellen Farben für jeden Balken, Standardabweichung und Rohdaten\n\np <- ggplot(d_summary, aes(y = color, x = mean_rt, fill = color)) +\n    geom_bar(stat = 'identity') +\n    geom_point(data = d, aes(x = rt, group = color), position = position_jitter(width = 0.2), color = \"lightgrey\", size = 2.5, alpha = 0.05)+\n    geom_errorbar(aes(xmin = mean_rt - sd_rt, xmax = mean_rt + sd_rt), width = 0.2)+ # Fehlerbalken für Standardabweichung\n    geom_text(aes(label = paste(\"mw =\", round(mean_rt, 3)), x = 0.15), vjust = 0, color = \"black\", size = 3) + # Mittelwert als Zahl in die Balken schreiben\n    geom_text(aes(label = paste(\"sd\")), vjust = -0.5, color = \"black\", size = 3)+ # sd beschriften\n    scale_fill_manual(values = color_mapping) +\n    labs(title = \"Stroop-Test\",\n         subtitle = \"Unterscheidet sich die Reaktionsgeschwindigkeit je nach Farbe?\",\n         y = \"Farbe\",\n         x = \"Durchschnittliche Reaktionszeit in s\")+\n    theme_light() +\n    theme(legend.position = \"none\")  # Farbskala entfernen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31,800\nColumns: 8\n$ id        <chr> \"sub-10318869\", \"sub-10318869\", \"sub-10318869\", \"sub-1031886…\n$ trial     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ word      <chr> \"blau\", \"blau\", \"gelb\", \"gelb\", \"rot\", \"rot\", \"gelb\", \"blau\"…\n$ color     <chr> \"red\", \"yellow\", \"yellow\", \"yellow\", \"yellow\", \"red\", \"red\",…\n$ congruent <fct> 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, …\n$ resp      <chr> \"r\", \"g\", \"r\", \"g\", \"g\", \"r\", \"r\", \"b\", \"r\", \"r\", \"b\", \"b\", …\n$ corr      <dbl> 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ rt        <dbl> 1.0174318, 0.7098624, 0.4747468, 1.0407237, 0.9935842, 0.706…\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd <- d %>% mutate(congruent = as.factor(congruent))\n\npalette <- c (\"#F56598\", \"#74E8CE\")\n\n#Fragestellung: Ist die Reaktionszeit schneller, wenn die Farbe des Worts mit dem Text übereinstimmt?\nglimpse(d)\nminigrafik = d |>\n    ggplot(mapping =\n           aes(x = congruent,\n               y = rt,\n               color = congruent,\n               fill = congruent)) +\n    geom_jitter(size= 1,\n                alpha = 0.5,) +\n    geom_boxplot(width = 0.3, fill = \"white\", color =\"black\", alpha = 0.5, outlier.colour = \"black\", outlier.shape = NA) +\n    scale_color_manual(values = palette, name = \"Kongruenz\", labels = c(\"Inkongruent = 0\", \"Kongruent = 1\")) +\n    scale_fill_manual(values = palette) +\n\n    # Mittelwert\n    stat_summary(fun=mean,\n                 geom=\"point\",\n                 shape=19,\n                 size=1,\n                 color=\"black\",\n                 fill=\"black\",\n                 position=position_dodge(width=0.5)) +\n\n    # Linie um Mittelwert-Differenz darzustellen\n    stat_summary(fun=mean,\n                geom=\"line\",\n                aes(group=1),\n                linetype=\"solid\",\n                color=\"black\",\n                position=position_dodge(width=0.5)) +\n\n    # Mittelwert beschriften\n    geom_text(aes(label = paste(\"MW:\", round(..y.., 2))),\n              stat = \"summary\",\n              vjust = -0.5,\n              color = \"black\",\n              fill = \"black\",\n              position=position_dodge(width=0.5))  +\n\n    # Achsenbeschriftung\n    labs(title = \"Stroop-Experiment\",\n         subtitle = \"Ist die Reaktionszeit schneller, wenn die Farbe des Worts mit dem Text kongruent ist?\",\n         x = \"Kongruenz von Wort und Farbe\",\n         y = \"Reaktionszeit\",\n         caption = \"Datenquelle: Computerlab Neurowissenschaften\") +\n\n    # Definiert die Achsenskalierung für die y-Achse\n    scale_y_continuous(limits = c(0, 3), breaks = seq(0, 3, by = 0.5)) +\n\n    guides(fill = FALSE) +\n    theme_classic()\n\nminigrafik\n\n#ggsave(filename = \"grafik_yael_hess.png\",\n#       plot = minigrafik)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\nd_grouped_and_summarized <- d %>%\n    group_by(id, congruent) %>%\n    summarise(\n        sum_corr = sum(corr),\n        mean_corr = mean(sum_corr)\n    )\n\np = ggplot(data = d_grouped_and_summarized,\n       aes(x = factor(congruent),\n           y = mean_corr,\n           fill = factor(congruent))) +\n    geom_boxplot() +\n    geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n    labs(x = \"Kongruenz\", y = \"Anzahl der richtigen Antworten\", fill = \"Kongruenz\") +\n    scale_fill_manual(values = c(\"1\" = \"lightblue\", \"0\" = \"lightgreen\"),\n                      labels = c(\"kongruent\", \"inkongruent\")) +\n    scale_x_discrete(labels = c(\"1\" = \"kongruent\", \"0\" = \"inkongruent\")) +  # Ändern der Labels auf der x-Achse\n    coord_cartesian(ylim = c(40, 65)) + # limitieren der Spannweite der y-Achse zur besseren Übersicht\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    ggtitle(\"Einfluss der Kongruenz auf die Korrektheit der Antwort\") +  # Titel hinzufügen\n    labs(subtitle = \"Wie unterscheiden sich kongruente Trials von inkongruenten in Bezug auf die Häufigkeit korrekter Antworten?\")  # Untertitel hinzufügen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Rohdaten und Zusammenfassung\np <- d %>%\n  ggplot(aes(x = as.factor(congruent), y = rt, fill = as.factor(congruent))) +\n  geom_jitter( width = 0.2, alpha = 0.5, size = 2, color = \"lightgrey\") +\n  stat_summary(fun = mean, geom = \"point\", shape = 23, size = 3, position = position_dodge(width = 0.75)) +\n  stat_summary(fun = mean, geom = \"errorbar\", position = position_dodge(width = 0.75), width = 0.3, color = \"black\", size = 1.5) +\n  geom_line(stat = \"summary\", aes(group = 1), position = position_dodge(width = 0.75), linetype = \"dashed\") +\n  geom_text(stat = \"summary\", aes(label = round(..y.., 2)), vjust = -1, position = position_dodge(width = 0.8)) +\n  labs(\n    title = \"Durchschnittliche Reaktionszeiten zwischen den Bedingungen\",\n    subtitle = \"Unterschiede in den durchschnittlichen Reaktionszeiten zwischen kongruent und inkongruent\",\n    x = \"Kongruenz\",\n    y = \"Durchschnittliche Reaktionszeit (in ms)\",\n    fill = \"Kongruenz\"\n  ) +\n  scale_fill_manual(values = c(\"magenta\",\"blue\")) +\n  scale_x_discrete(labels = c(\"Nicht kongruent\",\"Kongruent\")) +\n  theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3\nColumns: 3\n$ color   <chr> \"blue\", \"red\", \"yellow\"\n$ mean_rt <dbl> 0.7480010, 0.7666614, 0.7739945\n$ sd_rt   <dbl> 0.3989800, 0.3871769, 0.3968618\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#Frage: Unterscheidet sich die Geschwindigkeit je nach Farbe?\n\n# Daten zusammenfassen und fehlende Werte entfernen\nd_summary <- d %>%\n    filter(!is.na(rt)) %>%\n    group_by(color) %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\nglimpse(d_summary)\n\n#Rohdaten verarbeiten damit nur ein reduzierter Bereich gezeigt wird (dort wo MW & SD liegen)\nd= d %>%\n    filter(rt<1.2)\n\n\n# Erstellen einer Zuordnung von Farben zu Farben\ncolor_mapping <- c(\"blue\" = \"lightskyblue\", \"red\" = \"lightcoral\", \"yellow\" = \"lightgoldenrod1\")\n\n# ggplot mit MW,SD & individuellen Datenpunkten\n\np<- ggplot(d_summary, aes(x = color, y = mean_rt, fill = color)) +\n    geom_bar(stat = 'identity') +\n    geom_point(data = d, aes(y = rt, group = color), position = position_jitter(width = 0.2), color = \"lightgrey\", size = 2.5, alpha=0.05)+\n    geom_errorbar(aes(ymin = mean_rt - sd_rt, ymax = mean_rt + sd_rt), width = 0.2)+ # errorbars=sd\n    scale_fill_manual(values = color_mapping) +\n    labs(title = \"Forschungsfrage\",\n         subtitle = \"Unterscheidet sich die Reaktionsgeschwindigkeit je nach Farbe?\",\n         x = \"Farbe\",\n         y = \"Durchschnittliche Reaktionszeit [ms]\",\n         caption= \"Errorbar= Standardabweichung\")+\n    theme_linedraw()\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  congruent median_rt mean_rt sd_rt\n      <dbl>     <dbl>   <dbl> <dbl>\n1         0     0.718   0.827 0.432\n2         1     0.606   0.699 0.342\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Fragestellung:\n# Ist die Reaktionszeit der Versuchspersonen länger bei inkongruenten Items im Vergleich zu kongruenten Items?\n\n# Daten bereinigen und Überblick verschaffen:\nd_clean <- d %>%\n  filter(!is.na(rt))\n\nsummary_data <- d_clean %>%\n  group_by(congruent) %>%\n  summarize(median_rt = median(rt),\n            mean_rt = mean(rt),\n            sd_rt = sd(rt))\n\n# Anzeigen der summary\nsummary_data\n\n# congruent zu Faktor umwandeln (inkongruent = 0; kongruent = 1)\nd_final <- d_clean %>%\n  mutate(congruent = factor(congruent))\n\n\n# Plot erstellen\np <- ggplot(d_final, aes(x = congruent, y = rt, fill = congruent)) +\n  geom_jitter(width = 0.25, alpha = 0.6, color = \"#000000\", shape = 21, size = 3, stroke = 0.4) +\n  geom_boxplot(alpha = 0.8) +\n  labs(title = \"Reaktionszeiten nach Kongruenz im Stroop Task\",\n       subtitle = \"Ist die Reaktionszeit der Versuchspersonen länger bei inkongruenten Items im Vergleich zu kongruenten Items?\",\n       x = \"Kongruenz\",\n       y = \"Reaktionszeit [s]\",\n       fill = \"Kongruenz\",\n       caption = \"Neurowissenschaft Computerlab - Stroop Task - Universität Bern\") +\n  scale_fill_manual(values = c(\"#9bcd9b\", \"#68829E\"), labels = c(\"inkongruent\", \"kongruent\")) +\n  scale_x_discrete(labels = c(\"inkongruent\", \"kongruent\")) +\n  theme_bw()\n\n# Plot anzeigen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31,800\nColumns: 8\n$ id        <chr> \"sub-10318869\", \"sub-10318869\", \"sub-10318869\", \"sub-1031886…\n$ trial     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ word      <chr> \"blau\", \"blau\", \"gelb\", \"gelb\", \"rot\", \"rot\", \"gelb\", \"blau\"…\n$ color     <chr> \"red\", \"yellow\", \"yellow\", \"yellow\", \"yellow\", \"red\", \"red\",…\n$ congruent <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, …\n$ resp      <chr> \"r\", \"g\", \"r\", \"g\", \"g\", \"r\", \"r\", \"b\", \"r\", \"r\", \"b\", \"b\", …\n$ corr      <dbl> 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ rt        <dbl> 1.0174318, 0.7098624, 0.4747468, 1.0407237, 0.9935842, 0.706…\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 11\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : NULL\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"grey30\"\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      :List of 6\n  ..$ colour       : chr \"grey20\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 2.75points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : 'rel' num 1\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : NULL\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Fragestellung: Reaktionszeit bei kongruenten oder bei inkroguenten Stimuli + mean von rt in Form von Linie einfügen zum Vergleich\nglimpse(d)\n\n#Variable congruent in Faktor umrechnen weil sonst alle Werte möglich zwischen 0 & 1\nd1 <- d %>%\n    mutate(congruent = as.factor(congruent)) %>%\n    filter(rt < 4 & rt > 0.1)\n\n#Mittelwert von rt bilden um diesen als Vergleich in den plot einzufügen\nd2 <- d1 %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt))\n#Plot\np = d1 %>%\n    ggplot(mapping = aes(x = congruent, y = rt, color = congruent)) +\n    scale_y_continuous(breaks = seq(0, 4, by = 0.5)) +\n    geom_jitter(width = 0.35, alpha = 0.1) +\n    geom_hline(yintercept = d2$mean_rt, linetype = \"dashed\", color = \"black\", linewidth = 0.8) +\n    scale_color_manual(values = c(\"darkgreen\", \"darkorange\")) +\n    labs(title = \"Kongruente Stimuli gehen mit einer kürzeren Reaktionszeit einher\",\n         subtitle = \"Weist die kongruente Bedingung schnellere Reaktionszeiten auf als die inkongruente?\",\n         x = \"inkongruent vs. kongruent\",\n         y = \"Reaktionszeit in Sekunden\") +\n    guides(color = FALSE) #Ausblenden der Farb-Legende\n    theme_classic()\np\n\n#glimpse(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31,800\nColumns: 8\n$ id        <chr> \"sub-10318869\", \"sub-10318869\", \"sub-10318869\", \"sub-1031886…\n$ trial     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ word      <chr> \"blau\", \"blau\", \"gelb\", \"gelb\", \"rot\", \"rot\", \"gelb\", \"blau\"…\n$ color     <chr> \"red\", \"yellow\", \"yellow\", \"yellow\", \"yellow\", \"red\", \"red\",…\n$ congruent <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, …\n$ resp      <chr> \"r\", \"g\", \"r\", \"g\", \"g\", \"r\", \"r\", \"b\", \"r\", \"r\", \"b\", \"b\", …\n$ corr      <dbl> 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ rt        <dbl> 1.0174318, 0.7098624, 0.4747468, 1.0407237, 0.9935842, 0.706…\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nglimpse(d)\n\n#Datensatz gruppiert und summarized anhand der für die Beantwortung der Fragestellung relevanten Daten.\nd_grouped_and_summarized_data <- d |>\n  mutate(corr = as.factor(corr))|>\n  group_by(id, corr, rt)|>\n  summarise(\n    ncorrect = corr,\n  )\n\n#Plot erstellt anhand des erstellten Datensatzes\np = d_grouped_and_summarized_data |>\n  filter(rt < 5)|>\n  ggplot(mapping =\n           aes(x= ncorrect, y= rt, color = ncorrect)) +\n  geom_jitter(size= 1, width= 0.4) +\n  geom_boxplot(width = 0.3, color= \"black\") +\n  labs(title = \"Reaktionzeiten und falsche Antworten\",\n       subtitle = \"Haben die VP schneller geantwortet wenn sie falsch geantwortet haben?\",\n       x=\"Antwort\",\n       y = \"Reaktionszeit\")+\n  scale_x_discrete(labels = c(\"Falsch\", \"Richtig\"))+\n  theme_bw()\n\n#Ausgabe des Plots\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- factor(d$congruent, levels = c(0, 1), labels = c(\"Nicht-Kongruent\", \"Kongruent\"))\n\n# Zufällige Auswahl von 15 Personen\nrandom_ids <- sample(unique(d$id), 15)\n\nr_d <- d %>%\n    filter(id %in% random_ids)\n\np = r_d |>\n    ggplot(aes(x = congruent, y = rt, fill = congruent)) +\n    geom_jitter(width = 0.3, alpha = 0.5) +\n    geom_boxplot(outlier.color = \"darkorange\", alpha = 0.75) +\n    scale_fill_manual(values = c(\"cornflowerblue\", \"darkmagenta\")) +\n    labs(title = \"Die Reaktionszeiten von der kongruenten und nicht-kongruenten Bedingung\",\n         subtitle = \"Besteht ein Unterschied in den Reaktionszeiten zwischen der kongruenten und nicht-kongruenten Bedingung?\",\n         x = \"Kongruenz\",\n         y = \"Reaktionszeit [s]\") +\n    theme_bw() +\n    theme(legend.position = \"none\")\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- as.factor(d$congruent)\nlevels(d$congruent) <- c(\"inkongruent\", \"kongruent\")\n\np = d %>%\n    ggplot(mapping = aes(congruent,\n                         rt))+\n    geom_jitter(alpha = 0.4, color = \"grey18\")+\n    geom_boxplot(color = \"lightsalmon2\", alpha = 0.5)+\n    labs(x = \"Kongruenz\",\n         y = \"Reaktionszeit\",\n         title = \"Kongruenz macht schneller!\",\n         subtitle = \"Hat die Übereinstimmung der Farben mit den Wörtern einen Einfluss auf die Reaktionszeit?\")+\n    theme_bw()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   id           trial word  color  congruent resp   corr    rt\n   <fct>        <dbl> <fct> <fct>      <dbl> <fct> <dbl> <dbl>\n 1 sub-10318869     1 blau  red            0 r         1 1.02 \n 2 sub-10318869     2 blau  yellow         0 g         1 0.710\n 3 sub-10318869     3 gelb  yellow         1 r         0 0.475\n 4 sub-10318869     4 gelb  yellow         1 g         1 1.04 \n 5 sub-10318869     5 rot   yellow         0 g         1 0.994\n 6 sub-10318869     6 rot   red            1 r         1 0.707\n 7 sub-10318869     7 gelb  red            0 r         1 0.847\n 8 sub-10318869     8 blau  blue           1 b         1 0.618\n 9 sub-10318869     9 rot   blue           0 r         0 0.900\n10 sub-10318869    10 rot   red            1 r         1 0.816\n```\n:::\n\n::: {.cell-output-display}\n![](gallery_mo_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n#alles zu faktoren machen\nd <- d |>\n    mutate(across(where(is.character), as.factor))\n\n#daten anschauen\nd |>\n    slice_head(n = 10)\n\n# Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nd_acc_rt_individual <- d |>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n\n# Plot erstellen\n\np <- d_acc_rt_individual |>\n    ggplot(aes(x = congruent, y = median_rt, fill = factor(congruent))) +\n    geom_boxplot(alpha = .5) +\n    geom_jitter(alpha = .25, width = .2) +\n    scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"green\")) +\n    labs(title = \"Inhibitionsfähigkeit\",\n         subtitle = \"Ist die Reaktionszeit bei der inkongruenten Bedingung verlangsamt?\",\n         x = \"Kongruenz [Nein (0), Ja (1)]\",\n         y = \"Reaktionszeit [ms]\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\n#Plot ausgeben\np\n```\n:::\n:::\n\n\n\n",
    "supporting": [
      "gallery_mo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}