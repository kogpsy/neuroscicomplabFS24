{
  "hash": "ae1c966a6a2bd4d4925f907be0499230",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Plot Gallery- Mi\"\nauthor:\n  - name: Daniel Fitze\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0003-0158-7459  \n  - name: Gerda Wyssen\n    # url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0001-7427-3149\nlicense: CC BY-SA 4.0\ncitation: true\nbibliography: ../../bibliography.bib\nformat:\n    html:\n        toc: true\n---\n\n::: {.cell}\n\n:::\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 120 × 2\n   trial mean_rt\n   <dbl>   <dbl>\n 1     1   0.987\n 2     2   0.846\n 3     3   0.815\n 4     4   0.798\n 5     5   0.781\n 6     6   0.791\n 7     7   0.768\n 8     8   0.726\n 9     9   0.730\n10    10   0.771\n# ℹ 110 more rows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7628839\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.03252316\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Inwiefern verändern sich die Reaktionszeiten über das Experiment hinweg?\n\n# Numerischen Vektor herstellen:\nd$rt <- as.numeric(as.character(d$rt))\n# Gruppieren nach 'id' und Berechnen des Mittelwerts von 'rt' pro Versuchsperson\nmean_rt_by_trial <- d %>%\n    group_by(trial) %>%\n    summarise(mean_rt = mean(rt, na.rm = TRUE))\n\n# Ausgabe der durchschnittlichen Reaktionszeit pro Versuchsperson\nprint(mean_rt_by_trial)\nmean_mean_rt <- mean(mean_rt_by_trial$mean_rt)\n\n# Ausgabe des Durchschnitts der durchschnittlichen Reaktionszeiten\nprint(mean_mean_rt)\n# Standardabweichung berechnen:\nsd_mean_rt <- sd(mean_rt_by_trial$mean_rt)\nprint(sd_mean_rt)\n\n# Plot erstellen\nggplot(mean_rt_by_trial, aes(x = trial, y = mean_rt, group = trial)) +\n    geom_line(alpha = 0.5) +\n    geom_point(alpha = 0.5, color = \"springgreen3\") +\n    geom_hline(yintercept = mean_mean_rt, linetype = \"dashed\", color = \"violetred\") +\n    geom_errorbar(yintercept = mean_mean_rt, ymin = mean_mean_rt - sd_mean_rt, ymax = mean_mean_rt + sd_mean_rt, color = \"khaki\", width = 0.1) +\n    labs(x = \"Trial\", y = \"Durchschnittliche Reaktionszeit\", subtitle = \"Inwiefern verändern sich die Reaktionszeiten über das Experiment hinweg?\") +\n    ggtitle(\"Verlauf der Reaktionszeiten\") +\n    theme_classic()\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\np = d |>\n    ggplot(aes(x = color, y = rt, fill = color)) +\n    geom_jitter(position = position_jitter(width = 0.2), color = \"black\", size = 1.5, alpha = 0.5) +\n    geom_violin() +\n    scale_fill_manual(values = c(\"blue\", \"red\", \"yellow\")) +\n    labs(\n        title = \"Verteilung der Reaktionszeit nach Wortfarbe\",\n        subtitle = \"Wie unterscheiden sich die Reaktionszeiten nach der Wortfarbe?\",\n        x = \"Wortfarbe\",\n        y = \"Reaktionszeit\",\n        fill = \"Wortfarbe\"\n    ) +\n    theme_light()\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd_ind <- d |>\n    drop_na() |>\n    mutate(trial = as.factor(trial),\n           congruent = as.factor(congruent)) |>\n    group_by(id, congruent) |>\n    summarise(\n        accuracy  = mean(corr) * 100,\n        median_rt = median(rt))\n\np = d_ind |>\n    ggplot(aes(x = congruent, y = median_rt, color = accuracy)) +\n    theme_minimal(base_size = 12) +\n    geom_jitter(size = 2, alpha = 0.6) +\n    geom_boxplot(fill = \"NA\") +\n    scale_color_continuous(type = \"viridis\") +\n    labs(x = \"Bedingung\",\n         y = \"Median Reaktionszeit in Sekunden\",\n         color = \"Richtigkeit der\\nAntworten in %\",\n         title = \"Durchschnittliche Reaktionszeiten pro Versuchsperson\",\n         subtitle = \"Wie unterscheiden sich die Reaktionszeiten in kongruenten\\nund inkongruenten Durchgängen?\") +\n    theme(legend.background = element_rect(color=1),\n          axis.text = element_text(size=12),\n          axis.title.y = element_text(size=14,\n                                      vjust=2),\n          axis.title.x = element_text(size=14),\n          legend.text = element_text(size=12),\n          legend.title = element_text(size=14)) +\n    scale_x_discrete(labels = c(\"inkongruent\", \"kongruent\"))\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# Ziel: Accuracy pro Person und Condition (congruent/nicht-congruent)\n# Wir brauchen die Accuracy der Bedingung (congruent/nicht congruent) für alle Vpn.\n# Dann wollen wir noch ein Mittelmass über Boxplot verwenden\n\n\n# Textvariablen zu Faktoren umwandeln\n# d %>%\n    # mutate(across(where(is.character), as.factor))\n\n\n# d %>%\n    # slice_head(n= 10)\n\n# Gibt es fehlende Werte im Datensatz?\n# naniar::vis_miss(d)\n# Ja es gibt fehlende Werte in den Reaktionszeiten\n\n# Die fehlenden Werte in den Reaktionszeiten genauer anschauen\nd_missings <- d |> naniar::add_label_missings() |>\n    filter(any_missing == \"Missing\")\n\n# head(d_missings)\n\n#Trials, die fehlende Werte in den Reaktionszeiten beinhalten, werden ausgeschlossen:\nd <- d %>%\n    filter(rt != \"NA\")\n\n# Überprüfen: Hat das ausschliessen geklappt?\n# naniar::vis_miss(d)\n# Ja, es gibt keine fehlenden Werte mehr\n\n\n\n# Auschluss von Reaktionszeiten unter 100ms und unter 10 Sekunden\nd <- d %>%\n    filter(rt > 0.09 & rt < 10)\n\n# Daten gruppieren nach ID und Bedingung: Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\n\nacc_rt_individual <- d %>%\n    group_by(id, congruent) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n\n# Plot: Wie viele Trials pro Bedingung hat jede Versuchsperson gelöst?\nacc_rt_individual %>%\n    ggplot(aes(x = id, y = N)) +\n    geom_point() +\n    facet_wrap(~ congruent) +\n    geom_hline(yintercept = 40) + # Horizontale Linie einfügen\n    theme_minimal()\n\n# Datensatz mit allen Ids, welche in mind. einer Condition nicht alle 60 Trials gelöst hatten\nn_exclusions <- acc_rt_individual %>%\n    filter(N < 60)\n\n# Wir schliessen alle Vpn aus, die in mind. einer Bedingung nicht alle 60 Trials gelöst hatten\nd <- d %>%\n    filter(!id %in% n_exclusions$id)\n\n# Wir gruppieren nochmals nach ID und Bedingung: Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen.\n# (Diesmal aber ohne die Subjekte, die nicht in beiden Bedingungen 60 Trials hatten)\nd_acc_rt_individual <- d %>%\n    group_by(id, congruent) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n# Der dazugehörige Plot bestätigt, dass wir alles richtig gemacht haben.\nd_acc_rt_individual %>%\n    ggplot(aes(x = id, y = N)) +\n    geom_point() +\n    facet_wrap(~ congruent) +\n    geom_hline(yintercept = 40) + # Horizontale Linie einfügen\n    theme_minimal()\n\n# Für weitere Analysen verwenden wir nun d_acc_rt_individual\n\n######################################\n\n# Wir schauen nun, ob es betreffend Accuracy noch Ausreisser im Datensatz gibt.\n# Als Ausreisser definieren wir eine Person, die weniger als 40% Accuracy hatte\n\n# Trials nach accuracy einteilen. Dazu fügen wir dem Datensatz d_acc_rt_individual eine neue Variable \"performance\" hinzu\nd_acc_rt_individual <- d_acc_rt_individual %>%\n    mutate(\n        performance = case_when(\n            accuracy > 0.75 ~ \"good\",\n            accuracy < 0.4 ~ \"bad\",\n            TRUE ~ \"chance level\") %>%\n            factor(levels = c(\"good\", \"chance level\", \"bad\")))\n\n# Outlier visualisieren\n# d_acc_rt_individual %>%\n#     ggplot(aes(x = id, y = accuracy, color = performance, shape = performance)) +\n#     geom_point(size = 2, alpha = 0.6) +\n#     geom_point(data = filter(d_acc_rt_individual, performance != \"OK\"),\n#                alpha = 0.9) +\n#     facet_grid(~congruent) +\n#     scale_color_manual(values = c(\"gray40\", \"steelblue\", \"red\")) +\n#     geom_hline(yintercept = 0.5, linetype='dotted', col = 'black')+\n#     annotate(\"text\", x = \"sub-36817827\", y = 0.5, label = \"chance level\", vjust = -1, size = 3) +\n#     theme_minimal(base_size = 12)\n\n# Wir sehen im Plot direkt, dass es einen Ausreisser gibt.\n# Es handelt sich um folgendes Subjekt:\n\naccuracy_outliers <- d_acc_rt_individual %>%\n    filter(performance == \"bad\")\n\n# Wir schliessen den Ausreisser aus dem Datensatz aus:\nd_acc_rt_individual <- d_acc_rt_individual %>%\n    filter(performance != \"bad\")\n\n# Nun kommen wir endlich zum Herzstück. Wir plotten wir die accuracy für jede Person und Bedingung\n\n# Plot p1: Accuracy pro Vpn und Bedingung\n\n# (Wichtig: Wir müssen ggplot sagen, dass \"congruent\" eine kategoriale Variable mit Ausprägungen 0 und 1 ist)\n\np1 <- d_acc_rt_individual |>\n    ggplot(aes(x = factor(congruent, labels = c(\"nicht-kongruent\", \"kongruent\")), y = accuracy, color = factor(congruent))) +\n    geom_jitter(size = 3, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(\"0\" = \"tomato2\",\n                                  \"1\" = \"skyblue3\")) +\n    labs(x = \"Bedingung\",\n         y = \"Anzahl korrekte Trials [%]\",\n         title = \"Accuracy pro Versuchsperson und Bedingung\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n# p1\n\n##### Hier ist die eigentliche Aufgabe verwendet. Als Lösung bitte p1 verwenden #########\n\n# Zum Spass plotten wir noch Plot p2: Reaktionszeit pro Vpn pro Bedingung\n\np2 <- d_acc_rt_individual |>\n    ggplot(aes(x = factor(congruent, labels = c(\"nicht-kongruent\", \"kongruent\")), y = median_rt, color = factor(congruent))) +\n    geom_jitter(size = 3, alpha = 0.4,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.1, alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(\"0\" = \"tomato2\",\n                                  \"1\" = \"skyblue3\")) +\n    labs(x = \"Bedingung\",\n         y = \"Median Antwortzeit [s]\",\n         title = \"Median-Reaktionszeit pro Versuchsperson und Bedingung\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n# p2\n\n#mittels Patchwork können wir p1 und p2 nebeneinander anzeigen lassen\n# Patchwork laden\nlibrary(patchwork)\np1 + p2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nd$Congruence_Label <- ifelse(d$congruent == 0, \"Incongruent\", \"Congruent\")\n\np = d |>\n    ggplot(data = d,\n           mapping = aes(x = Congruence_Label, y = rt, color = Congruence_Label)) +\n    geom_jitter(size = 1.5, alpha = 0.3,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.2, alpha = 0, color = \"black\") +\n    labs(x = \"Congruence of the word and the word color shown in the trial\",\n         y = \"Reaction Time\",\n         title = \"Reaction Time Differences\",\n         subtitle = \"How does the reaction time of the participants differ between the congruent and incongruent trials?\") +\n    scale_color_manual(values = c(\"turquoise\", \"pink\"))+\n    theme_minimal() +\n    theme(legend.position = \"none\")\n\n\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# naniar::vis_miss(d)\n\n#NA sind weniger als 0.1% in dem ganzen Datsatz und sind alle in der Variable rt -> in Plot werden diese rausgefiltert\n\nd<-d %>%\n    mutate(condition=as.factor(congruent))\n\nlevels(d$condition) <- c(\"incongruent\",\"congruent\")\n\n# glimpse(d)\n\n#in der Zeilen 13-16 habe ich eine neue Variable kreiiert (\"condition\"), die ein Vektor der (numerischen) Variable \"congruent\" ist\n\np1=d %>%\n    filter(!is.na(rt)) %>%\n    ggplot(aes(x = condition, y = rt, color = condition))+\n    geom_jitter(size = 2, alpha = 0.3,\n                width = 0.4, height = 0.5) +\n    geom_boxplot(width= 0.5, alpha=0, color = 'black') +\n    scale_y_continuous(limits = c(0, 10))+\n    scale_color_manual(values = c(incongruent = \"lightgreen\",\n                                  congruent = \"darkgreen\"))+\n    labs(x = \"Stroop Condition\",\n         y = \"Reaction Time [s]\",\n         title = \"Reaction Time (RT)\",\n         subtitle = \"Is there a difference in RT between conditions?\") +\n    theme_minimal(base_size = 12) +\n    theme(legend.position = \"none\")\n\np1\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Inwiefern verändern sich die durchschnittlichen Reaktionszeiten zwischen\n# den Farben über alle Trials?\n\nlibrary(ggplot2)\n\nd$rt <- as.numeric(as.character(d$rt))\noverall_avg_rt <- mean(d$rt)\n\nd$rt <- as.numeric(as.character(d$rt))\noverall_avg_rt <- mean(d$rt, na.rm = TRUE)\noverall_sd_rt <- sd(d$rt, na.rm = TRUE)\n\n# Plot Erstellen\np <- d %>%\n    group_by(trial, color) %>%\n    summarise(avg_rt = mean(rt)) %>%\n    ggplot(aes(x = trial, y = avg_rt, color = color)) +\n    geom_line() +\n    geom_errorbar(\n        aes(ymin = avg_rt - overall_sd_rt, ymax = avg_rt + overall_sd_rt),\n        linetype = \"solid\", color = \"grey\", width = 0.1\n    ) +\n    labs(\n        x = \"Trial\",\n        y = \"Reaktionszeit\",\n        color = \"Farben\",\n        title = \"Durchschnittliche Reaktionszeiten pro Farbe über alle Trials\",\n        subtitle = \"Inwiefern verändern sich die durchschnittlichen Reaktionszeiten zwischen den Farben über alle Trials? \"\n    ) +\n    geom_hline(yintercept = overall_avg_rt, linetype = \"solid\" , color = \"black\", linewidth = 1) +\n    theme_minimal() +\n    ggtitle(\"Durchschnittliche Reaktionszeiten pro Farbe über alle Trials\") +\n    theme(\n        axis.title.x = element_text(face = \"bold\"),\n        axis.title.y = element_text(face = \"bold\")\n    )\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nmean_rt <- mean(d$rt)\nsd_rt <- sd(d$rt)\n\np = d |>\n    ggplot(data = d,\n           mapping = aes(x = rt,\n                         y = corr)) +\n    geom_point() +\n    geom_hline(yintercept = mean(d$corr), linetype = \"dashed\", color = \"red\", size = 1) + # Horizontale Linie für den Mittelwert der Wahrscheinlichkeit falscher Antworten\n    annotate(\"text\", x = mean_rt, y = mean(d$corr) + 0.05, label = paste(\"Mean RT:\", round(mean_rt, 2)), color = \"blue\", hjust = 0) + # Text für den Mittelwert der Reaktionszeit\n    annotate(\"text\", x = mean_rt, y = mean(d$corr) + 0.1, label = paste(\"SD RT:\", round(sd_rt, 2)), color = \"green\", hjust = 0) + # Text für die Standardabweichung der Reaktionszeit\n    labs(title = \"Uebung 3: ggplot\",\n         subtitle = \"Beziehung zwischen Reaktionszeit und der Wahrscheinlichkeit einer falschen Antwort\",\n         x = \"Reaktionszeit\", y = \"Wahrscheinlichkeit einer falschen Antwort\") +\n    theme_minimal()\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n#Beginnen Sie hier mit Ihrem Code\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Daten zusammenfassen und fehlende Werte entfernen\nd_summary <- d %>%\n    filter(!is.na(rt)) %>%\n    group_by(color) %>%\n    summarise(mean_rt = mean(rt),\n              sd_rt = sd(rt)) # Standardabweichung berechnen\n\n# Rohdaten verarbeiten damit nur relevanter Bereich gezeigt wird\nd <- d %>% filter(rt < 1.5)\n\n# Erstellen einer Zuordnung von Farben zu Farben\ncolor_mapping <- c(\"blue\" = \"blue\", \"yellow\" = \"gold\")\n\n# ggplot mit individuellen Farben für jeden Balken, Standardabweichung und Rohdaten\np <- ggplot(d_summary %>% filter(color %in% c(\"yellow\", \"blue\")), aes(y = color, x = mean_rt, fill = color)) +\n    geom_bar(stat = 'identity') +\n    geom_point(data = d %>% filter(color %in% c(\"yellow\", \"blue\")), aes(x = rt, group = color), position = position_jitter(width = 0.2), color = \"lightgrey\", size = 2.5, alpha = 0.05)+\n    geom_errorbar(data = d_summary %>% filter(color %in% c(\"yellow\", \"blue\")), aes(xmin = mean_rt - sd_rt, xmax = mean_rt + sd_rt), width = 0.2)+ # Fehlerbalken für Standardabweichung\n    geom_text(aes(label = paste(\"mw =\", round(mean_rt, 3)), x = 0.15), vjust = 0, color = \"black\", size = 3, data = d_summary %>% filter(color %in% c(\"yellow\", \"blue\"))) + # Mittelwert als Zahl in die Balken schreiben\n    geom_text(aes(label = paste(\"sd\")), vjust = -0.5, color = \"black\", size = 3, data = d_summary %>% filter(color %in% c(\"yellow\", \"blue\")))+ # sd beschriften\n    scale_fill_manual(values = color_mapping) +\n    labs(title = \"Stroop-Test\",\n         subtitle = \"Unterscheidet sich die Reaktionsgeschwindigkeit zwischen gelb und blau?\",\n         y = \"Farbe\",\n         x = \"Durchschnittliche Reaktionszeit in s\") +\n    theme_light() +\n    theme(legend.position = \"none\")  # Farbskala entfernen\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\ndata_summary <- d %>%\n    group_by(id, congruent) %>%\n    summarise(total_correct = sum(corr, na.rm = TRUE), .groups = 'drop')\nplot_corrans <- ggplot(data_summary, aes(x = factor(congruent), y = total_correct, fill = factor(congruent))) +\n    geom_boxplot(color = \"black\", fill = \"transparent\", outlier.shape = NA) +\n    geom_point(aes(color = factor(congruent)), position = position_jitter(width = 0.35), size = 2, alpha = 0.3) +\n    scale_fill_manual(values = c(\"purple\", \"green\")) +\n    scale_color_manual(values = c(\"purple\", \"green\")) +\n    scale_x_discrete(labels = c(\"0\" = \"Inkongruent\", \"1\" = \"Kongruent\")) +\n    labs(title = \"Gesamtanzahl der korrekten Antworten nach Kongruenz\",\n         subtitle = \"Vergleich von kongruenten und inkongruenten Bedingungen pro Person\",\n         x = \"Kongruenz\",\n         y = \"Gesamtanzahl korrekter Antworten\",\n         caption = \"Datenquelle: Stroop-Experiment\") +\n    theme_minimal() +\n    theme(\n        plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12),\n        axis.title = element_text(face = \"bold\", size = 12),\n        axis.text = element_text(size = 10),\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 9),\n        legend.position = \"none\"\n    )\n\nplot_corrans\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# sum(is.finite(d$rt))\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n    geom_violin(trim = FALSE) +\n    stat_summary(fun = mean,\n                 geom = \"crossbar\",\n                 color = \"black\",\n                 size = 0.5,\n                 fatten = 2) +\n    coord_cartesian(ylim = c(0, 2.5)) +\n    labs(title = \"Vergleich der Reaktionszeiten im Stroop-Experiment\",\n         subtitle = \"Gibt es einen Unterschied der Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n         x = \"Kongruenz (0 = Inkongruent, 1 = Kongruent)\",\n         y = \"Reaktionszeit (s)\") +\n    scale_fill_manual(values = c(\"#FF1493\", \"#B4EEB4\")) +\n    geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n    theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n#Plot erstellen\nlibrary(ggplot2)\n\nd %>%\n    ggplot(aes(word,rt,\n               colour = corr))+\n    geom_point(size = 1, alpha = 0.5)+\n    facet_wrap(~color)+\n    geom_boxplot(alpha = 0.5)+\n    theme_bw()+\n    labs(title = \"Unterscheiden sich die Reaktionszeiten zwischen Kongruent und Inkongruent?\")\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Alle mit Reaktionszeit grösser als 3.00 Sekunden und kleiner als 0.09 entfernen\nd <- d %>%\n    filter(rt > 0.09 & rt <= 3.00)\n\n# Erstellen eines neuen Datenrahmens mit den Titeln für die Facets\nfacet_labels <- data.frame(color = unique(d$color), facet_title = c(\"Wortfarbe: rot\", \"Wortfarbe: gelb\", \"Wortfarbe: blau\"))\n\n# Verbindung von Facet-Titeln mit dem Datensatz\nd_with_labels <- left_join(d, facet_labels, by = \"color\")\n\n\n# Erstellen des Plots mit individuellen Facet-Titeln\nplot <- ggplot(data = d_with_labels, aes(x = word,\n                                         y = rt,\n                                         fill = factor(congruent))) +\n    geom_jitter(alpha = .04) +\n\n    #Boxplot soll über dem jitter sein\n    geom_boxplot(alpha = .75) +\n\n    # Achsenbeschriftungen\n    labs(title = \"Stroop-Paradigma: Reaktionszeiten in Abhängigkeit von Farbwort und Wortfarbe\",\n         subtitle = \"Unterscheiden sich die Reaktionszeiten zwischen Kongruenten und Inkongruenten Items?\",\n         x = \"Farbwort\",\n         y = \"Reaktionszeit [Sekunden]\",\n         fill = \"Kongruenz\",\n         caption = \"Verteilung der Reaktionszeiten (in Sekunden) in Abhängigkeit, ob Farbwort und Wortfarbe\n                    übereinstimmend waren (Kongruent) oder nicht übereinstimmend waren (Inkongruent).\n                    Jeder Panel zeigt die Daten für eine bestimmte Wortfarbe.\n                    Einzelne Reaktionszeiten sind durch die Jitter-Punkte dargestellt.\") +\n    scale_fill_manual(values = c(\"0\" = \"sienna1\", \"1\" = \"paleturquoise2\"),\n                      labels = c(\"0\" = \"Inkongruent\", \"1\" = \"Kongruent\")) +\n    theme_light() +\n    theme(legend.title = element_blank()) + #Kein Titel für die Legende\n    theme(legend.justification = \"top\") + # Legende obenrechts platzieren\n    facet_wrap(~facet_title, scales = \"free\")\n\nplot\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nlibrary(ggplot2)\n\np = d %>%\n  ggplot(aes(x = word, y = rt, fill = color)) +\n  geom_jitter(color= \"grey\", position = position_jitter(width = 0.2), alpha = 0.1) +\n  labs(\n    title = \"Stroop-Test\",\n    subtitle = \"Unterschied in den Reaktionszeiten kongruent vs. inkongruent\",\n    x = \"Wort\",\n    y = \"Reaktionszeit (ms)\",\n    fill = \"Farbe\"\n  ) +\n  geom_boxplot() +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"steelblue1\", \"indianred1\", \"yellow\"))\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# sum(is.finite(d$rt))\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n    geom_violin(trim = FALSE) +\n    stat_summary(fun = mean,\n                 geom = \"crossbar\",\n                 color = \"black\",\n                 size = 0.5,\n                 fatten = 2) +\n    coord_cartesian(ylim = c(0, 2.5)) +\n    labs(title = \"Vergleich der Reaktionszeiten im Stroop-Experiment\",\n         subtitle = \"Gibt es einen Unterschied der Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n         x = \"Kongruenz (0 = Inkongruent, 1 = Kongruent)\",\n         y = \"Reaktionszeit (s)\") +\n    scale_fill_manual(values = c(\"coral\", \"cornflowerblue\")) + #Orange und Blau\n    geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n    theme_minimal()\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-48-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-48-3.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\nlibrary(tidyverse)\nlibrary(patchwork)\n\n# Daten laden\n# d <- read.csv(\"data/dataset_stroop_clean.csv\")\n\n# d %>% slice_head(n = 10)\n\n# Diagnostik\n\n#view(d)\n# naniar::vis_miss(d)\n# summary(d$rt)\n\n\n\n# eigentlich sollte im Zuge des Data Wranglings alle NA's entfernt worden sein (daher _clean) aber mit summary(d$rt) erscheinen 19 NA's\n\n# NA's entfernen\n\nd_missings <- d |> naniar::add_label_missings() |>\n    filter(any_missing == \"Missing\")\n\n# head(d_missings)\n\n# Variable congruent in conditions mit congruent/incongruent umwandeln\n\nd_conditions <- d %>%\n    na.omit() %>%\n    mutate(condition = case_when(congruent == 1 ~ \"congruent\",\n                                 congruent == 0 ~ \"incongruent\"))\n\n\n# Plot 1: Reaktionszeitsunterschiede zwischen conditions\n\np1 <- d_conditions %>%\n    ggplot(aes(x = condition, y = rt, color = condition)) +\n    geom_jitter(size = 3, alpha = 0.6,\n                width = 0.4, height = 0) +\n    geom_boxplot(width = 0.5, alpha = 0.8, color = \"black\") +\n    geom_violin(alpha = 0, color = \"black\") +\n    scale_color_manual(values = c(congruent = \"tomato2\",\n                                  incongruent =\"skyblue3\"))+\n    labs(title = \"Differences in reaction time between conditions\",\n         subtitle = \"Could we measure the colour-interference effect?\",\n         caption = \"Übung 3 - Plot, congruent = colour-to-word match, incongruent = colour-to-word mismatch\",\n         x = \"Conditions\",\n         y = \"Reaction time (s)\") +\n    theme_classic(base_size = 12) +\n    theme(legend.position = \"right\",\n          plot.title.position =\"plot\")+\n    scale_y_continuous(breaks = seq(0, max(d_conditions$rt), by = 0.5))\n\np1\n\n\n# Für versch. Farben und conditions\n\nd_farben <-  d_conditions %>%\n    filter(color %in% c(\"yellow\", \"red\", \"blue\"))\n\nd_farben$congruent <- factor(d_farben$congruent)\n\n# Plot erstellen\n\nd_farben$congruent <- factor(d_farben$congruent, levels = c(0, 1), labels = c(\"incongruent\", \"congruent\"))\n\np2 <- ggplot(d_farben, aes(x = color, y = rt, fill = color)) +\n    geom_boxplot(position = position_dodge(width = 0.8)) +\n    labs(title = \"Reaction time for different colours\",\n         subtitle = \"Are there differences in reaction time between colours and conditions?\",\n         x = \"Colour\",\n         y = \"Reaction time (s)\",\n         fill = \"Colour\") +\n    facet_wrap(~ congruent, scales = \"free\") +\n    scale_fill_manual(values = c(\"blue\" = \"blue\", \"yellow\" = \"yellow\", \"red\" = \"red\")) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_y_continuous(breaks = seq(0, max(d_conditions$rt), by = 0.5))\n\n\np2\n\n# zusammenfügen\n\np1 + p2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\np <- d|>\n    mutate(congruent = as.factor(congruent))|>\n    mutate(congruent = fct_recode(congruent ,\n                                  incongruent = \"0\" ,\n                                  congruent = \"1\")) |>\n    filter(rt != \"NA\")|>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(), mean_rt = mean(rt))|>\n    ggplot(aes(x = congruent, y = mean_rt, color = congruent)) +\n    geom_jitter(size = 1.5, alpha = 0.5,\n                width = 0.2, height = 0) +\n    geom_boxplot(width = 0.4, alpha = 0, color = \"black\") +\n    labs(\n        x = \"Condition\",\n        y = \"Mean Response Time [s]\",\n        title = \"Mean Response Time per Person and Condition\",\n        subtitle = \"Comparison of mean response times for the congruent and incongruent condition during a Stroop test\",\n        fill = \"Condition\",\n        colour = \"Condition\"\n    ) +\n    theme_minimal()\np\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n\n\nd_filtered = d |>\n    filter(!is.na(rt))\n\n\ngroup_color = d_filtered |>\n    group_by(id, color, congruent) |>\n    summarise(mean_rt = mean(rt))\n\n\ngroup_color <- group_color %>%\n    mutate(congruent = recode(congruent, `0` = \"nicht kongruent\", `1` = \"kongruent\"))\n\n\ngroup_color <- group_color %>%\n    mutate(color = recode(color, `yellow` = \"Gelb\", `red` = \"Rot\", `blue` = \"Blau\"))\n\n\nvisual <- group_color %>%\n    ggplot(aes(x = color, y = mean_rt, color = congruent)) +\n    geom_jitter() +\n    geom_boxplot()+\n    labs(title = \"Gruppenunterschiede in der Reaktionszeit zwischen Farben (mit und ohne Kongruenz zwischen Farbe & Wort)\",\n         subtitle = \"Gibt es Gruppenunterschiede zwischen bei Kongruenz von Farbe und Wort & gibt es dabei Unterschiede zwischen den Farben?\",\n         x = \"Farben\", y=\"Durchschnittliche Reaktionszeit\", color = \"Kongruenz\")+\n    theme_minimal() +\n    theme(plot.subtitle = element_text(color = \"blue\"))\n\n\nvisual\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\nlibrary(ggplot2)\nlibrary(patchwork)\n\nperson_rt <- d %>%\n  group_by(id, congruent) %>%\n  summarize(median_rt = median(rt, na.rm = TRUE)) %>%\n  ungroup() %>%\n  mutate(Condition = ifelse(congruent == 1, \"Congruent\", \"Incongruent\"))\n\n# proportion correct per person for each condition\nperson_corr <- d %>%\n  group_by(id, congruent) %>%\n  summarize(proportion_correct = mean(corr, na.rm = TRUE)) %>%\n  ungroup() %>%\n  mutate(Condition = ifelse(congruent == 1, \"Congruent\", \"Incongruent\"))\n\n\np1 <- person_rt %>%\n  ggplot(aes(x = Condition, y = median_rt, color = Condition)) +\n  geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n  scale_color_manual(values = c(Incongruent = \"tomato2\",\n                                Congruent = \"skyblue3\")) +\n  geom_boxplot(alpha = 0, outlier.shape = NA) +\n  labs(title = 'Median Response Time',\n       x = 'Condition',\n       y = 'Median Response Time (seconds)') +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  theme(legend.position = 'inside')\n\n\np2 <- person_corr %>%\n  ggplot(aes(x = Condition, y = proportion_correct, color = Condition)) +\n  geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n  scale_color_manual(values = c(Incongruent = \"tomato2\",\n                                Congruent = \"skyblue3\")) +\n  geom_boxplot(alpha = 0, outlier.shape = NA) +\n  labs(title = 'Correct answers',\n       x = 'Condition',\n       y = 'Proportion Correct (percent)') +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  theme(legend.position = 'none')\n\n\n\np1 + p2 + plot_annotation(\"Inter-Personal Comparisons in Stroop Performance\", caption = \"Median per Person\", theme=theme(plot.title=element_text(hjust=0.5)))\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\np = d |>\n    mutate(across(where(is.character), as.factor))\n\n# Datensatz anschauen\n# d |>\n    # slice_head(n = 10)\n\n\n#Die Frage mit der ich mich befasse, ist, wie sich die Accuracy und die Response Time\n#zwischen den Bedinungen (Congruent vs. Incongruent) unterscheidet.\n#Dazu erstelle ich eine Grafik, die den Unterschied in der Accuracy bzw. der Response Time\n#der einzelnen Personen zwischen den beiden Bedingungen vergleicht.\n\n\n# library(naniar)\n\n# naniar::vis_miss(d)\n\nd_missings <- d |> naniar::add_label_missings() |>\n    filter(any_missing == \"Missing\")\n\n# head(d_missings)\n\n\n# zu schnelle und zu langsame Antworten ausschliessen\nd <- d |>\n    filter(rt > 0.09 & rt < 15)\n\n\n# Daten gruppieren:  Anzahl Trials, Accuracy und mittlere Reaktionszeit berechnen\nacc_rt_individual <- d |>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)) |>\n        ungroup() %>%\n        mutate(Condition = ifelse(congruent == 1, \"Congruent\", \"Incongruent\"))\n\n# Plot: Anzahl TrconditionCall()# Plot: Anzahl Trials pro Bedingung für jede Versuchsperson\n\n# acc_rt_individual |>\n#     ggplot(aes(x = id, y = N)) +\n#     geom_point() +\n#     facet_wrap(~ congruent) +\n#     geom_hline(yintercept = 40) + # Horizontale Linie einfügen\n#     theme_minimal()\n\n# Datensatz mit allen Ids, welche zuwenig Trials hatten\nn_exclusions <- acc_rt_individual |>\n    filter(N < 40)\n\n# Aus dem Hauptdatensatz diese Ids ausschliessen\nd <- d |>\n    filter(!id %in% n_exclusions$id)\n\n# Check\nd_acc_rt_individual <- d |>\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)) |>\n        ungroup() %>%\n        mutate(Condition = ifelse(congruent == 1, \"Congruent\", \"Incongruent\"))\n\n# Plot accuracy per person and condition\n\np1 <- d_acc_rt_individual |>\n    ggplot(aes(x = Condition, y = accuracy, color = Condition)) +\n    geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n    scale_color_manual(values = c(Incongruent = \"tomato2\",\n                                  Congruent = \"skyblue3\")) +\n    geom_boxplot(alpha = 0, outlier.shape = NA) +\n    labs(title = 'Accuracy per Person and Condition',\n         x = 'Condition',\n         y = 'Proportion correct') +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    theme(legend.position = 'none')\n\np2 <- d_acc_rt_individual |>\n    ggplot(aes(x = Condition, y = median_rt, color = Condition)) +\n    geom_point(position = position_jitter(width = 0.2), alpha = 0.5) +\n    scale_color_manual(values = c(Incongruent = \"tomato2\",\n                                  Congruent = \"skyblue3\")) +\n    geom_boxplot(alpha = 0, outlier.shape = NA) +\n    labs(title = 'Median Response Time per Person and Condition',\n         x = 'Condition',\n         y = 'Median Response Time (seconds)') +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    theme(legend.position = \"none\")\n\n\np1 + p2\n\n\n\n\n\n#Die Antwort auf meine Fragestellung:\n#Die Accuracy ist in der Congruenten Bedingung etwas höher als in der Incongruenten Bedinung.\n#Die Response Time ist in der Congruenten Bedinung schneller als in der Incongruenten Bedingung.\n#Dies entspricht meinen Erwartungen\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n# sum(is.finite(d$rt))\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n    geom_violin(trim = FALSE) +\n    stat_summary(fun = mean,\n                 geom = \"crossbar\",\n                 color = \"black\",\n                 size = 0.5,\n                 fatten = 2) +\n    coord_cartesian(ylim = c(0, 2.5)) +\n    labs(title = \"Stroop-Experiment: Vergleich der Reaktionszeiten\",\n         subtitle = \"Unterscheiden sich die Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n         x = \"Kongruenz (0 = inkongruent, 1 = kongruent)\",\n         y = \"Reaktionszeit (s)\") +\n    scale_fill_manual(values = c(\"#FF00CC\", \"#33FF33\")) +\n    geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n    theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# sum(is.finite(d$rt))\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n    geom_violin(trim = FALSE) +\n    stat_summary(fun = mean,\n                 geom = \"crossbar\",\n                 color = \"black\",\n                 size = 0.5,\n                 fatten = 2) +\n    coord_cartesian(ylim = c(0, 2.5)) +\n    labs(title = \"Vergleich der Reaktionszeiten im Stroop-Experiment\",\n         subtitle = \"Gibt es einen Unterschied der Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n         x = \"Kongruenz (0 = Inkongruent, 1 = Kongruent)\",\n         y = \"Reaktionszeit (s)\") +\n    scale_fill_manual(values = c(\"#FFFF00\", \"#FF69B4\")) + # Gelb und Pink\n    geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n    theme_minimal()\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- d %>%\n    mutate(across(where(is.character), as.factor))\n\n# Missings ausschliessen:\n# naniar::vis_miss(d)\n\nd_missings <- d |> naniar::add_label_missings() |>\n    filter(any_missing == \"Missing\")\n\n# head(d_missings)\n\nd <- d |>\n    filter(rt != \"NA\")\n\n# naniar::vis_miss(d)\n\n# Unrealistische (Ausreisser-)Werte filtern:\n# summary(d)\n\nd <- d %>%\n    filter(rt > 0.1)\n\n# Nach Vpn gruppieren:\nd_individual <- d %>%\n    group_by(id) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n# Ausreisser filtern (u.a. ästhetische Gründe):\n# ggplot(data = d_individual,\n#        mapping = aes(x= accuracy,\n#                      y= median_rt)) +\n#            geom_jitter()\n\nd_individual <- d_individual %>%\n    filter(accuracy > 0.9,\n           median_rt < 1.5)\n\n# Nach Farbe gruppieren:\nd_color <- d %>%\n    group_by(color) %>%\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt),\n        sd_rt = sd(rt)\n    )\n\n# ggplot(data = d_color,\n#        mapping = aes(x = accuracy,\n#                      y = median_rt)) +\n#     geom_jitter()\n\n# Farbengetrennte Datensätze:\nd_red <- d_color %>%\n    filter(color==\"red\")\n\nd_blue <- d_color %>%\n    filter(color==\"blue\")\n\nd_yellow <- d_color %>%\n    filter(color==\"yellow\")\n\n\n# Plot:\nggplot(data = d_individual,\n       mapping = aes(x = accuracy*100,\n                     y = median_rt)) +\n    geom_point(size = 5,\n               alpha = 0.25) +\n    geom_errorbar(data = d_blue,\n                    aes(x = accuracy*100,\n                        y = median_rt,\n                        ymin = median_rt - sd_rt,\n                        ymax = median_rt + sd_rt),\n                    color = '#0000FF',\n                  width = 0.5) +\n    geom_point(data = d_blue,\n               aes(x = accuracy*100,\n                   y = median_rt),\n               color = '#0000FF',\n               size = 6) +\n    geom_errorbar(data = d_red,\n                  aes(x = accuracy*100,\n                      y = median_rt,\n                      ymin = median_rt - sd_rt,\n                      ymax = median_rt + sd_rt),\n                  color = '#FF0000',\n                  width = 0.5) +\n    geom_point(data = d_red,\n               aes(x = accuracy*100,\n                   y = median_rt),\n               color = '#FF0000',\n               size = 6) +\n    geom_errorbar(data = d_yellow,\n                  aes(x = accuracy*100,\n                      y = median_rt,\n                      ymin = median_rt - sd_rt,\n                      ymax = median_rt + sd_rt),\n                  color = '#FFD700',\n                  width = 0.5) +\n    geom_point(data = d_yellow,\n               aes(x = accuracy*100,\n                   y = median_rt),\n               color = '#FFD700',\n               size = 6) +\n    labs(title = \"Farbunterschiede im Stroop-Test\",\n         subtitle = \"Welche Farbe wird am besten erkannt?\",\n         x = \"Richtige Antworten [%]\",\n         y = \"Mittlere Reaktionszeit [s]\") +\n    xlim(90, 100) +\n    theme_bw()\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code innerhalb der folgenden 2 Linien darf nicht verändert werden\n# --------------------------------------------------------------------------------------\n# Beginnen Sie hier mit Ihrem Code:\n\nd$congruent <- recode(d$congruent, \"0\" = \"incongruent\", \"1\" = \"congruent\") %>%\n    as.factor()\n\nd_mean_rt_individual <- d %>%\n    drop_na() %>%\n    group_by(id, congruent) %>%\n    summarise(mean_rt = mean(rt)) %>%\n    ungroup() %>%\n    group_by(congruent) %>%\n    mutate(sd_congruency = sd(mean_rt), mean_congruency = mean(mean_rt))\n\nlibrary(ggridges)\np5 <- d_mean_rt_individual %>%\n    ggplot(mapping = aes(x = mean_rt, y = congruent, fill = congruent, colour = congruent)) +\n    geom_density_ridges(aes(point_color = congruent, point_fill = congruent),\n                        alpha = .2, point_alpha = 1, scale = 0.6, jittered_points = TRUE) +\n    scale_fill_manual(values = c(\"tomato3\", \"skyblue3\")) +\n    geom_errorbarh(aes(xmax = d_mean_rt_individual$mean_congruency + d_mean_rt_individual$sd_congruency,\n                       xmin = d_mean_rt_individual$mean_congruency - d_mean_rt_individual$sd_congruency),\n                   linewidth = 1, colour = \"#000000\",) +\n    labs(title = \"Congruency Effect on Reaction Time (rt) Standard Deviation (SD)\",\n         subtitle = \"Is SD Inreased in Incongruent Stroop Task?\",\n         x = \"rt (s)\",\n         y = \"congruency\") +\n    theme_light(base_size = 12) +\n    theme(legend.position = \"none\")\n\np5\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n## congruent in factor umwandeln\nd <- d %>%\n    mutate(congruence = as.factor(congruent),\n           congruence = fct_recode(congruence,\n                                   kongruent = \"1\",\n                                   inkongruent = \"0\"))\n\n## Durchschnittliche rt pro Bedingung berechnen\nd_rt_summary <- d %>%\n    select(rt,congruence) %>%\n    drop_na() %>%\n    group_by(congruence) %>%\n    summarise(rt_mean = mean(rt))\n\n## Reaktionszeit pro Person pro Bedingung berechnen\nd_rt_pp <- d %>%\n    select(id, rt, congruence) %>%\n    drop_na() %>%\n    group_by(id, congruence) %>%\n    summarise(rt_pp = mean(rt))\n\n## Standardfehler berechnen\nd_rt_within <- d %>%\n    select(id, congruence, rt) %>%\n    drop_na() %>%\n    Rmisc::summarySEwithin(measurevar = \"rt\",\n                           withinvars = \"congruence\",\n                           idvar = \"id\",\n                           na.rm = FALSE,\n                           conf.interval = 0.95)\n\n## Plot erstellen\nplot <- d %>%\n    ggplot(aes(x = congruence, y = rt, color = congruence, group = 1)) +\n    geom_jitter(data = d_rt_pp,\n                aes(x = congruence, y = rt_pp),\n                alpha = 0.75,\n                width = 0.15) +\n    geom_point(data = d_rt_summary,\n               aes(x = congruence, y = rt_mean),\n               color = \"#454545\",\n               size = 2.25) +\n    geom_errorbar(data = d_rt_within,\n                  width = 0.075,\n                  aes(ymin = rt-sd, ymax = rt+sd),\n                  color = \"#454545\") +\n    scale_color_manual(values = c(kongruent = \"#2E8B57\",\n                                  inkongruent = \"#EE9A49\")) +\n    labs(x = \"Bedingung\",\n         y = \"Reaktionsgeschwindigkeit [s]\",\n         title = \"Reaktionszeiten pro Person und Bedingung\",\n         subtitle = \"Unterscheidet sich die Reaktionszeit je nach Bedingung?\",\n         caption = \"Mittelwerte + Standardabweichungen\",\n         color = \"Bedingung\") +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n\nplot\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n    geom_violin(trim = FALSE) +\n    stat_summary(fun = mean,\n                 geom = \"crossbar\",\n                 color = \"black\",\n                 size = 0.5,\n                 fatten = 2) +\n    coord_cartesian(ylim = c(0, 2.5)) +\n    labs(title = \"Vergleich der Reaktionszeiten im Stroop-Experiment\",\n                           subtitle = \"Gibt es einen Unterschied der Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n                           x = \"Kongruenz (0 = Inkongruent, 1 = Kongruent)\",\n                           y = \"Reaktionszeit (s)\") +\n    scale_fill_manual(values = c(\"#FF9999\", \"#9999FF\")) +\n    geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n    theme_minimal()\n\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n\n#Version 1: Boxplot\np1 = d %>%\n    mutate(Zusammenhang = if_else(congruent == 1, \"Kongruent\", \"Inkongruent\")) %>%\n    ggplot((aes(x=Zusammenhang, y=rt))) + geom_boxplot(fill = \"skyblue\", color = \"darkblue\") +\n    labs(title = \"Vergleich der Reaktionszeiten\",\n         subtitle = \"Unterscheiden sich die Reaktionszeiten je nach Bedingung?\",\n         x = \"Bedingungen\",\n         y = \"Reaktionszeit (s)\")\n\n#Version 2: Histogramm\np2 = d %>%\n    mutate(Zusammenhang = if_else(congruent == 1, \"Kongruent\", \"Inkongruent\")) %>%\n    ggplot(aes(x = rt, fill = Zusammenhang)) +\n    geom_histogram(position = \"dodge\", bins = 20, color = \"black\") +\n    labs(title = \"Vergleich der Reaktionszeiten\",\n         subtitle = \"Unterscheiden sich die Reaktionszeiten je nach Bedingung?\",\n         x = \"Reaktionszeit (s)\",\n         y = \"Anzahl der Beobachtungen\") +\n    scale_fill_manual(values = c(\"Kongruent\" = \"skyblue\", \"Inkongruent\" = \"darkblue\"))\n\nlibrary(patchwork)\n\np1+p2\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-84-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Frage: wie sieht die Veränderung der Reaktionszeiten über das Experiment\n# hinweg aus?\n\n# Beginnen Sie hier mit Ihrem Code:\n\n#numerischer Vektor erstellen\nd$rt <- as.numeric(as.character(d$rt))\n\n#Gruppieren nach \"id\" und Berechnen des Mittelwerts von \"rt\" pro Versuchsperson\nmean_rt_by_trial <- d %>%\n    group_by(trial) %>%\n    summarise(mean_rt = mean(rt, na.rm = TRUE))\n\n#Ausgabe der durchschnittlichen Reaktionszeit pro Versuchsperson\n# print(mean_rt_by_trial)\n\n#Berechnung des Durchschnitts der durchschnittlichen Reaktionszeiten\nmean_mean_rt <- mean(mean_rt_by_trial$mean_rt)\n\n#Berechnung der Standardabweichung\nmean_sd_rt <- sd(mean_rt_by_trial$mean_rt)\n\n#Plot erstellen\nggplot(mean_rt_by_trial, aes(x = trial, y = mean_rt)) +\n    geom_line(alpha = 0.8, color = \"blue2\") +\n    geom_hline(yintercept = mean_mean_rt, linetype = \"dashed\", color = \"seagreen4\") +\n    geom_errorbar(aes(ymin = mean_rt - mean_sd_rt, ymax = mean_rt + mean_sd_rt), width = 0.2, color = \"grey1\") +\n    labs(x = \"Trial\", y = \"Durchschnittliche Reaktionszeit\", subtitle = \"Wie sieht die Veränderung der Reaktionszeiten über das Experiment hinweg aus?\") +\n    ggtitle(\"Reaktionszeiten im Verlauf des Experiments\") +\n    theme_classic() +\n    theme(text = element_text(family = \"Times\"))\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-87-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n# sum(is.finite(d$rt))\np <- ggplot(d, aes(x = factor(congruent),\n                   y = rt,\n                   fill = factor(congruent))) +\n  geom_violin(trim = FALSE) +\n  stat_summary(fun = mean,\n               geom = \"crossbar\",\n               color = \"black\",\n               size = 0.5,\n               fatten = 2) +\n  coord_cartesian(ylim = c(0, 2.5)) +\n  labs(title = \"Vergleich der Reaktionszeiten im Stroop-Experiment\",\n       subtitle = \"Gibt es einen Unterschied der Reaktionzeiten bei kongruenten und inkongruenten Farben?\",\n       x = \"Kongruenz (0 = Inkongruent, 1 = Kongruent)\",\n       y = \"Reaktionszeit (s)\") +\n  scale_fill_manual(values = c(\"#CD3333\", \"#0000EE\")) + # Rot und Blau\n  geom_jitter(width = 0.45, alpha = 0.1, size = 0.1) +\n  theme_minimal()\nprint(p)\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](gallery_mi_files/figure-html/unnamed-chunk-90-1.png){width=672}\n:::\n:::\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beginnen Sie hier mit Ihrem Code:\n\n\nlibrary(ggplot2)\n\n\n\nd_neu <- d |>\n    mutate(congruent = factor(congruent, labels = c(\"Inkongruent\", \"Kongruent\"))) %>%\n    group_by(id, congruent) |>\n    summarise(\n        N = n(),\n        ncorrect = sum(corr),\n        accuracy = mean(corr),\n        median_rt = median(rt)\n    )\n\n\n# glimpse(d_neu)\n\n\np = d_neu |>\n    ggplot(mapping = aes(x = congruent, y = median_rt, fill = factor(congruent))) +\n    geom_jitter(width = 0.1, alpha = 0.5) +\n    geom_boxplot(outlier.shape = NA) +\n    scale_y_continuous(limits = c(0, 1.5)) +\n    scale_fill_manual(values = c(\"Kongruent\" = \"red\", \"Inkongruent\" = \"blue\")) +\n    scale_color_manual(values = c(\"Kongruent\" = \"red\", \"Inkongruent\" = \"blue\")) +\n    labs(\n        title = \"Kongruenz im Stroop-Task\",\n        subtitle = \"Wie unterscheiden sich die Mittelwerte der Reaktionszeiten zwischen den Bedingungen?\",\n        x = \"Kongruenz\",\n        y = \"Reaktionszeit\") +\n    theme_minimal()\n\n\np\n```\n:::\n:::\n\n\n\n",
    "supporting": [
      "gallery_mi_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}