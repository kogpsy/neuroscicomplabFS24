{
  "hash": "c7a3f2b3130e50e04739dae0bda1503d",
  "result": {
    "markdown": "---\ntitle: \"Einführung\"\ndescription: \"Datengenerierende Prozesse\"\nauthor:\n  - name: Gerda Wyssen\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0001-7427-3149\n  - name: Daniel Fitze\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0003-0158-7459  \nlicense: CC BY\ncitation: true\nbibliography: ../../bibliography_nsci24.bib\nformat:\n    html:\n        toc: true\n        code-link: true\n---\n\n\n\n\nIn der Forschung und Diagnostik interessieren uns oft Eigenschaften eines Prozesses oder einer Person, welche wir nicht direkt messen können. Deshalb werden Testverfahren und Experimente angewendet um diese latenten Variablen messbar zu machen. Mit statistischen Verfahren wird dann versucht aus den gemessenen Daten Informationen über die nicht direkt messbare Eigenschaft zu erhalten. \n\n<!-- Uns kann beispielsweise die Aufmerksamkeitsleistung interessieren, welche wir mit einem Testverfahren für Aufmerksamkeit zu messen versuchen. Eine Neurowissenschaftlerin, welche sich für den Prozess von Aufmerksamkeit interessiert, würde versuchen die Aufmerksamkeitsleistung von vielen Leuten unter verschiedenen Bedingungen zu messen um zu untersuchen, durch was Aufmerksamkeit beeinflusst wird.  Ein klinischer Neuropsychologe hingegen hätte vielleicht das Ziel festzustellen, ob die Aufmerksamkeitsleistung einer Person von der Norm abweicht, beispielsweise weil sie durch einen Unfall eine Kopfverletzung erlitten hat. Beide messen Daten und beide ziehen aus den gemessenen Daten Rückschlüsse auf eine unterliegende Eigenschaft eines Prozesses oder einer Person.  -->\n\n# Herausforderungen in der Analyse von neurowissenschaftlichen Daten\n\nNeurowissenschaftliche Datensätze bringen oft folgende Herausforderungen in der Datenanalyse mit sich:\n\n- Kleine Stichprobengrössen (z.B. aufgrund teurer Datenerhebung oder Patientengruppen die schwieriger zu rekrutieren sind).\n\n- Viel Heterogenität / Rauschen (z.B. weil der zu untersuchende Prozess schwierig zu isolieren ist, weil Personen sich sehr unterschiedlich verhalten)\n\n- Teure Datenerhebung und damit hoher Druck Resultate zu generieren sowie oft keine Möglichkeit das Experiment zu wiederholen  (wichtig daher die gute Planung der Analyse sowie Vermeidung von inkonklusive Resultaten)\n\n<aside>[Hier](https://www.nature.com/articles/nrn3475) finden Sie einen Artikel über die Problematik von kleinen Stichprobengrössen in Neuroscience</aside>\n\nZiel ist es also, trotz diesen Hindernissen, möglichst viel Information aus den Daten zu gewinnen. Hieraus entsteht die Notwendigkeit zu unterscheiden zwischen _absence of evidence_ und _evidence of absence_. Dafür eignen sich die konventionellen statistischen Verfahren oft weniger. Bayesianische Statistik (z.B. bei begrenzten Datensätzen) sowie Äquivalenztests (zum Testen von Nullunterschieden) sind hier vielversprechende Ansätze.\n\nWir werden uns in den folgenden Veranstaltungen deshalb damit auseinandersetzen\n\n- welche Annahmen hinter statistischen Verfahren stecken\n\n- welche Fragen mit Bayesianischer Statistik beantwortet werden können\n\n- wie Nullunterschiede statistisch getestet werden können\n\n\n## Vorbereitung\n\n:::callout-caution\n## Hands-on: Reaktivierung Statistikwissen\n\n1. Besprechen Sie in kleinen Gruppen folgende Fragen:\n\n- Was ist eine Null-, was eine Alternativhypothese?\n\n- Was bedeutet die Distanz zwischen den beiden Mittelwerten?\n\n- Was ist statistische Power?\n\n- Welche Rolle spielt die Stichprobengröße\n\n- Was ist ein p-Wert?\n\n- Was sind Typ I und Typ II Fehler?\n\n- Welche Fragen können Sie mit einem Nullhypothesen-Test beantworten?\n\n\n2. Können Sie die Begrifflichkeiten in dieser Grafik einordnen?\n\n![](img/reactivationstatistics.png)\n\n3. Überlegen Sie sich, was Null- und Alternativhypothese in unseren Experimenten sein können.\n\n_[10 Minuten]_\n\n:::\n\n<aside>Sie können zur Beantwortung dieser Fragen z.B. die [Interaktive Visualisierung \"Understanding Statistical Power and Significance Testing\"](https://rpsychologist.com/d3/nhst/) nutzen.</aside>\n\n::: {.callout-note appearance=\"simple\"}\n\n## Projekt und Daten herunterladen\n\n[Hier](../../downloadable_files/dataset_stroop_clean.csv) finden Sie die Daten zum herunterladen.\n\nLesen Sie anschliessend die Daten ein:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Daten einlesen\nlibrary(tidyverse)\nd_stroop <- read_csv(\"data/dataset_stroop_clean.csv\") |>\n    mutate(across(where(is.character), as.factor)) |>\n    mutate(congruent = as.factor(congruent)) |>\n    filter(rt < 4 & rt > 0.1) |>\n    filter(corr == 1) |>\n    na.omit()\n```\n:::\n\n:::\n\n# Datengenerierende Prozesse, Simulation und Analyse\n\nNach dem Data Cleaning und Preprocessing geht es darum, welche Informationen die Daten über den zu untersuchenden Prozess beinhalten. Anhand der Daten sollen also Rückschlüsse auf den Prozess der zu diesen Daten geführt hat gezogen werden. \n\nBei jeder Datenanalyse müssen zahlreiche Annahmen getroffen werden. Um diese explizit zu machen und auch die Datenanalyse zu planen, hilft oft eine grafische Darstellung. DAGs sind eine Variante davon.\n\n## Directed Acyclic Graphs (DAGs)\n\nEin DAG (_directed acyclic graph_) eignet sich für die Darstellung komplexer Zusammenhänge in Daten und Prozessen. Mit einem DAG kann veranschaulicht werden, welche Variablen einander beeinflussen. Die Kreise (_nodes_) werden für einzelne Elemente verwendet und die Pfeile (_arrows_ oder _edges_) beschreiben die Beziehung zwischen den Elementen. Die Darstellung beschreibt einen Prozess also mit gerichteten (_directed_) und nicht zyklischen (_acyclic_) Beziehungen.\n\n_Wir können beispielsweise annehmen, dass die Farbe-Wort-Kongruenz im Stroop Task beeinflusst, wie schnell die Aufgabe gelöst werden kann._\n\n### Erstellen eines DAGs\n\n#### 1. Beobachtete Variable bestimmen\n\nDie beobachtete Variable nennen wir hier $y$. Der Kreis ist grau eingefärbt, weil die Werte in dieser Variable gemessen wurde, also bekannt ist.\n\n_In unserem Beispiel haben wir die Reaktionszeit gemessen. Im Datensatz enthält die Variable `rt` die Information, wie schnell eine Person in jedem Trial geantwortethat._\n\n#### 2. Verteilung bestimmen\n\nEs muss festgelegt werden, welche Verteilung die Daten $y$ am besten beschreibt. Eine Verteilung ist immer __nur eine Annäherung__, die gemessenen Daten entsprechen dieser Annahme eigentlich nie perfekt. Es geht darum eine Verteilung zu finden die _gut genug_ zu den Daten passt. Jede Verteilung hat Parameter, die geschätzt werden können. Es gibt Verteilungen, welche durch einen Parameter definiert werden, andere brauchen mehrere Parameter.\n\nEine sehr häufig verwendete Verteilung in statistischen Analysen ist die Normalverteilung. Die Annahme einer Normalverteilung ermöglicht es uns, mit nur 2 Parametern die Daten in der Variable  zu beschreiben (natürlich ist das nur eine Annäherung aber meistens eine genügend gute): Dem Mittelwert ($\\mu$) und der Standardabweichung ($\\sigma$).\n\n<aside>Hier im [Distribution Zoo](https://ben18785.shinyapps.io/distribution-zoo/) werden Verteilungen, zugrundeliegende Daten sowie Code und Formeln zusammengefasst.</aside>\n\n![](img/dag_normal.png)\n\n_Um die Verteilung unserer Datenpunkte zu bestimmen bzw. zu überprüfen können die Daten in `R` geplottet werden, z.B. mit `geom_histogram`. Das Argument `binwidth` bestimmt, wie breit ein Balken wird (hier 50 ms)._\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_stroop |>\n    ggplot(aes(x = rt)) +\n    geom_histogram(colour=\"black\", fill = \"white\", \n                   binwidth = 0.05, \n                   alpha = 0.5) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](data_analysis_intro_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n_Diese Verteilung könnte beispielsweise mit einer Normalverteilung beschrieben werden. Der Mittelwert und die Standardabweichung können wir uns ausrechnen:_\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# clean dataset first\nmu = mean(d_stroop$rt)\nmu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7585427\n```\n:::\n\n```{.r .cell-code}\nsigma = sd(d_stroop$rt)\nsigma\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3668467\n```\n:::\n:::\n\nUm zu schauen, wie gut diese Normalverteilung mit den Parametern $\\mu$ = 0.759 und $\\sigma$ = 0.367 unsere Daten beschreibt können wir die Daten und simulierte Daten mit der angenommenenen Verteilung übereinander plotten:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_stroop |>\n    ggplot(aes(x = rt)) +\n    geom_histogram(colour=\"black\", fill = \"white\", \n                   binwidth = 0.05, \n                   alpha = 0.5) +\n    geom_histogram(aes(x = rnorm(1:length(rt), mu, sigma)),\n                   binwidth = 0.05,\n                   alpha = 0.2) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](data_analysis_intro_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nWir können auch `density`-Plots dafür nutzen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_stroop |>\n    ggplot(aes(x = rt)) +\n    geom_density(colour=\"black\") +\n    geom_density(aes(x = rnorm(1:length(rt), mu, sigma)),\n                 colour=\"darkgrey\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](data_analysis_intro_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n:::callout-caution\n\n## Hands-on: Verteilungen\n\n- Welche Daten stammen aus unseren Daten, welche entsprechen der Normalverteilung $N(0.759, 0.367)$ ?\n\n- Wie gut passt die Annahme der Normalverteilung für unsere Reaktionszeitdaten?\n\n- Finden Sie auf [Distribution Zoo](https://ben18785.shinyapps.io/distribution-zoo/) eine passendere Verteilung?\n\n- Prüfen Sie Ihre Verteilung indem Sie unten an den obigen Plot diese Verteilung mit gewählten Parametern folgenden Code einfügen.\n\n    - Wählen Sie dazu eine Verteilung und passende Parameter auf Distribution Zoo aus.\n    \n    - Schauen Sie unter dem Reiter `Code` mit welcher Funktion die Daten in `R` generiert werden können. Wählen Sie `Language: R` und `Property: random sample of size n` aus. \n    \n    - Kopieren Sie die Funktion und ersetzen Sie `rnorm(1:length(rt), mu, sigma)` in unserem R-Code für das Histogram oder den Density-Plot mit Ihrer neuen Funktion. Das `n` müssen Sie wieder `1:length(rt)` nennen.\n:::\n\nBei Reaktionszeiten ist die Verteilung gar nicht so einfach anzupassen: [Hier](https://lindeloev.shinyapps.io/shiny-rt) finden Sie \"besser\" geeignete Verteilungen sowie die Möglichkeit für einen vorgegebenen Datensatz oder Ihre eigenen Daten Parameterwerte anzupassen.\n\n#### 3. Weitere Einflussfaktoren\n\nIn einem DAG können auch weitere Informationen, zum Beispiel Bedingungen sowie Messwiederholungen, hinzugefügt werden. \n\n_$\\mu$ kann sich zum Beispiel in Abhängigkeit der Bedingung (`condition`) verändern, also je nachdem ob die angezeigte Farbe kongruent war oder nicht._\n\nWenn wir nun den Einfluss der Bedingung untersuchen möchten, könnten wir uns fragen, wie stark diese eine Veränderung im Wert $\\mu$ bewirkt. Genau dies tun wir z.B. bei Mittelwertsvergleichen wie z.B. bei t-Tests.\n\n:::callout-caution\n\n## Hands-on: DAG zeichnen\n\nWie würde ein DAG für die Accuracy (Korrektheit) der Stroop-Daten aussehen?\n\n:::\n\n## Daten simulieren\n\nSich Gedanken zum datengenerierenden Prozess zu machen (wie beispielsweise mit einem aufgezeichneten Modell) hilft nicht nur in der Planung der Datenanalyse, sondern ermöglicht u.a. auch das Simulieren von Daten.\n\n\n__Mögliche Schritte in der Datensimulation__\n![](img/datasimulations.png)\n\n<aside>[Shiny-App für Datensimulation](\nhttps://shiny.psy.gla.ac.uk/debruine/fauxapp/)</aside>\n\nDatensimulation ist nützlich für:\n\n- Die Vorbereitung von Präregistrationen und Registered Reports\n\n- Testen/Debugging von Analysekripten (weil die _ground truth_ bekannt ist)\n\n- Power für komplexe Modelle schätzen\n\n- Erstellen von reproduzierbaren Beispielsdatensätzen (für Demos, Lehre, oder wenn echte Datensätze nicht veröffentlicht werden können)\n\n- Prior distribution checks in der Bayesianischen Statistik\n\n- Verstehen von Modellen und Statistik\n\n<aside>[Weitere Infos](https://debruine.github.io/talks/EMPSEB-fake-it-2023) zu Datensimulation</aside>\n\n",
    "supporting": [
      "data_analysis_intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}