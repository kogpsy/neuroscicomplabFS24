[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Neurowissenschaft Computerlab",
    "section": "",
    "text": "Fr√ºhjahrssemester 2024"
  },
  {
    "objectID": "pages/admin/termine.html",
    "href": "pages/admin/termine.html",
    "title": "Termin√ºbersicht",
    "section": "",
    "text": "Termine und Leistungsnachweise\nAn den 13 Sitzungen werden wir folgende Themen behandeln (kleine √Ñnderungen vorbehalten):\n\n1 Einf√ºhrung\nSitzung 1 (19./21. Februrar 2024)\n\nEinf√ºhrung in Programmiersprachen und -umgebungen im neurowissenschaftlichen Kontext (Python, R, Matlab, Julia, Bash) und ihre Programmierumgebungen (z.B. RStudio, PsychoPy, usw.)\n\n\n\n\nInstallieren der f√ºr den Kurs ben√∂tigten Software\nDatacamp-Kurse anschauen und belegen.\nQuiz 1 ausf√ºllen (siehe Ilias)\n\n\n\n2 Experimente programmieren\nSitzung 2 (26./28. Februrar 2024)\nSitzung 3 (4./6. M√§rz 2024)\n\n√úbersicht Leistungsnachweise,\nExperimente in den Neurowissenschaften: Elemente und Herausforderungen\nErstellen von zwei computerbasierten Experimenten mit Python und PsychoPy\n√úbung 1: Datenerhebung\n\n\n\n3 Data Wrangling & Daten visualisieren\nSitzung 4 (11./13. M√§rz 2024)\nSitzung 5 (18./20. M√§rz 2024)\nSitzung 6 (25./27. M√§rz 2024)\nSitzung 7 (8./.10. April 2024)\n\nArbeiten in R mit Projekten und Rmarkdown\nDaten mit R einlesen, bearbeiten und visualisieren\nOpen Science, Reproduzierbarkeit und Datenmanagement: wie neurowissenschaftliche Daten und Datenverarbeitungspipelines sinnvoll gestaltet und geteilt werden k√∂nnen\n√úbung 2: Datenverarbeiten und visualisieren\n\nFerien: 1./3. April: Vorlesungsfreie Zeit\n\n\n4 Analysemethoden\nSitzung 8 (15./17. April 2024)\nSitzung 9 (22./24. April 2024)\nSitzung 10 (29. April und 1. Mai 2024)\n\nBesonderheiten neurowissenschaftlicher Daten und Analysen\nfrequentistische und bayesianische Analyseverfahren\n√úbung 3: Datensatz analysieren\n\n\n\n5 Modelle\nSitzung 11 (6../8. Mai 2024)\nSitzung 12 (13./15. Mai 2024)\nTermine von Mo 20. Mai 2024 und Mi 22. Mai 2024 fallen aus (Pfingstmontag)\nSitzung 13 (27./29. Mai 2014)\n\nSignalentdeckungstheorie (signal detection theory, SDT)\nDrift Diffusion Models (DDM)\n√úbung 4: Datensatz analysieren\nQuiz 2: Abschlussquiz\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "pages/admin/wichtiges.html",
    "href": "pages/admin/wichtiges.html",
    "title": "Wichtiges zum Kurs",
    "section": "",
    "text": "In diesem anwendungsorientierten Kurs erwerben Sie Wissen √ºber Methoden der Datenerhebung, -verarbeitung und -analyse im Feld der Neurowissenschaften. Wir behandeln im Rahmen der Veranstaltung folgende Inhalte:\n\nWichtige Programmiersprachen und - umgebungen in den Neurowissenschaften\nProgrammieren von computerbasierten Experimenten (mit PsychoPy)\nProgrammieren von Datenverarbeitungspipelines: Datenvorverarbeitung und Visualisierung (‚Äûgood practices‚Äù, Data Cleaning, Reproduzierbarkeit)\nAnalysemethoden und Modelle zugeschnitten auf unterschiedliche neurowissenschaftliche Datens√§tze und Fragestellungen mit frequentistischen wie auch bayesianischen Verfahren (u.a. Reaktionszeiten, Signal detection theory, Drift diffusion models)\nInterpretation und kritische Einordnung von Analyseergebnissen"
  },
  {
    "objectID": "pages/admin/wichtiges.html#ilias",
    "href": "pages/admin/wichtiges.html#ilias",
    "title": "Wichtiges zum Kurs",
    "section": "Ilias",
    "text": "Ilias\nUnter diesen Links finden Sie die Iliasgruppen:\nILIAS (Montag) üëâ 468703-FS2024-0\nILIAS (Mittwoch) üëâ 468703-FS2024-1"
  },
  {
    "objectID": "pages/admin/wichtiges.html#kursvoraussetzungen",
    "href": "pages/admin/wichtiges.html#kursvoraussetzungen",
    "title": "Wichtiges zum Kurs",
    "section": "Kursvoraussetzungen",
    "text": "Kursvoraussetzungen\nWir werden mit der Programmiersprache R und zu einem kleinen Teil mit Python arbeiten. Sie ben√∂tigen in der Veranstaltung deshalb einen eigenen Laptop (Tablets sind nicht geeignet!) mit ca. 20 GB freiem Speicherplatz und mit einer installierten (aktuellen) Version von R und RStudio (Link zum Download von R und RStudio).\nR Kenntnisse (gem√§ss Statistik I-IV in Psychologie) werden vorausgesetzt. Zur Auffrischung dient folgender Link (https://methodenlehre.github.io/einfuehrung-in-R/) oder f√ºr Fortgeschrittene die B√ºcher ‚ÄûAdvanced R‚Äù und ‚ÄûR for Data Scientists‚Äù von Hadley Wickham."
  },
  {
    "objectID": "pages/admin/wichtiges.html#anwesenheit",
    "href": "pages/admin/wichtiges.html#anwesenheit",
    "title": "Wichtiges zum Kurs",
    "section": "Anwesenheit",
    "text": "Anwesenheit\nDie Anwesenheit im Kurs wird vorausgesetzt (2 Abwesenheiten sind ok). Wir w√ºrden den Kurs gerne ohne Anwesenheitskontrollen durchf√ºhren - falls n√∂tig werden wir dies aber einf√ºhren.\nDas Online-Skript erlaubt das Nacharbeiten des wichtigsten Stoffes im Eigenstudium, wir k√∂nnen jedoch nicht f√ºr die Vollst√§ndigkeit garantieren. Hilfestellung beim Programmieren und Verstehen der Inhalte bieten wir w√§hrend der Kurszeiten an, aus zeitlichen Gr√ºnden k√∂nnen wir keine Beantwortung von Fragen zum Kursinhalt per E-Mail anbieten. Bitte stellen Sie Ihre Fragen in der Veranstaltung - auch Ihre Mitstudierenden werden davon profitieren, oft haben mehrere Personen dieselbe Frage."
  },
  {
    "objectID": "pages/admin/wichtiges.html#form-der-leistungsnachweise",
    "href": "pages/admin/wichtiges.html#form-der-leistungsnachweise",
    "title": "Wichtiges zum Kurs",
    "section": "Form der Leistungsnachweise",
    "text": "Form der Leistungsnachweise\nLeistungsnachweise werden in Form von vier √úbungen, zwei Quizzes und einem Glossareintrag erbracht. Hiervon m√ºssen alle abgegeben und als bestanden bewertet werden. Bei Nicht-Bestehen erhalten Sie eine 2. Frist f√ºr die Abgabe oder einen Zusatzauftrag.\nAlle Leistungsnachweise werden in den Veranstaltungen angek√ºndigt. Die schon bekannten Termine (oder die ungef√§hre Planung) f√ºr die Leistungsnachweise finden Sie hier.\n\n√úbungen\nDie √úbungen werden auf der Website aufgeschaltet. Die Ergebnisse der √úbungen m√ºssen in den entsprechenden Ordner auf ILIAS hochgeladen werden. Je nach Umfang der √úbung wird die Zeit bis zur Abgabe unterschiedlich ausfallen. Sie wird jedoch immer mindestens zwei Wochen betragen.\n\n\nQuizzes\nDas erste Quiz wird w√§hrend der ersten Veranstaltung durchgef√ºhrt und dient vor allem dazu zu erheben, welche Kenntnisse schon vorhanden sind. Das zweite Quiz wird gegen Ende des Semesters stattfinden und das Gelernte pr√ºfen.\n\n\nGlossareintrag\nWir erstellen als Kurs gemeinsam einen Glossar zu den wichtigen Begriffen im Themenbereich. Dieser wird auf der Kurswebsite publiziert, und kann als Nachschlagewerk verwendet werden."
  },
  {
    "objectID": "pages/chapters/computerlab.html",
    "href": "pages/chapters/computerlab.html",
    "title": "Computerlab",
    "section": "",
    "text": "In diesem anwendungsbasierten Kurs lernen Sie mit Daten zu arbeiten. Der Computer ist dabei ein absolut notwendiges Werkzeug. Unser Fokus liegt auf der Vermittlung von Anwendungskenntnisse. Die Termine setzen sich deshalb aus Inputs und Hands-on Sessions zusammen.\nAls Einstieg schauen wir uns an, wo der Computer in einem Forschungsprojekt gebraucht wird, wo er die Arbeit erleichtert."
  },
  {
    "objectID": "pages/chapters/computerlab.html#neurocomp-lab",
    "href": "pages/chapters/computerlab.html#neurocomp-lab",
    "title": "Computerlab",
    "section": "",
    "text": "In diesem anwendungsbasierten Kurs lernen Sie mit Daten zu arbeiten. Der Computer ist dabei ein absolut notwendiges Werkzeug. Unser Fokus liegt auf der Vermittlung von Anwendungskenntnisse. Die Termine setzen sich deshalb aus Inputs und Hands-on Sessions zusammen.\nAls Einstieg schauen wir uns an, wo der Computer in einem Forschungsprojekt gebraucht wird, wo er die Arbeit erleichtert."
  },
  {
    "objectID": "pages/chapters/datacamp.html",
    "href": "pages/chapters/datacamp.html",
    "title": "DataCamp",
    "section": "",
    "text": "DataCamp ist eine Online-Lernplattform, welche sich auf Data Science und Datenanalyse konzentriert. Es bietet interaktive Kurse, Tutorials und Projekte in verschiedenen Programmiersprachen wie Python, R und SQL auf unterschiedlichen Niveaus an; sowohl f√ºr Anf√§nger als auch f√ºr Fortgeschrittene gibt es ein breites Angebot.\nIm Rahmen dieser Lehrveranstaltung k√∂nnen alle Teilnehmenden sich unter folgendem Link mit ihrer Uni Bern E-Mail Adresse (*students.unibe.ch) registrieren:\nüëâüèº Einladungslink DataCamp Registration\nWir werden jeweils die empfohlenen Datacamp Kurse verlinken. Sie haben mit dem Link jedoch Zugriff auf alle Kurse bis Ende FS24."
  },
  {
    "objectID": "pages/chapters/datacamp.html#datacamp",
    "href": "pages/chapters/datacamp.html#datacamp",
    "title": "DataCamp",
    "section": "",
    "text": "DataCamp ist eine Online-Lernplattform, welche sich auf Data Science und Datenanalyse konzentriert. Es bietet interaktive Kurse, Tutorials und Projekte in verschiedenen Programmiersprachen wie Python, R und SQL auf unterschiedlichen Niveaus an; sowohl f√ºr Anf√§nger als auch f√ºr Fortgeschrittene gibt es ein breites Angebot.\nIm Rahmen dieser Lehrveranstaltung k√∂nnen alle Teilnehmenden sich unter folgendem Link mit ihrer Uni Bern E-Mail Adresse (*students.unibe.ch) registrieren:\nüëâüèº Einladungslink DataCamp Registration\nWir werden jeweils die empfohlenen Datacamp Kurse verlinken. Sie haben mit dem Link jedoch Zugriff auf alle Kurse bis Ende FS24."
  },
  {
    "objectID": "pages/chapters/programmieren_1.html",
    "href": "pages/chapters/programmieren_1.html",
    "title": "Sprachen & Umgebungen",
    "section": "",
    "text": "Programmiersprachen sind essentielle Werkzeuge f√ºr die Neurowissenschaftliche Forschung. Wir werden uns zuerst einen kurzen √úberblick √ºber h√§ufig verwendete Programmiersprachen verschaffen und kurz deren Verwendungszwecke und Vor- und Nachteile diskutieren.\n\n\n\n\n\nMatlab ist ein Software f√ºr numerische Anwendung, welche in den Ingenieurwissenschaften, Naturwissenschaften und der Mathematik weit verbreitet ist.\n\n\n\nLeistungsstarke Matrix- und Vektoroperationen, gut geeignet f√ºr Matrix-basierte Operationen, die in der Neurowissenschaftlichen Forschung h√§ufig vorkommen.\nUmfangreiche Bibliothek von integrierten Funktionen f√ºr wissenschaftliches Rechnen.\n\n\n\n\n\nTeuer\nWeniger flexibel als Python oder R in Bezug auf Datenarten und Strukturen.\nMatlab is kommerziell und propriet√§r. Dies bedeutet man muss teuere Lizenzen kaufen, und der Source Code der Software ist nicht offen.\n\n\n\n\n\nDatenverarbeitung und -analyse\nVisualisierung\nViele fMRI Forscher arbeiten mit Matlab, da es daf√ºr eine spezielle Toolbox gibt: SPM\nExperimente programmieren, z.B. mit Psychtoolbox\n\n\n\n\nload('data.mat')\nfs = 1000;\nt = (0:numel(data)-1)/fs;\nplot(t, data)\n\n\n\n\n\nPython ist eine allgemeine (general purpose) Programmiersprache, die in vielen verschiedenen Bereichen wie wissenschaftlichem Rechnen, Datenanalyse und maschinellem Lernen weit verbreitet ist.\n\n\n\n\nEine Vielzahl von Bibliotheken und Modulen wie NumPy, SciPy und Pandas, die leistungsstarke Werkzeuge f√ºr wissenschaftliches Rechnen und Datenanalyse bieten.\nDatenanalysewerkzeuge wie Pandas-Dataframes, die Seaborn-Visualisierungsbibliothek, und Jupyter Notebooks.\nOpen-source und kostenlos\n\n\n\n\n\nKann in einigen numerischen Berechnungen langsamer sein als Matlab.\nDa Python eine allgemeine Sprache ist, muss man f√ºr numerische Anwendungen immer verschiedene Packages importieren (z.B.) numpy, wenn man damit rechnen will. Dies f√ºhrt zu weniger gut lesbarem Code.\n\n\n\n\n\nDatenverarbeitung und -analyse,\nVisualisierung\nMachine learning und K√ºnstliche Intelligenz\nExperimente programmieren, z.B. mit PsychoPy\n\n\n\n\nimport pandas as pd\nimport seaborn as sns\ndata = pd.read_csv('data.csv')\nsns.lineplot(data=data, x='time', y='voltage')\n\n\n\n\n\nR ist eine Programmiersprache f√ºr statistisches Rechnen und Grafiken.\n\n\n\n\nEntwickelt von Statistikern f√ºr statistisches Rechnen und Grafiken.\nEine gro√üe Bibliothek von statistischen Werkzeugen und Paketen, einschliesslich Visualisierungspackages (grammar of graphics).\nOpen-source und kostenlos\ntidyverse Packages f√ºr Data Wrangling (sehr elegante Syntax, um mit Daten zu arbeiten).\n\n\n\n\n\nSteilere Lernkurve als Python.\nKann in einigen numerischen Berechnungen langsamer sein als Matlab oder Python.\nEntwickelt von Statistiker (nicht von Software Designers). R gilt als sehr idiosynkratisch.\n\n\n\n\n\nStatistische Analyse\nDatenvisualisierung. R hat eine sehr gute Bibliothek f√ºr Grafiken, die ggplot2 Bibliothek. Diese Bibliothek verwendet die sogenannte grammar of graphics (GoG) - eine Methode, um Daten in Grafiken zu visualisieren. Die GoG ist eine sehr elegante und effiziente Methode, um Daten zu visualisieren.\n\n\n\n\nlibrary(tidyverse)\ndata &lt;- read.csv('data.csv')\nggplot(data, aes(x=time, y=voltage)) + geom_line()\n\n\n\n\n\nJulia ist eine allgemeine (general purpose) Programmierspache, die vor allem f√ºr numerisches und wissenschaftliches Rechnen entwickelt wurde.\n\n\n\n\nEntwickelt von Mathematikern f√ºr scientific computing\nLeistungsstark und schnell\nOpen-source und kostenlos\n\n\n\n\n\nwenig verbreitet\n\n\n\n\n\nDatenverarbeitung und -analyse,\nSignalverarbeitung\nVisualisierung\nMachine learning und K√ºnstliche Intelligenz\n\n\n\n\nusing CSV, DataFrames, AlgebraOfGraphics, CairoMakie\ndat = CSV.read('data.csv', DataFrame)\ndata(dat) * visual(Lines) * mapping(:time, :voltage) |&gt; draw()\n\n\n\n\n\nBash ist eine Mensch-Maschine-Schnittstelle und dient als Grundlage unixbasierter Betriebssysteme (Linux, macOS). Mit Bash-Skripts k√∂nnen repetitive Aufgaben automatisiert werden, was Fehler vermeidet und komplexe Aufgaben vereinfacht.\n\n\n\n\nEinfaches Konzept und Verwendung\nBereits instaliert (nicht auf Windows)\n\n\n\n\n\nSteile Lernkurve\nUmstellung notwendig von GUI\n\n\n\n\n\nAutomatisierung\neinfache bis komplexe Applikationen\nInteraktion mit dem High Performance Computing Cluster der Universit√§t Bern\n\n\n\n\n#!/bin/bash\necho \"Enter Your Name\"\nread name\nprintf \"\\n Welcome $name \\n\\n\"\n\n\n\nDiese Sprachen sind leistungsstarke Werkzeuge f√ºr die neurowissenschaftliche Forschung. Die Wahl der Sprache h√§ngt unter anderem von der spezifischen Aufgabe ab. Weitere Faktoren ist Tradition: bestimmte Gruppen bevorzugen eher eine Sprache als andere. So ist Matlab unter Ingenieuren weit verbreiten und R unter Statistikern. Python ist im Bereich K√ºnstliche Intelligenz und Machine Learning die beliebteste Sprache. Eine neuere Sprache ist Julia - diese vereint die Vorteile aller oben genannten Sprachen (ohne viele deren Nachteile), ist aber weniger weit verbreitet.\nUm mehr zu erfahren, erkunden Sie die umfangreichen Online-Ressourcen und Dokumentationen f√ºr jede Sprache."
  },
  {
    "objectID": "pages/chapters/programmieren_1.html#programmiersprachen",
    "href": "pages/chapters/programmieren_1.html#programmiersprachen",
    "title": "Sprachen & Umgebungen",
    "section": "",
    "text": "Programmiersprachen sind essentielle Werkzeuge f√ºr die Neurowissenschaftliche Forschung. Wir werden uns zuerst einen kurzen √úberblick √ºber h√§ufig verwendete Programmiersprachen verschaffen und kurz deren Verwendungszwecke und Vor- und Nachteile diskutieren.\n\n\n\n\n\nMatlab ist ein Software f√ºr numerische Anwendung, welche in den Ingenieurwissenschaften, Naturwissenschaften und der Mathematik weit verbreitet ist.\n\n\n\nLeistungsstarke Matrix- und Vektoroperationen, gut geeignet f√ºr Matrix-basierte Operationen, die in der Neurowissenschaftlichen Forschung h√§ufig vorkommen.\nUmfangreiche Bibliothek von integrierten Funktionen f√ºr wissenschaftliches Rechnen.\n\n\n\n\n\nTeuer\nWeniger flexibel als Python oder R in Bezug auf Datenarten und Strukturen.\nMatlab is kommerziell und propriet√§r. Dies bedeutet man muss teuere Lizenzen kaufen, und der Source Code der Software ist nicht offen.\n\n\n\n\n\nDatenverarbeitung und -analyse\nVisualisierung\nViele fMRI Forscher arbeiten mit Matlab, da es daf√ºr eine spezielle Toolbox gibt: SPM\nExperimente programmieren, z.B. mit Psychtoolbox\n\n\n\n\nload('data.mat')\nfs = 1000;\nt = (0:numel(data)-1)/fs;\nplot(t, data)\n\n\n\n\n\nPython ist eine allgemeine (general purpose) Programmiersprache, die in vielen verschiedenen Bereichen wie wissenschaftlichem Rechnen, Datenanalyse und maschinellem Lernen weit verbreitet ist.\n\n\n\n\nEine Vielzahl von Bibliotheken und Modulen wie NumPy, SciPy und Pandas, die leistungsstarke Werkzeuge f√ºr wissenschaftliches Rechnen und Datenanalyse bieten.\nDatenanalysewerkzeuge wie Pandas-Dataframes, die Seaborn-Visualisierungsbibliothek, und Jupyter Notebooks.\nOpen-source und kostenlos\n\n\n\n\n\nKann in einigen numerischen Berechnungen langsamer sein als Matlab.\nDa Python eine allgemeine Sprache ist, muss man f√ºr numerische Anwendungen immer verschiedene Packages importieren (z.B.) numpy, wenn man damit rechnen will. Dies f√ºhrt zu weniger gut lesbarem Code.\n\n\n\n\n\nDatenverarbeitung und -analyse,\nVisualisierung\nMachine learning und K√ºnstliche Intelligenz\nExperimente programmieren, z.B. mit PsychoPy\n\n\n\n\nimport pandas as pd\nimport seaborn as sns\ndata = pd.read_csv('data.csv')\nsns.lineplot(data=data, x='time', y='voltage')\n\n\n\n\n\nR ist eine Programmiersprache f√ºr statistisches Rechnen und Grafiken.\n\n\n\n\nEntwickelt von Statistikern f√ºr statistisches Rechnen und Grafiken.\nEine gro√üe Bibliothek von statistischen Werkzeugen und Paketen, einschliesslich Visualisierungspackages (grammar of graphics).\nOpen-source und kostenlos\ntidyverse Packages f√ºr Data Wrangling (sehr elegante Syntax, um mit Daten zu arbeiten).\n\n\n\n\n\nSteilere Lernkurve als Python.\nKann in einigen numerischen Berechnungen langsamer sein als Matlab oder Python.\nEntwickelt von Statistiker (nicht von Software Designers). R gilt als sehr idiosynkratisch.\n\n\n\n\n\nStatistische Analyse\nDatenvisualisierung. R hat eine sehr gute Bibliothek f√ºr Grafiken, die ggplot2 Bibliothek. Diese Bibliothek verwendet die sogenannte grammar of graphics (GoG) - eine Methode, um Daten in Grafiken zu visualisieren. Die GoG ist eine sehr elegante und effiziente Methode, um Daten zu visualisieren.\n\n\n\n\nlibrary(tidyverse)\ndata &lt;- read.csv('data.csv')\nggplot(data, aes(x=time, y=voltage)) + geom_line()\n\n\n\n\n\nJulia ist eine allgemeine (general purpose) Programmierspache, die vor allem f√ºr numerisches und wissenschaftliches Rechnen entwickelt wurde.\n\n\n\n\nEntwickelt von Mathematikern f√ºr scientific computing\nLeistungsstark und schnell\nOpen-source und kostenlos\n\n\n\n\n\nwenig verbreitet\n\n\n\n\n\nDatenverarbeitung und -analyse,\nSignalverarbeitung\nVisualisierung\nMachine learning und K√ºnstliche Intelligenz\n\n\n\n\nusing CSV, DataFrames, AlgebraOfGraphics, CairoMakie\ndat = CSV.read('data.csv', DataFrame)\ndata(dat) * visual(Lines) * mapping(:time, :voltage) |&gt; draw()\n\n\n\n\n\nBash ist eine Mensch-Maschine-Schnittstelle und dient als Grundlage unixbasierter Betriebssysteme (Linux, macOS). Mit Bash-Skripts k√∂nnen repetitive Aufgaben automatisiert werden, was Fehler vermeidet und komplexe Aufgaben vereinfacht.\n\n\n\n\nEinfaches Konzept und Verwendung\nBereits instaliert (nicht auf Windows)\n\n\n\n\n\nSteile Lernkurve\nUmstellung notwendig von GUI\n\n\n\n\n\nAutomatisierung\neinfache bis komplexe Applikationen\nInteraktion mit dem High Performance Computing Cluster der Universit√§t Bern\n\n\n\n\n#!/bin/bash\necho \"Enter Your Name\"\nread name\nprintf \"\\n Welcome $name \\n\\n\"\n\n\n\nDiese Sprachen sind leistungsstarke Werkzeuge f√ºr die neurowissenschaftliche Forschung. Die Wahl der Sprache h√§ngt unter anderem von der spezifischen Aufgabe ab. Weitere Faktoren ist Tradition: bestimmte Gruppen bevorzugen eher eine Sprache als andere. So ist Matlab unter Ingenieuren weit verbreiten und R unter Statistikern. Python ist im Bereich K√ºnstliche Intelligenz und Machine Learning die beliebteste Sprache. Eine neuere Sprache ist Julia - diese vereint die Vorteile aller oben genannten Sprachen (ohne viele deren Nachteile), ist aber weniger weit verbreitet.\nUm mehr zu erfahren, erkunden Sie die umfangreichen Online-Ressourcen und Dokumentationen f√ºr jede Sprache."
  },
  {
    "objectID": "pages/chapters/programmieren_1.html#programmierumgebungen",
    "href": "pages/chapters/programmieren_1.html#programmierumgebungen",
    "title": "Sprachen & Umgebungen",
    "section": "Programmierumgebungen",
    "text": "Programmierumgebungen\nEine IDE kombiniert h√§ufig verwendete Entwicklertools in einer grafischen Benutzeroberfl√§che. Typischerweise handelt es sich dabei um Funktionen wie Softwarebearbeitung, Erstellung und Testen von Code.\nIn diesem Kurs werden wir RStudio verwenden."
  },
  {
    "objectID": "pages/chapters/programmieren_2.html",
    "href": "pages/chapters/programmieren_2.html",
    "title": "Automatisieren",
    "section": "",
    "text": "Lernziele\n\n\n\n\n\nIn der heutigen Sitzung lernen wir:\n\nConditionals und Control Flow\nFunktionen erstellen\nLoops anwenden\n\nF√ºhren Sie die folgenden Code Beispiele auf Ihrem Computer aus. Wenn Sie R und RStudio noch nicht installiert haben, verwenden Sie diese online R Konsole.\nWir lernen nun zwei Programmierkonzepte kennen, die uns dabei helfen, Tasks zu automatisieren. Wir werden hier nicht in die Tiefe gehen; es geht uns vielmehr darum, Ihnen einen √úberblick zu geben, was Sie mit diesen Konzepten machen k√∂nnen. Falls Sie tiefer in die Materie einsteigen m√∂chten, gibt es entsprechende Kurse auf Datacamp."
  },
  {
    "objectID": "pages/chapters/programmieren_2.html#alternativen-zu-for-loops",
    "href": "pages/chapters/programmieren_2.html#alternativen-zu-for-loops",
    "title": "Automatisieren",
    "section": "Alternativen zu for-Loops",
    "text": "Alternativen zu for-Loops\nEs gibt in R mehrere M√∂glichkeiten, um √ºber Vektoren oder Listen zu iterieren, ohne dabei explizite for-Loops zu schreiben. Dies hat den Vorteil, dass der Code k√ºrzer und √ºbersichtlicher wird.\n\nlapply und sapply\n\nlapply und sapply sind zwei Funktionen, welche √ºber Listen iterieren. lapply und sapply sind sehr √§hnlich. lapply gibt eine Liste zur√ºck, w√§hrend sapply versucht den output zu vereinfachen (Vektor, Matrix).\nAls Beispiel wollen wir jedes Element eines Vektors verdoppeln (dies kann in R auch einfacher gemacht werden, aber dies ist nur ein √úbungsbeispiel).\n\nnumbers &lt;- c(1, 2, 3, 4, 5)\n\nMit for k√∂nnen wir dies wie folgt tun.\n\nfor (number in numbers) {\n    print(number * 2)\n}\n\n[1] 2\n[1] 4\n[1] 6\n[1] 8\n[1] 10\n\n\nMit lapply und sapply haben wir zwei M√∂glichkeiten. Wir k√∂nnen entweder eine anonyme Funktion definieren, oder wir k√∂nnen eine Funktion zuerst definieren, und dann verwenden.\n\\(x) x * 2 definiert eine sogenannte anonyme Funktion. Diese Funktion nimmt ein Argument x und multipliziert es mit 2, erh√§lt aber keinen eigenen Namen. Folglich k√∂nnen wir diese Funktion nicht wiederverwenden.\n\nlapply(numbers, \\(x) x * 2)\n\n[[1]]\n[1] 2\n\n[[2]]\n[1] 4\n\n[[3]]\n[1] 6\n\n[[4]]\n[1] 8\n\n[[5]]\n[1] 10\n\n\nMit einer Funktion, die wir zuerst definieren, sieht unser Beispiel so aus.\n\ndouble &lt;- function(x) {\n    x * 2\n}\n\n\nlapply(numbers, double)\n\n[[1]]\n[1] 2\n\n[[2]]\n[1] 4\n\n[[3]]\n[1] 6\n\n[[4]]\n[1] 8\n\n[[5]]\n[1] 10\n\n\n\nsapply(numbers, double)\n\n[1]  2  4  6  8 10\n\n\nmap\nEine weitere M√∂glichkeit, √ºber Listen zu iterieren, ist die Funktion map. map ist eine Funktion aus dem Paket purrr (wird automatisch geladen, wenn tidyverse geladen wird). map gibt immer eine Liste zur√ºck.\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.4.4     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nnumbers |&gt; map(double)\n\n[[1]]\n[1] 2\n\n[[2]]\n[1] 4\n\n[[3]]\n[1] 6\n\n[[4]]\n[1] 8\n\n[[5]]\n[1] 10\n\n\nWenn wir als Output einen Vektor haben wollen, m√ºssen wir die Funktion unlist() verwenden.\n\nnumbers |&gt; map(double) |&gt; unlist()\n\n[1]  2  4  6  8 10"
  },
  {
    "objectID": "pages/chapters/quiz_one.html",
    "href": "pages/chapters/quiz_one.html",
    "title": "Quiz 1",
    "section": "",
    "text": "Sie finden das erste Quiz in Ihrer Iliasgruppe:\nILIAS (Montag) üëâ 468703-FS2024-0\nILIAS (Mittwoch) üëâ 468703-FS2024-1\nSie haben in der Veranstaltung Zeit das Quiz auszuf√ºllen. Falls Sie nicht an der Veranstaltung teilnehmen, k√∂nnen Sie das Quiz bis zum 28. Februar 2024 um 23:55 ausf√ºllen."
  },
  {
    "objectID": "pages/chapters/quiz_one.html#quiz-1",
    "href": "pages/chapters/quiz_one.html#quiz-1",
    "title": "Quiz 1",
    "section": "",
    "text": "Sie finden das erste Quiz in Ihrer Iliasgruppe:\nILIAS (Montag) üëâ 468703-FS2024-0\nILIAS (Mittwoch) üëâ 468703-FS2024-1\nSie haben in der Veranstaltung Zeit das Quiz auszuf√ºllen. Falls Sie nicht an der Veranstaltung teilnehmen, k√∂nnen Sie das Quiz bis zum 28. Februar 2024 um 23:55 ausf√ºllen."
  },
  {
    "objectID": "pages/chapters/setup.html",
    "href": "pages/chapters/setup.html",
    "title": "Setup",
    "section": "",
    "text": "Wir haben uns entschieden, in dieser Veranstaltung Python zu verwenden, um ein Experiment zu erstellen, und R f√ºr die Analyse der Daten. Matlab wird nicht verwendet; einerseits da es kommerziell ist, andererseits weil es aus unserer Sicht nicht die beste Wahl f√ºr die Analyse von Verhaltensdaten ist. Ausserdem ist es schon schwierig genug, eine Programmiersprache zu lernen, ohne gleichzeitig noch zwei weitere zu lernen."
  },
  {
    "objectID": "pages/chapters/setup.html#in-dieser-veranstaltung-verwendete-software",
    "href": "pages/chapters/setup.html#in-dieser-veranstaltung-verwendete-software",
    "title": "Setup",
    "section": "",
    "text": "Wir haben uns entschieden, in dieser Veranstaltung Python zu verwenden, um ein Experiment zu erstellen, und R f√ºr die Analyse der Daten. Matlab wird nicht verwendet; einerseits da es kommerziell ist, andererseits weil es aus unserer Sicht nicht die beste Wahl f√ºr die Analyse von Verhaltensdaten ist. Ausserdem ist es schon schwierig genug, eine Programmiersprache zu lernen, ohne gleichzeitig noch zwei weitere zu lernen."
  },
  {
    "objectID": "pages/chapters/setup.html#python",
    "href": "pages/chapters/setup.html#python",
    "title": "Setup",
    "section": "Python",
    "text": "Python\nWenn Sie Python suf Ihrem Rechner installieren wollen, k√∂nnen Sie entweder den offiziellen Installer https://www.python.org/downloads/ downloaden, oder die Anaconda Distribution https://www.anaconda.com/products/distribution verwenden. Die Anaconda Distribution ist eine Python-Distribution, die viele n√ºtzliche Pakete enth√§lt, die f√ºr wissenschaftliches Rechnen und Datenanalyse verwendet werden. Wenn man tats√§chlich mit Python arbeiten will, empfiehlt es sich, die Anaconda Distribution zu benutzen. Wir werden in dieser Veranstaltung Python benutzen, um ein Experiment zu programmieren. Daf√ºr reicht es aus, den PsychoPy Installer zu verwenden; diesen finden Sie unter diesem Link: PsychoPy. PsychoPy ist ein Python-basiertes Tool, mit dem sich sowohl in einer grafischen Benutzeroberfl√§che (GUI) als auch mit Python Code Experimente programmieren lassen."
  },
  {
    "objectID": "pages/chapters/setup.html#r",
    "href": "pages/chapters/setup.html#r",
    "title": "Setup",
    "section": "R",
    "text": "R\nAb der vierten Sitzung werden wir viel mit R arbeiten, um Daten aufzubereiten und grafisch darzustellen. Daf√ºr m√ºssen Sie die aktuelle Version von R installieren. Diese ist zurzeit R 4.3.2, und kann unter folgender URL geladen werden:\nR üëâ https://cloud.r-project.org/\nWir empfehlen f√ºr die Arbeit mit R die RStudio IDE zu verwenden. Diese ist kostenlos und kann unter folgender URL heruntergeladen werden:\nRStudio üëâ https://www.rstudio.com/products/rstudio/download/#download"
  },
  {
    "objectID": "pages/chapters/setup.html#jasp",
    "href": "pages/chapters/setup.html#jasp",
    "title": "Setup",
    "section": "JASP",
    "text": "JASP\nEinen Teil der Bayesianischen Analysen werden wir mit JASP durchf√ºhren. Die aktuelle Version von JASP ist 0.18.3 und kann unter folgender URL heruntergeladen werden:\nJASP üëâ https://jasp-stats.org/download/"
  }
]