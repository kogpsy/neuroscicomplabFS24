---
title: "Random Dot Paradigma"
description: Programmieren eines klassischen Perceptual Decision-Making Tasks mit PsychoPy.
author:
  - name: Gerda Wyssen
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0001-7427-3149
  - name: Rebekka Borer
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    #orcid: 0000-0001-7427-3149
  - name: Daniel Fitze
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0003-0158-7459 
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography_gw.bib
format:
    html:
        toc: true
---

# Random Dot Experiment

Jeden Tag treffen wir Tausende von kleinen Entscheidungen, meistens unter gewissem Zeitdruck. Viele davon sind trivial (z. B. welches Paar Socken man anzieht) und automatisch (z. B. ob man die Espresso- oder Lungo-Taste auf der Kaffeemaschine drückt). Die meisten Entscheidungen im wirklichen Leben setzen sich eigentlich aus zwei Entscheidungen zusammen: Einerseits der Entscheidung, mit dem Abwägen aufzuhören und aufgrund des aktuellen Wissenstandes zu handeln. Andererseits die Wahl oder Entscheidungshandlung selbst. Dieser sequentielle Charakter der Entscheidungsfindung ist eine grundlegende Eigenschaft des menschlichen Nervensystems und spiegelt seine Unfähigkeit wider, Informationen sofort zu verarbeiten.

*Perzeptuelle Entscheidungen* sind Entscheidungen, welche auf der Wahrnehmung, Einordnung und Integration von Sinnesreizen beruhen. Um beispielsweise eine Strasse sicher überqueren zu können, müssen wir mittels den Sinnesinformationen der Augen und Ohren sowie der Verarbeitung dieser Reize einschätzen mit welcher Geschwindigkeit ein herannahendes Auto unterwegs ist und ob wir lieber abwarten bis es vorbeigefahren ist. Innerhalb der Neurowissenschaften wird *perceptual decision making* untersucht, um die neuronalen Schaltkreise welche Wahrnehmungssignale kodieren, speichern und analysieren zu verstehen und mit beobachtbarem Verhalten in Verbindung zu bringen. Von Interesse ist zum Beispiel wie die Entscheidung ausfällt, wenn die sensorischen Daten undeutlich oder sogar widersprüchlich sind. Besonders spannend ist auch wie Vorwissen (*prior knowledge*) auf das Entscheidungsverhalten einwirkt.

<aside>**Perceptual decision making** is the process by which sensory information is used to guide behavior toward the external world. This involves gathering information through the senses, evaluating and integrating it according to the current goals and internal state of the subject, and using it to produce motor responses. In contrast to choice behavior and decision making in general (...) perceptual decision making emphasizes the role of sensory information in directing behavior (...) within neuroscience, the goal is to reveal the computational mechanisms whereby neural circuits encode, store, and analyze perceptual signals; combine them with other behaviorally relevant information; and use them to resolve conflicts between competing motor plans. @jaeger_perceptual_2014</aside>

Obwohl das Treffen von Entscheidungen für uns etwas sehr Vertrautes ist, ist das Wissen darum, wie das Gehirn diese Entscheidungsaufgaben löst noch sehr begrenzt. Eine einzelne Entscheidung kann schon sehr komplex sein. Um die Dynamik der Entscheidungsfindung zu verstehen, konzentrieren sich die meisten Studien deshalb auf einfache, wiederholbare Wahlprobleme mit nur zwei (binären) Antwortmöglichkeiten. Ein typisches Paradigma in neurowissenschaftlichen Studien ist das *random-dot motion paradigm.* Hierbei muss eine Person entscheiden in welche Richtung sich eine Punktewolke bewegt.

<aside>Das Experiment *Bias in the brain* von @mulder_bias_2012 ist eine Reaktionszeit (RT) Version eines *random-dot motion direction discrimination task*. Sie können [hier](https://www.jneurosci.org/content/32/7/2335) nachlesen, wie der Task verwendet wurde um den Einfluss von Vorwissen auf neuronale Aktivität im Gehirn mittels fMRI zu untersuchen.</aside>


:::callout-caution
## Hands-on: Random Dot Experiment

Lesen Sie zuerst [hier](https://neuronaldynamics.epfl.ch/online/Ch16.S1.html) eine kurze Einführung in das Random Dot Paradigma.

Besprechen Sie dann in kleinen Gruppen folgende Fragen:

-   Für welche neurowissenschaftlichen Forschungsfragen eignet sich dieser Task? Mit welchen weiteren Methoden (fMRI, EEG, Hirnstimulation, etc.) liesse er sich kombinieren und was könnte man dabei lernen? Welche Patientengruppen zeigen auffällige Antworten in diesem Task?

-   Welche "Elemente" des Experiments konnten Sie identifizieren?

-   Welche Stimuluseigenschaften sind relevant für das Experiment? Was macht die Aufgabe einfach? Was macht sie schwieriger?

- Welche Antwortmöglichkeiten haben die Versuchspersonen?

-   Welche Bedingungen würden Sie vergleichen? 

- Welche Stimuluseigenschaften sind wichtig, damit Sie die Resultate nicht verfälschen oder auf was muss geachtet werden bei der Stimulusauswahl?

-   Was denken Sie, misst der Task was er soll? Wie werden die Verhaltensdaten Ihrer Schätzung nach aussehen?

Tipp: Schauen Sie sich diese Stimulusoption [hier](https://www.psychopy.org/builder/components/dots.html#dots) an.

*\[\~10 Minuten\]*
:::

## Kurzbeschrieb Kursexperiment

In unserem Experiment lösen die Versuchspersonen einen Random Dot Task zweimal (in zwei Blöcken). In jedem Block erhalten sie eine andere Instruktion, die Aufgabe bleibt jedoch dieselbe: Sie müssen herausfinden in welche Richtung sich die Punktewolke bewegt. In einem Block werden sie instruiert die Aufgabe __möglichst schnell__ zu lösen. Im anderen Block werden sie instruiert die Aufgabe __möglichst richtig__ zu lösen. Wir werden dann analysieren, wie sich das Entscheidungsverhalten von Menschen verändert, je nachdem wie sie instruiert wurden.

Da Versuchspersonen sehr unterschiedlich gut in dieser Aufgabe sind, soll vor dem Experiment eine Schwellenmesung durchgeführt werden.








<!-- ## 6. Kursexperiment  -->

<!-- # 6.1 Instruction  -->
<!-- **Textkomponente:** -->
<!-- - Text: Hier wird der Text vermerkt zur Instruktion der Versuchsperson. -->

<!-- **Codekomponente:** -->
<!-- - Hier wird die Hintergrundfarbe defniert. -->

<!--     win.color = 'black' -->

<!-- **Responsekomponente - Keyboard** -->

<!-- Basic: -->

<!-- - Start (time (s)): 0 -->

<!-- - Stop (duration (s): Dieses Feld wird leer gelassen. dadurch wird die Instruktion solange angezeigt, bis die Versuchsperson über die Leertaste das Ende der Routine forciert und zum nächsten Block übergeht. -->

<!-- - Allowed keys: 'space' -->

<!-- # 6.1 Cue -->

<!-- # 6.1.1 Fixation pre cue  -->

<!-- **Codekomponente:**  -->

<!-- - Hier wird die Dauer definiert, wie lange das Fixationskreuz vor dem Stimulus angezeigt werden soll. -->

<!--     fixation_duration_pre_cue = randchoice([0.1, 0.35, 0.8, 1.2]) -->

<!-- **Textkomponente:** -->

<!-- - Das Fixationskreuz vor dem Cue soll für die Dauer der Variable "fixation_duration_pre_cue" angezeigt werden. -->

<!-- # 6.1.2 Cue -->

<!-- **Codekomponente:**  -->

<!-- - Hier legen wir fest, welcher Cue angezeigt wird.  -->

<!-- - Wir überprüfen den Inhalt der Schleifenvariable 'cue' und entscheiden, ob der Cue-Text einen Pfeil nach links, einen Pfeil nach rechts oder einfach nur einen Kreis darstellen soll."  -->

<!-- - Die Variabel "cue_path" definiert, in welchem Ordner die drei Bilder abgespeichert sind. -->

<!--     if cue == "left": -->
<!--         cue_path = "img/arrow_left.png" -->
<!--     elif cue == "right": -->
<!--         cue_path = "img/arrow_right.png" -->
<!--     elif cue == "none": -->
<!--         cue_path = "img/neutral.png" -->

<!-- **Imagekomponente:** -->

<!-- - Das entsprechende Bild soll für 60 Frames (1s) angezeigt werden.  -->

<!-- - Zudem wird bei "Image" die Variable "cue_path" angegeben, die wir zuvor definiert haben, damit Psychopy die drei Bilder "arrow_left.png.", arrow_right_png", "neutral.png" im entsprechenden Ordner ("img") findet. -->




<!-- # 6.2 Stimulus - dots  -->

<!-- **Codekomponente:** -->

<!-- - Hier wird die Richtung der dots definiert: -->

<!--     if direction == "right": -->
<!--         dots_direction = 0 -->
<!--     elif direction == "left": -->
<!--         dots_direction = 180 -->

<!-- **Stimuluskomponente - polygon:** -->

<!-- Basic: -->

<!-- - Start (frame N): 0 -->

<!-- - Stop (duration (frames)): 90 (expected duration(s): 1.5) -->

<!-- - Shape: circle -->

<!-- Layout:  -->

<!-- - Size[w,h]: (0.75, 0.75) -->

<!-- - Position[x,y]: (0, 0) -->

<!-- - Orientation: 0 -->

<!-- Appearance:  -->

<!-- - Fill color: black -->

<!-- - Border Color: black -->

<!-- - Contrast: 1 -->

<!-- - Line width: 1 -->

<!-- **Stimuluskomponente - dots:** -->

<!-- Basic: -->

<!-- - Timing (Stimulusdauer): 1500 ms -->

<!-- Layout: -->

<!-- - Dot size (Grösse): 3 (gut sichtbar) -->

<!-- - Field size: 75% des Displays -->

<!-- - Field position: (0.0, 0.0) -->

<!-- Appearance: -->

<!-- - Dot color: [1.0,1.0,1.0] (white) -->

<!-- Dots: -->

<!-- - Number of dots (Anzahl dots): 250 -->

<!-- - Direction (Bewegungsrichtung): $dots_direction (definierte Variable im Codeblock) -->

<!-- - Speed (Geschwindigkeit der Bewegung): 0.0125 -->

<!-- - Coherence (Kohärenz): 0.08 -->

<!-- - Dot life-time: 3 -->

<!-- **Responsekomponente - Keyboard** -->

<!-- Basic: -->

<!-- - Start (frame N): 0 -->

<!-- - Stop (duration (frames)): 90 (expected duration(s): 1.5) -->

<!-- - Allowed keys: 'left', 'right' -->


