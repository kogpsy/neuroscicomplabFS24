---
title: "Random Dot Paradigma"
description: Programmieren eines klassischen Perceptual Decision-Making Tasks mit PsychoPy.
author:
  - name: Gerda Wyssen
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0001-7427-3149
  - name: Rebekka Borer
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    #orcid: 0000-0001-7427-3149
  - name: Daniel Fitze
    # url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0003-0158-7459 
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography_gw.bib
format:
    html:
        toc: true
---

In diesem Kurs erstellen wir mit PsychoPy ein perzeptuelles Entscheidungsexperiment, √§hnlich dem Experiment aus @mulder_bias_2012. Dieses neurowissenschaftliche Experiment untersucht den Einfluss von Vorwissen auf Entscheidungsverhalten von Menschen sowie die dazugeh√∂rigen neuronalen Korrelate. Zudem erstellen wir einen Stroop Task, dieser Test aus der Neuropsychologie untersucht die Inhibition, also das Unterdr√ºcken von Impulsen, zugunsten der richtigen Arbeit.

Jeden Tag treffen wir Tausende von kleinen Entscheidungen, meistens unter gewissem Zeitdruck. Viele davon sind trivial (z. B. welches Paar Socken man anzieht) und automatisch (z. B. ob man die Espresso- oder Lungo-Taste auf der Kaffeemaschine dr√ºckt).Die meisten Entscheidungen im wirklichen Leben setzen sich eigentlich aus zwei Entscheidungen zusammen: Einerseits der Entscheidung, mit dem Abw√§gen aufzuh√∂ren und aufgrund des aktuellen Wissenstandes zu handeln. Andererseits die Wahl oder Entscheidungshandlung selbst. Dieser sequentielle Charakter der Entscheidungsfindung ist eine grundlegende Eigenschaft des menschlichen Nervensystems und spiegelt seine Unf√§higkeit wider, Informationen sofort zu verarbeiten.

*Perzeptuelle Entscheidungen* sind Entscheidungen, welche auf der Wahrnehmung, Einordnung und Integration von Sinnesreizen beruhen. Um beispielsweise eine Strasse sicher √ºberqueren zu k√∂nnen, m√ºssen wir mittels den Sinnesinformationen der Augen und Ohren sowie der Verarbeitung dieser Reize einsch√§tzen mit welcher Geschwindigkeit ein herannahendes Auto unterwegs ist und ob wir lieber abwarten bis es vorbeigefahren ist. Innerhalb der Neurowissenschaften wird *perceptual decision making* untersucht, um die neuronalen Schaltkreise welche Wahrnehmungssignale kodieren, speichern und analysieren zu verstehen und mit beobachtbarem Verhalten in Verbindung zu bringen. Von Interesse ist zum Beispiel wie die Entscheidung ausf√§llt, wenn die sensorischen Daten undeutlich oder sogar widerspr√ºchlich sind. Besonders spannend ist auch wie Vorwissen (*prior knowledge*) auf das Entscheidungsverhalten einwirkt.

<aside>**Perceptual decision making** is the process by which sensory information is used to guide behavior toward the external world. This involves gathering information through the senses, evaluating and integrating it according to the current goals and internal state of the subject, and using it to produce motor responses. In contrast to choice behavior and decision making in general (...) perceptual decision making emphasizes the role of sensory information in directing behavior (...) within neuroscience, the goal is to reveal the computational mechanisms whereby neural circuits encode, store, and analyze perceptual signals; combine them with other behaviorally relevant information; and use them to resolve conflicts between competing motor plans. @jaeger_perceptual_2014</aside>

Obwohl das Treffen von Entscheidungen f√ºr uns etwas sehr Vertrautes ist, ist das Wissen darum, wie das Gehirn diese Entscheidungsaufgaben l√∂st noch sehr begrenzt. Eine einzelne Entscheidung kann schon sehr komplex sein. Um die Dynamik der Entscheidungsfindung zu verstehen, konzentrieren sich die meisten Studien deshalb auf einfache, wiederholbare Wahlprobleme mit nur zwei (bin√§ren) Antwortm√∂glichkeiten. Ein typisches Paradigma in neurowissenschaftlichen Studien ist das *random-dot motion paradigm.* Hierbei muss eine Person entscheiden in welche Richtung sich eine Punktewolke bewegt.


<!-- # Experiment -->

<!-- Das Experiment *Bias in the brain* von @mulder_bias_2012 ist eine Reaktionszeit (RT) Version eines *random-dot motion direction discrimination task*. In diesem Paradigma sieht die Versuchsperson sich bewegende Punkte, die sich in unterschiedliche Richtungen bewegen. Ihre Aufgabe ist es zu entscheiden, ob sich die Punkte mehrheitlich nach rechts oder nach links bewegen. Bei einem Koh√§renzniveau von beispielsweise 80% bewegen sich 80% der Punkte in dieselbe Richtung. Die Aufgabenschwierigkeit steigt je tiefer das Koh√§renzniveau ist. -->

<!-- ::: {layout-ncol="2"} -->
<!-- ![*Random-dot motion paradigm* [@mulder_bias_2012]](../../assets/images/mulder_random_dot_paradigm.JPG) -->
<!-- ::: -->

<!-- @mulder_bias_2012 haben untersucht, wie Vorwissen (*prior knowledge*) den Entscheidungsprozess in einem *random-dot motion task* beeinflusst, und ob es ein neuronales Korrelat f√ºr solches Vorwissen gibt. Aus diesem Grund haben sie zwei verschiedene Formen von Vorwissen benutzt: -->

<!-- -   *prior probability*: Die *a priori Wahrscheinlichkeit*, dass die Punktwolke sich nach rechts oder nach links bewegen wird. -->

<!-- -   *potential payoff*: Eine assymmetrische Belohnung f√ºr korrekte links/rechts Entscheidungen. -->

<!-- ::: callout-important -->
<!-- Wie wirken sich die beiden Formen von Vorwissen auf das Antwortverhalten aus? -->

<!-- -   Bei welcher Bedingung antworten die Personen schneller? -->

<!-- -   Wo machen sie mehr Fehler? -->

<!-- *Was denken Sie? Diskutieren Sie die Fragen in kleinen Gruppen ohne im Paper nachzuschauen.* -->
<!-- ::: -->



<!-- ::: {layout-ncol="1"} -->
<!-- ![Trial des *random-dot motion task* von @mulder_bias_2012](../../assets/images/bias-payoff-mulder.png) -->
<!-- ::: -->

<!-- ::: callout-important -->
<!-- Schauen Sie sich in PsychoPy die verschiedenen m√∂glichen Bausteine f√ºr Experimente an. Versuchen Sie St√ºck f√ºr St√ºck das Experiment von @mulder_bias_2012 nachzubauen. -->

<!-- Hilfreiche Informationen zum Erstellen von Experimenten in PsychoPy finden Sie hier: -->

<!-- -   [PsychoPy Website](https://www.psychopy.org/) -->

<!-- -   [Walk-through: Builder](https://tu-coding-outreach-group.github.io/cog_summer_workshops_2021/psychopy/index.html) -->


<!-- Diese CSV-Datei (die Bedingungsdatei) definiert die beiden loop Variablen *cue* und *direction*. Das Stichwort kann entweder *left*, *right* oder *none*, sein, w√§hrend die Richtung *left* oder *right* sein kann. -->

<!-- In der Benutzeroberfl√§che k√∂nnen wir die Variablen `loopType` und `nReps` f√ºr die Schleife angeben, wenn wir sie anklicken. Mit ersterer k√∂nnen wir steuern, ob wir z.B. die Zeilen in der Bedingungsdatei mischen oder sie sequentiell von oben nach unten ablaufen lassen wollen, w√§hrend die letztere definiert, wie oft jede Zeile der Bedingungsdatei wiederholt werden soll. -->

<!-- F√ºr die *main_blocks_loop* haben wir eine Bedingungsdatei mit 80 Zeilen, die 40 neutralen Versuchen und 40 verzerrten Versuchen entsprechen. In der einen H√§lfte der neutralen Trials bewegen sich die Punkte nach rechts, in der anderen H√§lfte nach links. Bei den voreingenommenen Versuchen sind 32 der Hinweise g√ºltig (d. h. sie stimmen mit der Bewegungsrichtung der Punkte √ºberein) und 16 ung√ºltig, wobei sich die Punkte sowohl bei g√ºltigen als auch bei ung√ºltigen Hinweisen in 50 % der Versuche nach rechts und in den anderen 50 % der Versuche nach links bewegen. -->

<!-- Die Variable `nReps` wird auf `2` gesetzt, so dass alle diese Reihen zweimal durchlaufen werden (insgesamt 160 Versuche), und die Variable "loopType" wird auf `random` gesetzt, so dass die Versuche in zuf√§lliger Reihenfolge durchgef√ºhrt werden. -->

<!-- ## Daten -->

<!-- Wenn man die default-Einstellungen nicht √§ndert, speichert PsychoPy die Daten automatisch in einem trial-by-trial CSV File. Das bedeutet, dass jeder Trial 1 Zeile generiert. Das CSV File erh√§lt einen Namen, der sich aus der *Versuchspersonen-ID*, dem *Namen des Experiments*, und dem aktuellen *Datum inkl. Uhrzeit* zusammensetzt. So ist es m√∂glich, mit derselben Versuchspersonen-ID beliebig oft das Experiment zu wiederholen. Die CSV Files werden in einem Ordner mit dem Name **data** abgelegt. -->

<!-- <aside>Bei der Wahl vom Datenfile-Namen empfiehlt es sich **immer** Datum und Uhrzeit anzuh√§ngen. Dies verhindert, dass Daten √ºberschrieben werden, wenn z.B. eine Versuchspersonen-ID falsch eingetippt oder doppelt vergeben wird.</aside> -->

<!-- ## Degrees of Visual Angle -->

<!-- Oftmals werden Gr√∂ssenangaben von Stimuli noch in Pixel oder Zentimeter, sondern in *degrees of visual angle* gemacht. Dies hat den Vorteil, dass die Angaben nicht vom Monitor selber oder der Entferung vom Monitor abh√§ngig sind. *Degrees of visual angle* gibt die wahrgenommene Gr√∂sse des Stimulus an, und ber√ºcksichtigt die Gr√∂sse des Monitors und des Stimulus, und die Entfernung der Versuchsperson vom Monitor. Weitere Informationen dazu finden Sie auf der Website von üëâ [OpenSesame](https://osdoc.cogsci.nl/3.3/visualangle/). √úblicherweise entspricht ein *degrees of visual angle* etwa einem cm bei einer Entfernung von 57 cm vom Monitor. -->

<!-- Zur Umrechnung zwischen cm und *degrees of visual angle* finden Sie unter diesem üëâ [Link](https://www.sr-research.com/eye-tracking-blog/background/visual-angle/) mehr Information. -->

<!-- <aside>[OpenSesame](https://osdoc.cogsci.nl/) ist ein weiteres, Python-basierendes Programm f√ºr die Erstellung behavioraler Experimente.</aside> -->

<!-- # Experiment 1: Random Dot Paradigma  -->

<!-- Jeden Tag treffen wir Tausende von kleinen Entscheidungen, meistens unter gewissem Zeitdruck. Viele davon sind trivial (z. B. welches Paar Socken man anzieht) und automatisch (z. B. ob man die Espresso- oder Lungo-Taste auf der Kaffeemaschine dr√ºckt). -->

<!-- <!-- Die meisten Entscheidungen im wirklichen Leben setzen sich eigentlich aus zwei Entscheidungen zusammen: Einerseits der Entscheidung, mit dem Abw√§gen aufzuh√∂ren und aufgrund des aktuellen Wissenstandes zu handeln. Andererseits die Wahl oder Entscheidungshandlung selbst. Wenn Sie ein Experiment durchf√ºhren m√ºssen Sie beispielsweise Daten sammeln, und dann entscheiden, wann die Datenerfassung beendet, mit der Analyse begonnen und eine Schlussfolgerung gezogen wird. Dieser sequentielle Charakter der Entscheidungsfindung ist eine grundlegende Eigenschaft des menschlichen Nervensystems und spiegelt seine Unf√§higkeit wider, Informationen sofort zu verarbeiten. --> -->

<!-- *Perzeptuelle Entscheidungen* sind Entscheidungen, welche auf der Wahrnehmung, Einordnung und Integration von Sinnesreizen beruhen. Um beispielsweise eine Strasse sicher √ºberqueren zu k√∂nnen, m√ºssen wir mittels den Sinnesinformationen der Augen und Ohren sowie der Verarbeitung dieser Reize einsch√§tzen mit welcher Geschwindigkeit ein herannahendes Auto unterwegs ist und ob wir lieber abwarten bis es vorbeigefahren ist. Innerhalb der Neurowissenschaften wird *perceptual decision making* untersucht, um die neuronalen Schaltkreise welche Wahrnehmungssignale kodieren, speichern und analysieren zu verstehen und mit beobachtbarem Verhalten in Verbindung zu bringen. Von Interesse ist zum Beispiel wie die Entscheidung ausf√§llt, wenn die sensorischen Daten undeutlich oder sogar widerspr√ºchlich sind. Besonders spannend ist auch wie Vorwissen (*prior knowledge*) auf das Entscheidungsverhalten einwirkt. -->


<!-- <aside>**Perceptual decision making** is the process by which sensory information is used to guide behavior toward the external world. This involves gathering information through the senses, evaluating and integrating it according to the current goals and internal state of the subject, and using it to produce motor responses. In contrast to choice behavior and decision making in general (...) perceptual decision making emphasizes the role of sensory information in directing behavior (...) within neuroscience, the goal is to reveal the computational mechanisms whereby neural circuits encode, store, and analyze perceptual signals; combine them with other behaviorally relevant information; and use them to resolve conflicts between competing motor plans. @jaeger_perceptual_2014</aside> -->

<!-- ::: callout-important -->
<!-- - In welchen Situationen treffen wir perzeptuelle Entscheidungen? -->
<!-- - Wo ist der Einfluss von Vorwissen auf perzeptuelle Entscheidungen alltagsrelevant?  -->

<!-- *Diskutieren Sie die Fragen in kleinen Gruppen und finden Sie je 3 Beispiele.* -->
<!-- ::: -->

<!-- Obwohl das Treffen von Entscheidungen f√ºr uns etwas sehr Vertrautes ist, ist das Wissen darum, wie das Gehirn diese Entscheidungsaufgaben l√∂st noch sehr begrenzt. Eine einzelne Entscheidung kann schon sehr komplex sein. Um die Dynamik der Entscheidungsfindung zu verstehen, konzentrieren sich die meisten Studien deshalb auf einfache, wiederholbare Wahlprobleme mit nur zwei (bin√§ren) Antwortm√∂glichkeiten. Ein typisches Paradigma in neurowissenschaftlichen Studien ist das *random-dot motion paradigm.* Hierbei muss eine Person entscheiden in welche Richtung sich eine Punktewolke bewegt. -->

<!-- # Experiment -->

<!-- Das Experiment *Bias in the brain* von @mulder_bias_2012 ist eine Reaktionszeit (RT) Version eines *random-dot motion direction discrimination task*. In diesem Paradigma sieht die Versuchsperson sich bewegende Punkte, die sich in unterschiedliche Richtungen bewegen. Ihre Aufgabe ist es zu entscheiden, ob sich die Punkte mehrheitlich nach rechts oder nach links bewegen. Bei einem Koh√§renzniveau von beispielsweise 80% bewegen sich 80% der Punkte in dieselbe Richtung. Die Aufgabenschwierigkeit steigt je tiefer das Koh√§renzniveau ist. -->

<!-- ::: {layout-ncol=2} -->
<!-- ![*Random-dot motion paradigm* [@mulder_bias_2012] ](../../assets/images/mulder_random_dot_paradigm.JPG) -->
<!-- ::: -->

<!-- @mulder_bias_2012 haben untersucht, wie Vorwissen (*prior knowledge*) den Entscheidungsprozess in einem *random-dot motion task* beeinflusst, und ob es ein neuronales Korrelat f√ºr solches Vorwissen gibt. Aus diesem Grund haben sie zwei verschiedene Formen von Vorwissen benutzt: -->

<!-- - *prior probability*: Die *a priori Wahrscheinlichkeit*, dass die Punktwolke sich nach rechts oder nach links bewegen wird. -->

<!-- - *potential payoff*: Eine assymmetrische Belohnung f√ºr korrekte links/rechts Entscheidungen. -->


<!-- ::: callout-important -->
<!-- Wie wirken sich die beiden Formen von Vorwissen auf das Antwortverhalten aus? -->

<!-- - Bei welcher Bedingung antworten die Personen schneller?  -->

<!-- - Wo machen sie mehr Fehler? -->

<!-- *Was denken Sie? Diskutieren Sie die Fragen in kleinen Gruppen ohne im Paper nachzuschauen.* -->
<!-- ::: -->

<!-- Das Vorwissen (auch *bias*) der Versuchsperson wird in diesem Experiment durch einen Hinweisreiz (*cue*) in Form eines Pfeils oder eines neutralen Stimulus operationalisiert. Der Pfeil zeigt die wahrscheinlichere Bewegungsrichtung an. Vor und nach dem Cue wird ein Fixationskreuz gezeigt. Alle weiteren Parameter k√∂nnen Sie dem Paper entnehmen [@mulder_bias_2012]. -->

<!-- <aside>Die von @mulder_bias_2012 gefundenen Auswirkungen von Vorwissen auf Reaktionszeiten, Fehler sowie die dazugeh√∂rigen neuronalen Korrelate besprechen wir in diesem Kurs nur kurz. F√ºr die Datenanalyse wurde mit einem *diffusion decision model (DDM)* gearbeitet. Dieses sprengt den Rahmen dieses Kurses. Interessierte finden [hier](https://kogpsy.github.io/neuroscicomplab/08-ddm.html) Informationen und Erkl√§rungen zum DDM.</aside> -->




<!-- ## Ablauf -->

<!-- Das Experiment besteht aus der Instruktion, mehreren Versuchsbl√∂cken und der Nachbesprechung. Die Anweisungen und die Nachbesprechung sind Textanzeigen, w√§hrend die Versuche (und die Versuchsbl√∂cke) etwas komplizierter sind.  -->

<!-- ## Trial -->

<!-- Zun√§chst wird ein Fixationskreuz entweder f√ºr 100 ms, 350 ms, 800 ms oder 1200 ms angezeigt. Die tats√§chliche Dauer wird f√ºr jeden Versuch randomisiert. Eine solche Randomisierung kann nicht √ºber die Benutzeroberfl√§che vorgenommen werden, sondern erfordert ein kleines St√ºck Python-Code. Sehen Sie sich den Codeblock der Routine *Fixation_pre_cue* an, um zu erfahren, wie dies erreicht werden kann. -->

<!-- <aside>Das Experiment wurde im Scanner und ausserhalb durchgef√ºhrt. Die beiden Version unterscheiden sich ganz stark in ihrem Timing. Wir implementieren hier die Scanner Version des Tasks.</aside> -->

<!-- Anschlie√üend wird f√ºr 1000 ms ein Hinweis (cue) pr√§sentiert. Dabei kann es sich entweder um einen Pfeil handeln, der nach rechts zeigt, einen Pfeil, der nach links zeigt, oder einen einfachen Kreis (f√ºr die Kontrollbedingung). Der Codeblock in der *Cue*-Routine legt den tats√§chlichen Hinweis f√ºr jeden Versuch auf der Grundlage der Schleifenvariablen **cue** fest. -->

<!-- Nach dem Cue wird ein weiteres Fixationskreuz pr√§sentiert - dieses Mal f√ºr entweder 3400 ms, 4000 ms, 4500 ms oder 5000 ms. Wie beim ersten Fixationskreuz wird die tats√§chliche Dauer zuf√§llig gew√§hlt. -->

<!-- Nach dem zweiten Fixationskreuz wird f√ºr 1500 ms der eigentliche Stimulus angezeigt: ein *random dot kinematogram* (RDK). Die Punkte bewegen sich entweder nach rechts oder nach links mit einem Koh√§renzniveau von 8%. Die Bewegungsrichtung eines einzelnen Versuchs wird durch die Schleifenvariable **direction** bestimmt und im Codeblock der Routine *Dots* festgelegt. Die Teilnehmer m√ºssen entscheiden, welche Richtung sie wahrnehmen, und k√∂nnen ihre Antwort durch Dr√ºcken der linken oder rechten Pfeiltaste auf der Tastatur eingeben. -->

<!-- Schlie√ülich wird ein Feedback-Bildschirm angezeigt. Wenn der Teilnehmer innerhalb der ersten 100 ms geantwortet hat, wird der Hinweis "zu schnell" angezeigt. Wurde w√§hrend des gesamten Stimulus keine Antwort erfasst, wird das Wort "miss" angezeigt. War die Antwort richtig, wird "+5 Punkte" angezeigt, war sie falsch, wird "+0 Punkte" angezeigt. -->

<!-- ##  Experimentalschleife: main_blocks_loop -->

<!-- Mit _loops_ in PsychoPy haben wir die M√∂glichkeit, eine oder mehrere Routinen zu wiederholen. In diesem Experiment wird dies genutzt, um denselben Versuch (wie oben beschrieben) mehrfach zu zeigen, aber jedes Mal mit anderen Werten f√ºr die _loop variables_. Eine Schleife wiederholt also einen Versuch einige Male, wobei die Schleifenvariablen bei jeder Wiederholung ge√§ndert werden. Der Versuch selbst wiederum liest diese Schleifenvariablen aus, um z.B. zu wissen, ob sich die Punkte nach rechts oder nach links bewegen sollen. Hier wird nur die *main_blocks_loop* erkl√§rt, aber das Prinzip gilt auch f√ºr die *practice_block_loop*. -->

<!-- Um die verschiedenen Werte f√ºr die Schleifenvariablen zu definieren, m√ºssen wir eine einfache CSV-Datei erstellen: -->

<!-- ```csv -->
<!-- cue,direction -->
<!-- left,right -->
<!-- left,left -->
<!-- none,right -->
<!-- ... -->
<!-- ``` -->

<!-- Diese CSV-Datei (die Bedingungsdatei) definiert die beiden loop Variablen *cue* und *direction*. Das Stichwort kann entweder  _left_, _right_ oder _none_, sein, w√§hrend die Richtung  _left_ oder _right_ sein kann. -->

<!-- In der Benutzeroberfl√§che k√∂nnen wir die Variablen `loopType` und `nReps` f√ºr die Schleife angeben, wenn wir sie anklicken. Mit ersterer k√∂nnen wir steuern, ob wir z.B. die Zeilen in der Bedingungsdatei mischen oder sie sequentiell von oben nach unten ablaufen lassen wollen, w√§hrend die letztere definiert, wie oft jede Zeile der Bedingungsdatei wiederholt werden soll. -->

<!-- F√ºr die *main_blocks_loop* haben wir eine Bedingungsdatei mit 80 Zeilen, die 40 neutralen Versuchen und 40 verzerrten Versuchen entsprechen. In der einen H√§lfte der neutralen Trials bewegen sich die Punkte nach rechts, in der anderen H√§lfte nach links. Bei den voreingenommenen Versuchen sind 32 der Hinweise g√ºltig (d. h. sie stimmen mit der Bewegungsrichtung der Punkte √ºberein) und 16 ung√ºltig, wobei sich die Punkte sowohl bei g√ºltigen als auch bei ung√ºltigen Hinweisen in 50 % der Versuche nach rechts und in den anderen 50 % der Versuche nach links bewegen. -->

<!-- Die Variable `nReps` wird auf `2` gesetzt, so dass alle diese Reihen zweimal durchlaufen werden (insgesamt 160 Versuche), und die Variable "loopType" wird auf `random` gesetzt, so dass die Versuche in zuf√§lliger Reihenfolge durchgef√ºhrt werden. -->

<!-- ## Daten -->

<!-- Wenn man die default-Einstellungen nicht √§ndert, speichert PsychoPy die Daten automatisch in einem trial-by-trial CSV File. Das bedeutet, dass jeder Trial 1 Zeile generiert. Das CSV File erh√§lt einen Namen, der sich aus der _Versuchspersonen-ID_, dem _Namen des Experiments_, und dem aktuellen _Datum inkl. Uhrzeit_ zusammensetzt. So ist es m√∂glich, mit derselben Versuchspersonen-ID beliebig oft das Experiment zu wiederholen. Die CSV Files werden in einem Ordner mit dem Name __data__ abgelegt. -->

<!-- <aside>Bei der Wahl vom Datenfile-Namen empfiehlt es sich **immer** Datum und Uhrzeit anzuh√§ngen. Dies verhindert, dass Daten √ºberschrieben werden, wenn z.B. eine Versuchspersonen-ID falsch eingetippt oder doppelt vergeben wird.</aside> -->


<!-- ## Degrees of Visual Angle -->

<!-- Oftmals werden Gr√∂ssenangaben von Stimuli noch in Pixel oder Zentimeter, sondern in _degrees of visual angle_ gemacht. Dies hat den Vorteil, dass die Angaben nicht vom Monitor selber oder der Entferung vom Monitor abh√§ngig sind. _Degrees of visual angle_ gibt die wahrgenommene Gr√∂sse des Stimulus an, und ber√ºcksichtigt die Gr√∂sse des Monitors und des Stimulus, und die Entfernung der Versuchsperson vom Monitor. Weitere Informationen dazu finden Sie auf der Website von üëâ [OpenSesame](https://osdoc.cogsci.nl/3.3/visualangle/). √úblicherweise entspricht ein _degrees of visual angle_ etwa einem cm bei einer Entfernung von 57 cm vom Monitor. -->

<!-- Zur Umrechnung zwischen cm und _degrees of visual angle_ finden Sie unter diesem üëâ [Link](https://www.sr-research.com/eye-tracking-blog/background/visual-angle/) mehr Information. -->

<!-- <aside>  -->
<!-- [OpenSesame](https://osdoc.cogsci.nl/) ist ein weiteres, Python-basierendes Programm f√ºr die Erstellung behavioraler Experimente.   -->
<!-- </aside> -->


## 1. Random Dot Stimulus

Erstellen Sie einen **Random Dot Stimulus**. Beachten Sie folgende Aspekte:

**Basic:**

- Timing (Stimulusdauer): 1500 ms

:::callout-tip
## Tipp
**frames vs time(s)**: Die pr√§ziseste Art zur Steuerung des Timing von Stimuli besteht darin, sie f√ºr eine festgelegte Anzahl von Frames zu pr√§sentieren. Bei einer Framerate  von 60 Hz k√∂nnen Sie Ihren Stimulus nicht √ºber einen Zeitraum von z. B. 120 ms pr√§sentieren; die Bildperiode w√ºrde Sie auf einen Zeitraum von 116,7 ms (7 Bilder) oder 133,3 ms (8 Bilder) beschr√§nken. Dies ist besonders wichtig f√ºr Reaktionszeit-Aufgaben und EEG-Studien, wo ein pr√§zises Millisekunden-Timing erforderlich ist. [Presening Stimuli - Psychopy](https://www.psychopy.org/coder/codeStimuli.html)
:::

**Layout:**

- Dot size (Gr√∂sse): 3 (gut sichtbar)

- Field size: 75% des Displays

- Field position: (0.0, 0.0)

**Appearance:**

- Dot color: [1.0,1.0,1.0] (white)

**Dots**

- Number of dots (Anzahl dots): 250

- Direction (Bewegungsrichtung): $dots_direction (vordefinierte Variable im Codeblock)
*(Die Bewegungsrichtung k√∂nnen Sie noch vernachl√§ssigen.)*

- Speed (Geschwindigkeit der Bewegung): 0.0125

- Coherence (Koh√§renz): 0.08

- Dot life-time: 3


## 2. Trialschleife

Erstellen Sie eine **Trial**-Schleife. 

- Fixation 1 (100/350/800/1200 ms) *(Zur Vereinfachung k√∂nnen Sie hier auch nur einen Wert w√§hlen.)*
    
- Cue (1000 ms)
    
- Fixation 2 (3400/4000/4500/5000 ms) *(Zur Vereinfachung k√∂nnen Sie hier auch nur einen Wert w√§hlen.)*
    
- Dots (1500 ms)
    
- Feedback

- Timing (ITI: Inter-Trial-Intervall)

- Antwort der Versuchsperson aufnehmen


*(Die Variation der Bewegungsrichtung und des Vorwissens k√∂nnen Sie noch vernachl√§ssigen.)*


## 3. Bedingungen

- Variieren Sie die Bewegungsrichtung der Random Dots mit dem *conditions.csv* file: Bewegungsrichtung ist zu 50% rechts, zu 50% links.

- Variieren Sie den Cue f√ºrs Vorwissen in jedem Trial mit dem *conditions.csv* file: Der Cue kann valide (4x), invalide (2x) oder neutral (4x) sein. Die Bewegungsrichtungen m√ºssen auf alle Bedingungen gleich verteilt sein.


## 4. Instruktion und Debriefing

- F√ºgen Sie zu Beginn des Experiments eine Instruktion hinzu.

- F√ºgen Sie am Ende des Experiments ein Debriefing hinzu.


## 5. Test

F√ºhren Sie das Experiment aus und schauen Sie sich den Datensatz an: Sind die untenstehenden Infos auf jeder Zeile vorhanden?

- Versuchspersonennummer

- Richtung des Stimulus

- Cue / Vorwissen

- Antwort der Versuchsperson

- Antwortdauer der Versuchsperson

## 6. Kursexperiment 

- 

## 7. √úbungsexperiment

- Laden Sie [hier](https://kogpsy.github.io/neuroscicomplabFS23/pages/chapters/uebung_1.html) das Experiment f√ºr **√úbung 1** herunter. 

- Vergleichen Sie das Experiment mit Ihrer Version, was f√§llt Ihnen auf?


